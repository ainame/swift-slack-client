// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_Migration
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse`.
    public struct MigrationExchangeResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/enterprise_id`.
        public var enterpriseId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/invalid_user_ids`.
        public var invalidUserIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/team_id`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/user_id_map`.
        public var userIdMap: OpenAPIRuntime.OpenAPIObjectContainer?
        /// - Remark: Generated from `#/components/schemas/MigrationExchangeResponse/warning`.
        public var warning: Swift.String?
        /// Creates a new `MigrationExchangeResponse`.
        ///
        /// - Parameters:
        ///   - enterpriseId:
        ///   - error:
        ///   - invalidUserIds:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - teamId:
        ///   - userIdMap:
        ///   - warning:
        public init(
            enterpriseId: Swift.String? = nil,
            error: Swift.String? = nil,
            invalidUserIds: [Swift.String]? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            teamId: Swift.String? = nil,
            userIdMap: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
            warning: Swift.String? = nil
        ) {
            self.enterpriseId = enterpriseId
            self.error = error
            self.invalidUserIds = invalidUserIds
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.teamId = teamId
            self.userIdMap = userIdMap
            self.warning = warning
        }
    }
}
#endif
