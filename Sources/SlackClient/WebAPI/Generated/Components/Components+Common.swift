// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif

#if canImport(SlackBlockKit)
import SlackBlockKit
#endif
/// Types generated from the components section of the OpenAPI document.

extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/ResponseMetadata`.
    public struct ResponseMetadata: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ResponseMetadata/messages`.
        public var messages: [Swift.String]?
        /// Creates a new `ResponseMetadata`.
        ///
        /// - Parameters:
        ///   - messages:
        public init(messages: [Swift.String]? = nil) {
            self.messages = messages
        }
    }
    /// - Remark: Generated from `#/components/schemas/Activity`.
    public struct Activity: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Activity/level`.
        public var level: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/source`.
        public var source: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/payload`.
        public var payload: Components.Schemas.Payload?
        /// - Remark: Generated from `#/components/schemas/Activity/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Activity/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/eventType`.
        public var eventType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/componentType`.
        public var componentType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/componentId`.
        public var componentId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/enterpriseId`.
        public var enterpriseId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/traceId`.
        public var traceId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Activity/parentExecutionId`.
        public var parentExecutionId: Swift.String?
        /// Creates a new `Activity`.
        ///
        /// - Parameters:
        ///   - level:
        ///   - source:
        ///   - payload:
        ///   - created:
        ///   - appId:
        ///   - eventType:
        ///   - componentType:
        ///   - componentId:
        ///   - teamId:
        ///   - enterpriseId:
        ///   - traceId:
        ///   - parentExecutionId:
        public init(
            level: Swift.String? = nil,
            source: Swift.String? = nil,
            payload: Components.Schemas.Payload? = nil,
            created: Swift.Int? = nil,
            appId: Swift.String? = nil,
            eventType: Swift.String? = nil,
            componentType: Swift.String? = nil,
            componentId: Swift.String? = nil,
            teamId: Swift.String? = nil,
            enterpriseId: Swift.String? = nil,
            traceId: Swift.String? = nil,
            parentExecutionId: Swift.String? = nil
        ) {
            self.level = level
            self.source = source
            self.payload = payload
            self.created = created
            self.appId = appId
            self.eventType = eventType
            self.componentType = componentType
            self.componentId = componentId
            self.teamId = teamId
            self.enterpriseId = enterpriseId
            self.traceId = traceId
            self.parentExecutionId = parentExecutionId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Payload`.
    public struct Payload: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Payload/actor`.
        public var actor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/log`.
        public var log: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/trigger`.
        public var trigger: Components.Schemas.Trigger?
        /// - Remark: Generated from `#/components/schemas/Payload/inputs`.
        public var inputs: Components.Schemas.Inputs?
        /// - Remark: Generated from `#/components/schemas/Payload/details`.
        public var details: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/action`.
        public var action: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/execOutcome`.
        public var execOutcome: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/workflowName`.
        public var workflowName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/functionName`.
        public var functionName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/functionType`.
        public var functionType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/functionId`.
        public var functionId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/functionExecutionId`.
        public var functionExecutionId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/totalSteps`.
        public var totalSteps: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Payload/currentStep`.
        public var currentStep: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Payload/billingReason`.
        public var billingReason: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Payload/isBillingExcluded`.
        public var isBillingExcluded: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Payload/channelId`.
        public var channelId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/botUserId`.
        public var botUserId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/requestType`.
        public var requestType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/datastoreName`.
        public var datastoreName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/userId`.
        public var userId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Payload/bundleSizeKb`.
        public var bundleSizeKb: Swift.Int?
        /// Creates a new `Payload`.
        ///
        /// - Parameters:
        ///   - actor:
        ///   - error:
        ///   - log:
        ///   - type:
        ///   - trigger:
        ///   - inputs:
        ///   - details:
        ///   - action:
        ///   - execOutcome:
        ///   - workflowName:
        ///   - functionName:
        ///   - functionType:
        ///   - functionId:
        ///   - functionExecutionId:
        ///   - totalSteps:
        ///   - currentStep:
        ///   - billingReason:
        ///   - isBillingExcluded:
        ///   - channelId:
        ///   - botUserId:
        ///   - requestType:
        ///   - datastoreName:
        ///   - teamId:
        ///   - userId:
        ///   - bundleSizeKb:
        public init(
            actor: Swift.String? = nil,
            error: Swift.String? = nil,
            log: Swift.String? = nil,
            type: Swift.String? = nil,
            trigger: Components.Schemas.Trigger? = nil,
            inputs: Components.Schemas.Inputs? = nil,
            details: Swift.String? = nil,
            action: Swift.String? = nil,
            execOutcome: Swift.String? = nil,
            workflowName: Swift.String? = nil,
            functionName: Swift.String? = nil,
            functionType: Swift.String? = nil,
            functionId: Swift.String? = nil,
            functionExecutionId: Swift.String? = nil,
            totalSteps: Swift.Int? = nil,
            currentStep: Swift.Int? = nil,
            billingReason: [Swift.String]? = nil,
            isBillingExcluded: Swift.Bool? = nil,
            channelId: Swift.String? = nil,
            botUserId: Swift.String? = nil,
            requestType: Swift.String? = nil,
            datastoreName: Swift.String? = nil,
            teamId: Swift.String? = nil,
            userId: Swift.String? = nil,
            bundleSizeKb: Swift.Int? = nil
        ) {
            self.actor = actor
            self.error = error
            self.log = log
            self.type = type
            self.trigger = trigger
            self.inputs = inputs
            self.details = details
            self.action = action
            self.execOutcome = execOutcome
            self.workflowName = workflowName
            self.functionName = functionName
            self.functionType = functionType
            self.functionId = functionId
            self.functionExecutionId = functionExecutionId
            self.totalSteps = totalSteps
            self.currentStep = currentStep
            self.billingReason = billingReason
            self.isBillingExcluded = isBillingExcluded
            self.channelId = channelId
            self.botUserId = botUserId
            self.requestType = requestType
            self.datastoreName = datastoreName
            self.teamId = teamId
            self.userId = userId
            self.bundleSizeKb = bundleSizeKb
        }
    }
    /// - Remark: Generated from `#/components/schemas/Inputs`.
    public typealias Inputs = OpenAPIRuntime.OpenAPIObjectContainer
    /// - Remark: Generated from `#/components/schemas/Trigger`.
    public struct Trigger: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Trigger/url`.
        public var url: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Trigger/customizableInputParameters`.
        public var customizableInputParameters: [Components.Schemas.CustomizableInputParameter]?
        /// Creates a new `Trigger`.
        ///
        /// - Parameters:
        ///   - url:
        ///   - customizableInputParameters:
        public init(
            url: Swift.String? = nil,
            customizableInputParameters: [Components.Schemas.CustomizableInputParameter]? = nil
        ) {
            self.url = url
            self.customizableInputParameters = customizableInputParameters
        }
    }
    /// - Remark: Generated from `#/components/schemas/Config`.
    public struct Config: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Config/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Config/workflowAuthStrategy`.
        public var workflowAuthStrategy: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Config/domainRestrictions`.
        public var domainRestrictions: Components.Schemas.DomainRestrictions?
        /// Creates a new `Config`.
        ///
        /// - Parameters:
        ///   - appId:
        ///   - workflowAuthStrategy:
        ///   - domainRestrictions:
        public init(
            appId: Swift.String? = nil,
            workflowAuthStrategy: Swift.String? = nil,
            domainRestrictions: Components.Schemas.DomainRestrictions? = nil
        ) {
            self.appId = appId
            self.workflowAuthStrategy = workflowAuthStrategy
            self.domainRestrictions = domainRestrictions
        }
    }
    /// - Remark: Generated from `#/components/schemas/ApprovedApp`.
    public struct ApprovedApp: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ApprovedApp/app`.
        public var app: Components.Schemas.App?
        /// - Remark: Generated from `#/components/schemas/ApprovedApp/scopes`.
        public var scopes: [Components.Schemas.Scope]?
        /// - Remark: Generated from `#/components/schemas/ApprovedApp/dateUpdated`.
        public var dateUpdated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ApprovedApp/lastResolvedBy`.
        public var lastResolvedBy: Components.Schemas.LastResolvedBy?
        /// Creates a new `ApprovedApp`.
        ///
        /// - Parameters:
        ///   - app:
        ///   - scopes:
        ///   - dateUpdated:
        ///   - lastResolvedBy:
        public init(
            app: Components.Schemas.App? = nil,
            scopes: [Components.Schemas.Scope]? = nil,
            dateUpdated: Swift.Int? = nil,
            lastResolvedBy: Components.Schemas.LastResolvedBy? = nil
        ) {
            self.app = app
            self.scopes = scopes
            self.dateUpdated = dateUpdated
            self.lastResolvedBy = lastResolvedBy
        }
    }
    /// - Remark: Generated from `#/components/schemas/App`.
    public struct App: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/App/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/App/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/App/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/App/icons`.
        public var icons: Components.Schemas.Icons?
        /// - Remark: Generated from `#/components/schemas/App/helpUrl`.
        public var helpUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/App/privacyPolicyUrl`.
        public var privacyPolicyUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/App/appHomepageUrl`.
        public var appHomepageUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/App/appDirectoryUrl`.
        public var appDirectoryUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/App/isAppDirectoryApproved`.
        public var isAppDirectoryApproved: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/App/isInternal`.
        public var isInternal: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/App/isGranularBotApp`.
        public var isGranularBotApp: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/App/additionalInfo`.
        public var additionalInfo: Swift.String?
        /// Creates a new `App`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - description:
        ///   - icons:
        ///   - helpUrl:
        ///   - privacyPolicyUrl:
        ///   - appHomepageUrl:
        ///   - appDirectoryUrl:
        ///   - isAppDirectoryApproved:
        ///   - isInternal:
        ///   - isGranularBotApp:
        ///   - additionalInfo:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            description: Swift.String? = nil,
            icons: Components.Schemas.Icons? = nil,
            helpUrl: Swift.String? = nil,
            privacyPolicyUrl: Swift.String? = nil,
            appHomepageUrl: Swift.String? = nil,
            appDirectoryUrl: Swift.String? = nil,
            isAppDirectoryApproved: Swift.Bool? = nil,
            isInternal: Swift.Bool? = nil,
            isGranularBotApp: Swift.Bool? = nil,
            additionalInfo: Swift.String? = nil
        ) {
            self.id = id
            self.name = name
            self.description = description
            self.icons = icons
            self.helpUrl = helpUrl
            self.privacyPolicyUrl = privacyPolicyUrl
            self.appHomepageUrl = appHomepageUrl
            self.appDirectoryUrl = appDirectoryUrl
            self.isAppDirectoryApproved = isAppDirectoryApproved
            self.isInternal = isInternal
            self.isGranularBotApp = isGranularBotApp
            self.additionalInfo = additionalInfo
        }
    }
    /// - Remark: Generated from `#/components/schemas/Icons`.
    public struct Icons: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Icons/image36`.
        public var image36: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icons/image48`.
        public var image48: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icons/image72`.
        public var image72: Swift.String?
        /// Creates a new `Icons`.
        ///
        /// - Parameters:
        ///   - image36:
        ///   - image48:
        ///   - image72:
        public init(
            image36: Swift.String? = nil,
            image48: Swift.String? = nil,
            image72: Swift.String? = nil
        ) {
            self.image36 = image36
            self.image48 = image48
            self.image72 = image72
        }
    }
    /// - Remark: Generated from `#/components/schemas/LastResolvedBy`.
    public struct LastResolvedBy: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/LastResolvedBy/actorId`.
        public var actorId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LastResolvedBy/actorType`.
        public var actorType: Swift.String?
        /// Creates a new `LastResolvedBy`.
        ///
        /// - Parameters:
        ///   - actorId:
        ///   - actorType:
        public init(
            actorId: Swift.String? = nil,
            actorType: Swift.String? = nil
        ) {
            self.actorId = actorId
            self.actorType = actorType
        }
    }
    /// - Remark: Generated from `#/components/schemas/Scope`.
    public struct Scope: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Scope/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Scope/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Scope/isSensitive`.
        public var isSensitive: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Scope/tokenType`.
        public var tokenType: Swift.String?
        /// Creates a new `Scope`.
        ///
        /// - Parameters:
        ///   - name:
        ///   - description:
        ///   - isSensitive:
        ///   - tokenType:
        public init(
            name: Swift.String? = nil,
            description: Swift.String? = nil,
            isSensitive: Swift.Bool? = nil,
            tokenType: Swift.String? = nil
        ) {
            self.name = name
            self.description = description
            self.isSensitive = isSensitive
            self.tokenType = tokenType
        }
    }
    /// - Remark: Generated from `#/components/schemas/DomainRestrictions`.
    public struct DomainRestrictions: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/DomainRestrictions/emails`.
        public var emails: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/DomainRestrictions/urls`.
        public var urls: [Swift.String]?
        /// Creates a new `DomainRestrictions`.
        ///
        /// - Parameters:
        ///   - emails:
        ///   - urls:
        public init(
            emails: [Swift.String]? = nil,
            urls: [Swift.String]? = nil
        ) {
            self.emails = emails
            self.urls = urls
        }
    }
    /// - Remark: Generated from `#/components/schemas/AppRequest`.
    public struct AppRequest: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/AppRequest/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AppRequest/app`.
        public var app: Components.Schemas.App?
        /// - Remark: Generated from `#/components/schemas/AppRequest/user`.
        public var user: Components.Schemas.User?
        /// - Remark: Generated from `#/components/schemas/AppRequest/team`.
        public var team: Components.Schemas.Team?
        /// - Remark: Generated from `#/components/schemas/AppRequest/scopes`.
        public var scopes: [OpenAPIRuntime.OpenAPIValueContainer]?
        /// - Remark: Generated from `#/components/schemas/AppRequest/message`.
        public var message: Components.Schemas.Message?
        /// - Remark: Generated from `#/components/schemas/AppRequest/previousResolution`.
        public var previousResolution: Components.Schemas.PreviousResolution?
        /// - Remark: Generated from `#/components/schemas/AppRequest/isUserAppCollaborator`.
        public var isUserAppCollaborator: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/AppRequest/dateCreated`.
        public var dateCreated: Swift.Int?
        /// Creates a new `AppRequest`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - app:
        ///   - user:
        ///   - team:
        ///   - scopes:
        ///   - message:
        ///   - previousResolution:
        ///   - isUserAppCollaborator:
        ///   - dateCreated:
        public init(
            id: Swift.String? = nil,
            app: Components.Schemas.App? = nil,
            user: Components.Schemas.User? = nil,
            team: Components.Schemas.Team? = nil,
            scopes: [OpenAPIRuntime.OpenAPIValueContainer]? = nil,
            message: Components.Schemas.Message? = nil,
            previousResolution: Components.Schemas.PreviousResolution? = nil,
            isUserAppCollaborator: Swift.Bool? = nil,
            dateCreated: Swift.Int? = nil
        ) {
            self.id = id
            self.app = app
            self.user = user
            self.team = team
            self.scopes = scopes
            self.message = message
            self.previousResolution = previousResolution
            self.isUserAppCollaborator = isUserAppCollaborator
            self.dateCreated = dateCreated
        }
    }
    /// - Remark: Generated from `#/components/schemas/PreviousResolution`.
    public struct PreviousResolution: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/PreviousResolution/status`.
        public var status: Swift.String?
        /// - Remark: Generated from `#/components/schemas/PreviousResolution/scopes`.
        public var scopes: [OpenAPIRuntime.OpenAPIValueContainer]?
        /// Creates a new `PreviousResolution`.
        ///
        /// - Parameters:
        ///   - status:
        ///   - scopes:
        public init(
            status: Swift.String? = nil,
            scopes: [OpenAPIRuntime.OpenAPIValueContainer]? = nil
        ) {
            self.status = status
            self.scopes = scopes
        }
    }
    /// - Remark: Generated from `#/components/schemas/Team`.
    public struct Team: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Team/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Team/id`.
        public var id: Swift.String?
        /// Creates a new `Team`.
        ///
        /// - Parameters:
        ///   - name:
        ///   - id:
        public init(
            name: Swift.String? = nil,
            id: Swift.String? = nil
        ) {
            self.name = name
            self.id = id
        }
    }
    /// - Remark: Generated from `#/components/schemas/User`.
    public struct User: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/User/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/User/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/User/deleted`.
        public var deleted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/color`.
        public var color: Swift.String?
        /// - Remark: Generated from `#/components/schemas/User/tz`.
        public var tz: Swift.String?
        /// - Remark: Generated from `#/components/schemas/User/profile`.
        public var profile: Components.Schemas.Profile?
        /// - Remark: Generated from `#/components/schemas/User/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/User/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/User/realName`.
        public var realName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/User/tzLabel`.
        public var tzLabel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/User/tzOffset`.
        public var tzOffset: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/User/isAdmin`.
        public var isAdmin: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/isOwner`.
        public var isOwner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/isPrimaryOwner`.
        public var isPrimaryOwner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/isRestricted`.
        public var isRestricted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/isUltraRestricted`.
        public var isUltraRestricted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/isBot`.
        public var isBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/isAppUser`.
        public var isAppUser: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/has2fa`.
        public var has2fa: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/isEmailConfirmed`.
        public var isEmailConfirmed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/User/whoCanShareContactCard`.
        public var whoCanShareContactCard: Swift.String?
        /// - Remark: Generated from `#/components/schemas/User/isInvitedUser`.
        public var isInvitedUser: Swift.Bool?
        /// Creates a new `User`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - deleted:
        ///   - color:
        ///   - tz:
        ///   - profile:
        ///   - updated:
        ///   - teamId:
        ///   - realName:
        ///   - tzLabel:
        ///   - tzOffset:
        ///   - isAdmin:
        ///   - isOwner:
        ///   - isPrimaryOwner:
        ///   - isRestricted:
        ///   - isUltraRestricted:
        ///   - isBot:
        ///   - isAppUser:
        ///   - has2fa:
        ///   - isEmailConfirmed:
        ///   - whoCanShareContactCard:
        ///   - isInvitedUser:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            deleted: Swift.Bool? = nil,
            color: Swift.String? = nil,
            tz: Swift.String? = nil,
            profile: Components.Schemas.Profile? = nil,
            updated: Swift.Int? = nil,
            teamId: Swift.String? = nil,
            realName: Swift.String? = nil,
            tzLabel: Swift.String? = nil,
            tzOffset: Swift.Int? = nil,
            isAdmin: Swift.Bool? = nil,
            isOwner: Swift.Bool? = nil,
            isPrimaryOwner: Swift.Bool? = nil,
            isRestricted: Swift.Bool? = nil,
            isUltraRestricted: Swift.Bool? = nil,
            isBot: Swift.Bool? = nil,
            isAppUser: Swift.Bool? = nil,
            has2fa: Swift.Bool? = nil,
            isEmailConfirmed: Swift.Bool? = nil,
            whoCanShareContactCard: Swift.String? = nil,
            isInvitedUser: Swift.Bool? = nil
        ) {
            self.id = id
            self.name = name
            self.deleted = deleted
            self.color = color
            self.tz = tz
            self.profile = profile
            self.updated = updated
            self.teamId = teamId
            self.realName = realName
            self.tzLabel = tzLabel
            self.tzOffset = tzOffset
            self.isAdmin = isAdmin
            self.isOwner = isOwner
            self.isPrimaryOwner = isPrimaryOwner
            self.isRestricted = isRestricted
            self.isUltraRestricted = isUltraRestricted
            self.isBot = isBot
            self.isAppUser = isAppUser
            self.has2fa = has2fa
            self.isEmailConfirmed = isEmailConfirmed
            self.whoCanShareContactCard = whoCanShareContactCard
            self.isInvitedUser = isInvitedUser
        }
    }
    /// - Remark: Generated from `#/components/schemas/RestrictedApp`.
    public struct RestrictedApp: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RestrictedApp/app`.
        public var app: Components.Schemas.App?
        /// - Remark: Generated from `#/components/schemas/RestrictedApp/scopes`.
        public var scopes: [Components.Schemas.Scope]?
        /// - Remark: Generated from `#/components/schemas/RestrictedApp/dateUpdated`.
        public var dateUpdated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/RestrictedApp/lastResolvedBy`.
        public var lastResolvedBy: Components.Schemas.LastResolvedBy?
        /// Creates a new `RestrictedApp`.
        ///
        /// - Parameters:
        ///   - app:
        ///   - scopes:
        ///   - dateUpdated:
        ///   - lastResolvedBy:
        public init(
            app: Components.Schemas.App? = nil,
            scopes: [Components.Schemas.Scope]? = nil,
            dateUpdated: Swift.Int? = nil,
            lastResolvedBy: Components.Schemas.LastResolvedBy? = nil
        ) {
            self.app = app
            self.scopes = scopes
            self.dateUpdated = dateUpdated
            self.lastResolvedBy = lastResolvedBy
        }
    }
    /// - Remark: Generated from `#/components/schemas/Entity`.
    public struct Entity: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Entity/entityId`.
        public var entityId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Entity/entityType`.
        public var entityType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Entity/dateAdded`.
        public var dateAdded: Swift.Int?
        /// Creates a new `Entity`.
        ///
        /// - Parameters:
        ///   - entityId:
        ///   - entityType:
        ///   - dateAdded:
        public init(
            entityId: Swift.String? = nil,
            entityType: Swift.String? = nil,
            dateAdded: Swift.Int? = nil
        ) {
            self.entityId = entityId
            self.entityType = entityType
            self.dateAdded = dateAdded
        }
    }
    /// - Remark: Generated from `#/components/schemas/Barrier`.
    public struct Barrier: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Barrier/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Barrier/enterpriseId`.
        public var enterpriseId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Barrier/primaryUsergroup`.
        public var primaryUsergroup: Components.Schemas.Usergroup?
        /// - Remark: Generated from `#/components/schemas/Barrier/barrieredFromUsergroups`.
        public var barrieredFromUsergroups: [Components.Schemas.Usergroup]?
        /// - Remark: Generated from `#/components/schemas/Barrier/restrictedSubjects`.
        public var restrictedSubjects: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Barrier/dateUpdate`.
        public var dateUpdate: Swift.Int?
        /// Creates a new `Barrier`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - enterpriseId:
        ///   - primaryUsergroup:
        ///   - barrieredFromUsergroups:
        ///   - restrictedSubjects:
        ///   - dateUpdate:
        public init(
            id: Swift.String? = nil,
            enterpriseId: Swift.String? = nil,
            primaryUsergroup: Components.Schemas.Usergroup? = nil,
            barrieredFromUsergroups: [Components.Schemas.Usergroup]? = nil,
            restrictedSubjects: [Swift.String]? = nil,
            dateUpdate: Swift.Int? = nil
        ) {
            self.id = id
            self.enterpriseId = enterpriseId
            self.primaryUsergroup = primaryUsergroup
            self.barrieredFromUsergroups = barrieredFromUsergroups
            self.restrictedSubjects = restrictedSubjects
            self.dateUpdate = dateUpdate
        }
    }
    /// - Remark: Generated from `#/components/schemas/Usergroup`.
    public struct Usergroup: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Usergroup/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Usergroup/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Usergroup/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Usergroup/handle`.
        public var handle: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Usergroup/prefs`.
        public var prefs: Components.Schemas.Prefs?
        /// - Remark: Generated from `#/components/schemas/Usergroup/users`.
        public var users: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Usergroup/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Usergroup/isUsergroup`.
        public var isUsergroup: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Usergroup/isSubteam`.
        public var isSubteam: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Usergroup/isExternal`.
        public var isExternal: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Usergroup/dateCreate`.
        public var dateCreate: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Usergroup/dateUpdate`.
        public var dateUpdate: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Usergroup/dateDelete`.
        public var dateDelete: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Usergroup/autoProvision`.
        public var autoProvision: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Usergroup/enterpriseSubteamId`.
        public var enterpriseSubteamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Usergroup/createdBy`.
        public var createdBy: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Usergroup/updatedBy`.
        public var updatedBy: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Usergroup/channelCount`.
        public var channelCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Usergroup/isSection`.
        public var isSection: Swift.Bool?
        /// Creates a new `Usergroup`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - description:
        ///   - handle:
        ///   - prefs:
        ///   - users:
        ///   - teamId:
        ///   - isUsergroup:
        ///   - isSubteam:
        ///   - isExternal:
        ///   - dateCreate:
        ///   - dateUpdate:
        ///   - dateDelete:
        ///   - autoProvision:
        ///   - enterpriseSubteamId:
        ///   - createdBy:
        ///   - updatedBy:
        ///   - channelCount:
        ///   - isSection:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            description: Swift.String? = nil,
            handle: Swift.String? = nil,
            prefs: Components.Schemas.Prefs? = nil,
            users: [Swift.String]? = nil,
            teamId: Swift.String? = nil,
            isUsergroup: Swift.Bool? = nil,
            isSubteam: Swift.Bool? = nil,
            isExternal: Swift.Bool? = nil,
            dateCreate: Swift.Int? = nil,
            dateUpdate: Swift.Int? = nil,
            dateDelete: Swift.Int? = nil,
            autoProvision: Swift.Bool? = nil,
            enterpriseSubteamId: Swift.String? = nil,
            createdBy: Swift.String? = nil,
            updatedBy: Swift.String? = nil,
            channelCount: Swift.Int? = nil,
            isSection: Swift.Bool? = nil
        ) {
            self.id = id
            self.name = name
            self.description = description
            self.handle = handle
            self.prefs = prefs
            self.users = users
            self.teamId = teamId
            self.isUsergroup = isUsergroup
            self.isSubteam = isSubteam
            self.isExternal = isExternal
            self.dateCreate = dateCreate
            self.dateUpdate = dateUpdate
            self.dateDelete = dateDelete
            self.autoProvision = autoProvision
            self.enterpriseSubteamId = enterpriseSubteamId
            self.createdBy = createdBy
            self.updatedBy = updatedBy
            self.channelCount = channelCount
            self.isSection = isSection
        }
    }
    /// - Remark: Generated from `#/components/schemas/NotAdded`.
    public struct NotAdded: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/NotAdded/errors`.
        public var errors: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/NotAdded/channelId`.
        public var channelId: Swift.String?
        /// Creates a new `NotAdded`.
        ///
        /// - Parameters:
        ///   - errors:
        ///   - channelId:
        public init(
            errors: [Swift.String]? = nil,
            channelId: Swift.String? = nil
        ) {
            self.errors = errors
            self.channelId = channelId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Prefs`.
    public struct Prefs: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Prefs/channels`.
        public var channels: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Prefs/groups`.
        public var groups: [Swift.String]?
        /// Creates a new `Prefs`.
        ///
        /// - Parameters:
        ///   - channels:
        ///   - groups:
        public init(
            channels: [Swift.String]? = nil,
            groups: [Swift.String]? = nil
        ) {
            self.channels = channels
            self.groups = groups
        }
    }
    /// - Remark: Generated from `#/components/schemas/FailedUserIDS`.
    public struct FailedUserIDS: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FailedUserIDS/U00000000`.
        public var u00000000: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FailedUserIDS/U00000001`.
        public var u00000001: Swift.String?
        /// Creates a new `FailedUserIDS`.
        ///
        /// - Parameters:
        ///   - u00000000:
        ///   - u00000001:
        public init(
            u00000000: Swift.String? = nil,
            u00000001: Swift.String? = nil
        ) {
            self.u00000000 = u00000000
            self.u00000001 = u00000001
        }
    }
    /// - Remark: Generated from `#/components/schemas/Conversation`.
    public struct Conversation: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Conversation/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Conversation/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Conversation/purpose`.
        public var purpose: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Conversation/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Conversation/canvas`.
        public var canvas: Components.Schemas.ListsClass?
        /// - Remark: Generated from `#/components/schemas/Conversation/lists`.
        public var lists: Components.Schemas.ListsClass?
        /// - Remark: Generated from `#/components/schemas/Conversation/properties`.
        public var properties: Components.Schemas.Properties?
        /// - Remark: Generated from `#/components/schemas/Conversation/memberCount`.
        public var memberCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Conversation/creatorId`.
        public var creatorId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Conversation/isPrivate`.
        public var isPrivate: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/isArchived`.
        public var isArchived: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/isGeneral`.
        public var isGeneral: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/lastActivityTs`.
        public var lastActivityTs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Conversation/isExtShared`.
        public var isExtShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/isGlobalShared`.
        public var isGlobalShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/isOrgDefault`.
        public var isOrgDefault: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/isOrgMandatory`.
        public var isOrgMandatory: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/isOrgShared`.
        public var isOrgShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/isFrozen`.
        public var isFrozen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/internalTeamIdsCount`.
        public var internalTeamIdsCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Conversation/internalTeamIdsSampleTeam`.
        public var internalTeamIdsSampleTeam: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Conversation/pendingConnectedTeamIds`.
        public var pendingConnectedTeamIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Conversation/isPendingExtShared`.
        public var isPendingExtShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/connectedTeamIds`.
        public var connectedTeamIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Conversation/conversationHostId`.
        public var conversationHostId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Conversation/channelEmailAddresses`.
        public var channelEmailAddresses: [Components.Schemas.ChannelEmailAddress]?
        /// - Remark: Generated from `#/components/schemas/Conversation/connectedLimitedTeamIds`.
        public var connectedLimitedTeamIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Conversation/externalUserCount`.
        public var externalUserCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Conversation/internalTeamIds`.
        public var internalTeamIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Conversation/channelManagerCount`.
        public var channelManagerCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Conversation/isDisconnectInProgress`.
        public var isDisconnectInProgress: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Conversation/contextTeamId`.
        public var contextTeamId: Swift.String?
        /// Creates a new `Conversation`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - purpose:
        ///   - created:
        ///   - canvas:
        ///   - lists:
        ///   - properties:
        ///   - memberCount:
        ///   - creatorId:
        ///   - isPrivate:
        ///   - isArchived:
        ///   - isGeneral:
        ///   - lastActivityTs:
        ///   - isExtShared:
        ///   - isGlobalShared:
        ///   - isOrgDefault:
        ///   - isOrgMandatory:
        ///   - isOrgShared:
        ///   - isFrozen:
        ///   - internalTeamIdsCount:
        ///   - internalTeamIdsSampleTeam:
        ///   - pendingConnectedTeamIds:
        ///   - isPendingExtShared:
        ///   - connectedTeamIds:
        ///   - conversationHostId:
        ///   - channelEmailAddresses:
        ///   - connectedLimitedTeamIds:
        ///   - externalUserCount:
        ///   - internalTeamIds:
        ///   - channelManagerCount:
        ///   - isDisconnectInProgress:
        ///   - contextTeamId:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            purpose: Swift.String? = nil,
            created: Swift.Int? = nil,
            canvas: Components.Schemas.ListsClass? = nil,
            lists: Components.Schemas.ListsClass? = nil,
            properties: Components.Schemas.Properties? = nil,
            memberCount: Swift.Int? = nil,
            creatorId: Swift.String? = nil,
            isPrivate: Swift.Bool? = nil,
            isArchived: Swift.Bool? = nil,
            isGeneral: Swift.Bool? = nil,
            lastActivityTs: Swift.Int? = nil,
            isExtShared: Swift.Bool? = nil,
            isGlobalShared: Swift.Bool? = nil,
            isOrgDefault: Swift.Bool? = nil,
            isOrgMandatory: Swift.Bool? = nil,
            isOrgShared: Swift.Bool? = nil,
            isFrozen: Swift.Bool? = nil,
            internalTeamIdsCount: Swift.Int? = nil,
            internalTeamIdsSampleTeam: Swift.String? = nil,
            pendingConnectedTeamIds: [Swift.String]? = nil,
            isPendingExtShared: Swift.Bool? = nil,
            connectedTeamIds: [Swift.String]? = nil,
            conversationHostId: Swift.String? = nil,
            channelEmailAddresses: [Components.Schemas.ChannelEmailAddress]? = nil,
            connectedLimitedTeamIds: [Swift.String]? = nil,
            externalUserCount: Swift.Int? = nil,
            internalTeamIds: [Swift.String]? = nil,
            channelManagerCount: Swift.Int? = nil,
            isDisconnectInProgress: Swift.Bool? = nil,
            contextTeamId: Swift.String? = nil
        ) {
            self.id = id
            self.name = name
            self.purpose = purpose
            self.created = created
            self.canvas = canvas
            self.lists = lists
            self.properties = properties
            self.memberCount = memberCount
            self.creatorId = creatorId
            self.isPrivate = isPrivate
            self.isArchived = isArchived
            self.isGeneral = isGeneral
            self.lastActivityTs = lastActivityTs
            self.isExtShared = isExtShared
            self.isGlobalShared = isGlobalShared
            self.isOrgDefault = isOrgDefault
            self.isOrgMandatory = isOrgMandatory
            self.isOrgShared = isOrgShared
            self.isFrozen = isFrozen
            self.internalTeamIdsCount = internalTeamIdsCount
            self.internalTeamIdsSampleTeam = internalTeamIdsSampleTeam
            self.pendingConnectedTeamIds = pendingConnectedTeamIds
            self.isPendingExtShared = isPendingExtShared
            self.connectedTeamIds = connectedTeamIds
            self.conversationHostId = conversationHostId
            self.channelEmailAddresses = channelEmailAddresses
            self.connectedLimitedTeamIds = connectedLimitedTeamIds
            self.externalUserCount = externalUserCount
            self.internalTeamIds = internalTeamIds
            self.channelManagerCount = channelManagerCount
            self.isDisconnectInProgress = isDisconnectInProgress
            self.contextTeamId = contextTeamId
        }
    }
    /// - Remark: Generated from `#/components/schemas/ListsClass`.
    public struct ListsClass: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ListsClass/totalCount`.
        public var totalCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ListsClass/ownershipDetails`.
        public var ownershipDetails: [Components.Schemas.OwnershipDetail]?
        /// Creates a new `ListsClass`.
        ///
        /// - Parameters:
        ///   - totalCount:
        ///   - ownershipDetails:
        public init(
            totalCount: Swift.Int? = nil,
            ownershipDetails: [Components.Schemas.OwnershipDetail]? = nil
        ) {
            self.totalCount = totalCount
            self.ownershipDetails = ownershipDetails
        }
    }
    /// - Remark: Generated from `#/components/schemas/OwnershipDetail`.
    public struct OwnershipDetail: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/OwnershipDetail/count`.
        public var count: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/OwnershipDetail/teamId`.
        public var teamId: Swift.String?
        /// Creates a new `OwnershipDetail`.
        ///
        /// - Parameters:
        ///   - count:
        ///   - teamId:
        public init(
            count: Swift.Int? = nil,
            teamId: Swift.String? = nil
        ) {
            self.count = count
            self.teamId = teamId
        }
    }
    /// - Remark: Generated from `#/components/schemas/ChannelEmailAddress`.
    public struct ChannelEmailAddress: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ChannelEmailAddress/address`.
        public var address: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ChannelEmailAddress/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ChannelEmailAddress/icons`.
        public var icons: Components.Schemas.Icons?
        /// - Remark: Generated from `#/components/schemas/ChannelEmailAddress/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ChannelEmailAddress/userId`.
        public var userId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ChannelEmailAddress/conversationId`.
        public var conversationId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ChannelEmailAddress/dateCreated`.
        public var dateCreated: Swift.Int?
        /// Creates a new `ChannelEmailAddress`.
        ///
        /// - Parameters:
        ///   - address:
        ///   - name:
        ///   - icons:
        ///   - teamId:
        ///   - userId:
        ///   - conversationId:
        ///   - dateCreated:
        public init(
            address: Swift.String? = nil,
            name: Swift.String? = nil,
            icons: Components.Schemas.Icons? = nil,
            teamId: Swift.String? = nil,
            userId: Swift.String? = nil,
            conversationId: Swift.String? = nil,
            dateCreated: Swift.Int? = nil
        ) {
            self.address = address
            self.name = name
            self.icons = icons
            self.teamId = teamId
            self.userId = userId
            self.conversationId = conversationId
            self.dateCreated = dateCreated
        }
    }
    /// - Remark: Generated from `#/components/schemas/Properties`.
    public struct Properties: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Properties/canvas`.
        public var canvas: Components.Schemas.Canvas?
        /// - Remark: Generated from `#/components/schemas/Properties/tabs`.
        public var tabs: [Components.Schemas.Tab]?
        /// - Remark: Generated from `#/components/schemas/Properties/tabz`.
        public var tabz: [Components.Schemas.Tab]?
        /// - Remark: Generated from `#/components/schemas/Properties/postingRestrictedTo`.
        public var postingRestrictedTo: Components.Schemas.PostingRestrictedTo?
        /// - Remark: Generated from `#/components/schemas/Properties/huddlesRestricted`.
        public var huddlesRestricted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Properties/threadsRestrictedTo`.
        public var threadsRestrictedTo: Components.Schemas.ThreadsRestrictedTo?
        /// Creates a new `Properties`.
        ///
        /// - Parameters:
        ///   - canvas:
        ///   - tabs:
        ///   - tabz:
        ///   - postingRestrictedTo:
        ///   - huddlesRestricted:
        ///   - threadsRestrictedTo:
        public init(
            canvas: Components.Schemas.Canvas? = nil,
            tabs: [Components.Schemas.Tab]? = nil,
            tabz: [Components.Schemas.Tab]? = nil,
            postingRestrictedTo: Components.Schemas.PostingRestrictedTo? = nil,
            huddlesRestricted: Swift.Bool? = nil,
            threadsRestrictedTo: Components.Schemas.ThreadsRestrictedTo? = nil
        ) {
            self.canvas = canvas
            self.tabs = tabs
            self.tabz = tabz
            self.postingRestrictedTo = postingRestrictedTo
            self.huddlesRestricted = huddlesRestricted
            self.threadsRestrictedTo = threadsRestrictedTo
        }
    }
    /// - Remark: Generated from `#/components/schemas/PostingRestrictedTo`.
    public struct PostingRestrictedTo: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/PostingRestrictedTo/type`.
        public var type: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/PostingRestrictedTo/user`.
        public var user: [Swift.String]?
        /// Creates a new `PostingRestrictedTo`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - user:
        public init(
            type: [Swift.String]? = nil,
            user: [Swift.String]? = nil
        ) {
            self.type = type
            self.user = user
        }
    }
    /// - Remark: Generated from `#/components/schemas/Tab`.
    public struct Tab: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Tab/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Tab/label`.
        public var label: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Tab/type`.
        public var type: Swift.String?
        /// Creates a new `Tab`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - label:
        ///   - type:
        public init(
            id: Swift.String? = nil,
            label: Swift.String? = nil,
            type: Swift.String? = nil
        ) {
            self.id = id
            self.label = label
            self.type = type
        }
    }
    /// - Remark: Generated from `#/components/schemas/ThreadsRestrictedTo`.
    public struct ThreadsRestrictedTo: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ThreadsRestrictedTo/type`.
        public var type: [Swift.String]?
        /// Creates a new `ThreadsRestrictedTo`.
        ///
        /// - Parameters:
        ///   - type:
        public init(type: [Swift.String]? = nil) {
            self.type = type
        }
    }
    /// - Remark: Generated from `#/components/schemas/Function`.
    public struct Function: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Function/title`.
        public var title: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Function/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Function/inputParameters`.
        public var inputParameters: OpenAPIRuntime.OpenAPIObjectContainer?
        /// - Remark: Generated from `#/components/schemas/Function/outputParameters`.
        public var outputParameters: OpenAPIRuntime.OpenAPIObjectContainer?
        /// Creates a new `Function`.
        ///
        /// - Parameters:
        ///   - title:
        ///   - description:
        ///   - inputParameters:
        ///   - outputParameters:
        public init(
            title: Swift.String? = nil,
            description: Swift.String? = nil,
            inputParameters: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
            outputParameters: OpenAPIRuntime.OpenAPIObjectContainer? = nil
        ) {
            self.title = title
            self.description = description
            self.inputParameters = inputParameters
            self.outputParameters = outputParameters
        }
    }
    /// - Remark: Generated from `#/components/schemas/Errors`.
    public typealias Errors = OpenAPIRuntime.OpenAPIObjectContainer
    /// - Remark: Generated from `#/components/schemas/ApprovedRequest`.
    public struct ApprovedRequest: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ApprovedRequest/invite`.
        public var invite: Components.Schemas.Invite?
        /// - Remark: Generated from `#/components/schemas/ApprovedRequest/inviteRequest`.
        public var inviteRequest: Components.Schemas.InviteRequest?
        /// - Remark: Generated from `#/components/schemas/ApprovedRequest/approvedBy`.
        public var approvedBy: Components.Schemas.ApprovedBy?
        /// Creates a new `ApprovedRequest`.
        ///
        /// - Parameters:
        ///   - invite:
        ///   - inviteRequest:
        ///   - approvedBy:
        public init(
            invite: Components.Schemas.Invite? = nil,
            inviteRequest: Components.Schemas.InviteRequest? = nil,
            approvedBy: Components.Schemas.ApprovedBy? = nil
        ) {
            self.invite = invite
            self.inviteRequest = inviteRequest
            self.approvedBy = approvedBy
        }
    }
    /// - Remark: Generated from `#/components/schemas/ApprovedBy`.
    public struct ApprovedBy: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ApprovedBy/actorType`.
        public var actorType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ApprovedBy/actorId`.
        public var actorId: Swift.String?
        /// Creates a new `ApprovedBy`.
        ///
        /// - Parameters:
        ///   - actorType:
        ///   - actorId:
        public init(
            actorType: Swift.String? = nil,
            actorId: Swift.String? = nil
        ) {
            self.actorType = actorType
            self.actorId = actorId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Invite`.
    public struct Invite: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Invite/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Invite/email`.
        public var email: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Invite/inviterId`.
        public var inviterId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Invite/dateCreated`.
        public var dateCreated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Invite/isBouncing`.
        public var isBouncing: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Invite/invitePreferences`.
        public var invitePreferences: Components.Schemas.InvitePreferences?
        /// Creates a new `Invite`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - email:
        ///   - inviterId:
        ///   - dateCreated:
        ///   - isBouncing:
        ///   - invitePreferences:
        public init(
            id: Swift.String? = nil,
            email: Swift.String? = nil,
            inviterId: Swift.String? = nil,
            dateCreated: Swift.Int? = nil,
            isBouncing: Swift.Bool? = nil,
            invitePreferences: Components.Schemas.InvitePreferences? = nil
        ) {
            self.id = id
            self.email = email
            self.inviterId = inviterId
            self.dateCreated = dateCreated
            self.isBouncing = isBouncing
            self.invitePreferences = invitePreferences
        }
    }
    /// - Remark: Generated from `#/components/schemas/InvitePreferences`.
    public struct InvitePreferences: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/InvitePreferences/isRestricted`.
        public var isRestricted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/InvitePreferences/isUltraRestricted`.
        public var isUltraRestricted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/InvitePreferences/channelIds`.
        public var channelIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/InvitePreferences/isDomainMatched`.
        public var isDomainMatched: Swift.Bool?
        /// Creates a new `InvitePreferences`.
        ///
        /// - Parameters:
        ///   - isRestricted:
        ///   - isUltraRestricted:
        ///   - channelIds:
        ///   - isDomainMatched:
        public init(
            isRestricted: Swift.Bool? = nil,
            isUltraRestricted: Swift.Bool? = nil,
            channelIds: [Swift.String]? = nil,
            isDomainMatched: Swift.Bool? = nil
        ) {
            self.isRestricted = isRestricted
            self.isUltraRestricted = isUltraRestricted
            self.channelIds = channelIds
            self.isDomainMatched = isDomainMatched
        }
    }
    /// - Remark: Generated from `#/components/schemas/InviteRequest`.
    public struct InviteRequest: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/InviteRequest/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteRequest/channel`.
        public var channel: Components.Schemas.Channel?
        /// - Remark: Generated from `#/components/schemas/InviteRequest/dateCreated`.
        public var dateCreated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InviteRequest/expiresAt`.
        public var expiresAt: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InviteRequest/invitingTeam`.
        public var invitingTeam: Components.Schemas.Team?
        /// - Remark: Generated from `#/components/schemas/InviteRequest/invitingUser`.
        public var invitingUser: Components.Schemas.InvitingUser?
        /// - Remark: Generated from `#/components/schemas/InviteRequest/isExternalLimited`.
        public var isExternalLimited: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/InviteRequest/dateLastUpdated`.
        public var dateLastUpdated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InviteRequest/targetUser`.
        public var targetUser: Components.Schemas.TargetUser?
        /// Creates a new `InviteRequest`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - channel:
        ///   - dateCreated:
        ///   - expiresAt:
        ///   - invitingTeam:
        ///   - invitingUser:
        ///   - isExternalLimited:
        ///   - dateLastUpdated:
        ///   - targetUser:
        public init(
            id: Swift.String? = nil,
            channel: Components.Schemas.Channel? = nil,
            dateCreated: Swift.Int? = nil,
            expiresAt: Swift.Int? = nil,
            invitingTeam: Components.Schemas.Team? = nil,
            invitingUser: Components.Schemas.InvitingUser? = nil,
            isExternalLimited: Swift.Bool? = nil,
            dateLastUpdated: Swift.Int? = nil,
            targetUser: Components.Schemas.TargetUser? = nil
        ) {
            self.id = id
            self.channel = channel
            self.dateCreated = dateCreated
            self.expiresAt = expiresAt
            self.invitingTeam = invitingTeam
            self.invitingUser = invitingUser
            self.isExternalLimited = isExternalLimited
            self.dateLastUpdated = dateLastUpdated
            self.targetUser = targetUser
        }
    }
    /// - Remark: Generated from `#/components/schemas/DeniedRequest`.
    public struct DeniedRequest: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/DeniedRequest/inviteRequest`.
        public var inviteRequest: Components.Schemas.InviteRequest?
        /// - Remark: Generated from `#/components/schemas/DeniedRequest/deniedBy`.
        public var deniedBy: Components.Schemas.DeniedBy?
        /// Creates a new `DeniedRequest`.
        ///
        /// - Parameters:
        ///   - inviteRequest:
        ///   - deniedBy:
        public init(
            inviteRequest: Components.Schemas.InviteRequest? = nil,
            deniedBy: Components.Schemas.DeniedBy? = nil
        ) {
            self.inviteRequest = inviteRequest
            self.deniedBy = deniedBy
        }
    }
    /// - Remark: Generated from `#/components/schemas/DeniedBy`.
    public struct DeniedBy: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/DeniedBy/actorType`.
        public var actorType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/DeniedBy/actorId`.
        public var actorId: Swift.String?
        /// Creates a new `DeniedBy`.
        ///
        /// - Parameters:
        ///   - actorType:
        ///   - actorId:
        public init(
            actorType: Swift.String? = nil,
            actorId: Swift.String? = nil
        ) {
            self.actorType = actorType
            self.actorId = actorId
        }
    }
    /// - Remark: Generated from `#/components/schemas/RejectedUser`.
    public struct RejectedUser: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RejectedUser/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RejectedUser/error`.
        public var error: Swift.String?
        /// Creates a new `RejectedUser`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - error:
        public init(
            id: Swift.String? = nil,
            error: Swift.String? = nil
        ) {
            self.id = id
            self.error = error
        }
    }
    /// - Remark: Generated from `#/components/schemas/RoleAssignment`.
    public struct RoleAssignment: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RoleAssignment/roleId`.
        public var roleId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RoleAssignment/entityId`.
        public var entityId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RoleAssignment/userId`.
        public var userId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RoleAssignment/dateCreate`.
        public var dateCreate: Swift.Int?
        /// Creates a new `RoleAssignment`.
        ///
        /// - Parameters:
        ///   - roleId:
        ///   - entityId:
        ///   - userId:
        ///   - dateCreate:
        public init(
            roleId: Swift.String? = nil,
            entityId: Swift.String? = nil,
            userId: Swift.String? = nil,
            dateCreate: Swift.Int? = nil
        ) {
            self.roleId = roleId
            self.entityId = entityId
            self.userId = userId
            self.dateCreate = dateCreate
        }
    }
    /// - Remark: Generated from `#/components/schemas/Icon`.
    public struct Icon: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Icon/image34`.
        public var image34: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icon/image44`.
        public var image44: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icon/image68`.
        public var image68: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icon/image88`.
        public var image88: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icon/image102`.
        public var image102: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icon/image132`.
        public var image132: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icon/image230`.
        public var image230: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icon/imageOriginal`.
        public var imageOriginal: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Icon/imageDefault`.
        public var imageDefault: Swift.Bool?
        /// Creates a new `Icon`.
        ///
        /// - Parameters:
        ///   - image34:
        ///   - image44:
        ///   - image68:
        ///   - image88:
        ///   - image102:
        ///   - image132:
        ///   - image230:
        ///   - imageOriginal:
        ///   - imageDefault:
        public init(
            image34: Swift.String? = nil,
            image44: Swift.String? = nil,
            image68: Swift.String? = nil,
            image88: Swift.String? = nil,
            image102: Swift.String? = nil,
            image132: Swift.String? = nil,
            image230: Swift.String? = nil,
            imageOriginal: Swift.String? = nil,
            imageDefault: Swift.Bool? = nil
        ) {
            self.image34 = image34
            self.image44 = image44
            self.image68 = image68
            self.image88 = image88
            self.image102 = image102
            self.image132 = image132
            self.image230 = image230
            self.imageOriginal = imageOriginal
            self.imageDefault = imageDefault
        }
    }
    /// - Remark: Generated from `#/components/schemas/Channel`.
    public struct Channel: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Channel/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Channel/unlinked`.
        public var unlinked: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Channel/creator`.
        public var creator: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/topic`.
        public var topic: Components.Schemas.Purpose?
        /// - Remark: Generated from `#/components/schemas/Channel/purpose`.
        public var purpose: Components.Schemas.Purpose?
        /// - Remark: Generated from `#/components/schemas/Channel/priority`.
        public var priority: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Channel/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Channel/properties`.
        public var properties: Components.Schemas.Properties?
        /// - Remark: Generated from `#/components/schemas/Channel/isChannel`.
        public var isChannel: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isGroup`.
        public var isGroup: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isIm`.
        public var isIm: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isArchived`.
        public var isArchived: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isGeneral`.
        public var isGeneral: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/nameNormalized`.
        public var nameNormalized: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/isShared`.
        public var isShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isExtShared`.
        public var isExtShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isOrgShared`.
        public var isOrgShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/sharedTeamIds`.
        public var sharedTeamIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Channel/pendingShared`.
        public var pendingShared: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Channel/pendingConnectedTeamIds`.
        public var pendingConnectedTeamIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Channel/isPendingExtShared`.
        public var isPendingExtShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isPrivate`.
        public var isPrivate: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isMpim`.
        public var isMpim: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/previousNames`.
        public var previousNames: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Channel/conversationHostId`.
        public var conversationHostId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/isMoved`.
        public var isMoved: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Channel/internalTeamIds`.
        public var internalTeamIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Channel/isGlobalShared`.
        public var isGlobalShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isOrgDefault`.
        public var isOrgDefault: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isOrgMandatory`.
        public var isOrgMandatory: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/enterpriseId`.
        public var enterpriseId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/lastRead`.
        public var lastRead: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/isOpen`.
        public var isOpen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/isUserDeleted`.
        public var isUserDeleted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Channel/parentConversation`.
        public var parentConversation: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Channel/contextTeamId`.
        public var contextTeamId: Swift.String?
        /// Creates a new `Channel`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - created:
        ///   - unlinked:
        ///   - creator:
        ///   - topic:
        ///   - purpose:
        ///   - priority:
        ///   - user:
        ///   - updated:
        ///   - properties:
        ///   - isChannel:
        ///   - isGroup:
        ///   - isIm:
        ///   - isArchived:
        ///   - isGeneral:
        ///   - nameNormalized:
        ///   - isShared:
        ///   - isExtShared:
        ///   - isOrgShared:
        ///   - sharedTeamIds:
        ///   - pendingShared:
        ///   - pendingConnectedTeamIds:
        ///   - isPendingExtShared:
        ///   - isPrivate:
        ///   - isMpim:
        ///   - previousNames:
        ///   - conversationHostId:
        ///   - isMoved:
        ///   - internalTeamIds:
        ///   - isGlobalShared:
        ///   - isOrgDefault:
        ///   - isOrgMandatory:
        ///   - enterpriseId:
        ///   - lastRead:
        ///   - isOpen:
        ///   - isUserDeleted:
        ///   - parentConversation:
        ///   - contextTeamId:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            created: Swift.Int? = nil,
            unlinked: Swift.Int? = nil,
            creator: Swift.String? = nil,
            topic: Components.Schemas.Purpose? = nil,
            purpose: Components.Schemas.Purpose? = nil,
            priority: Swift.Int? = nil,
            user: Swift.String? = nil,
            updated: Swift.Int? = nil,
            properties: Components.Schemas.Properties? = nil,
            isChannel: Swift.Bool? = nil,
            isGroup: Swift.Bool? = nil,
            isIm: Swift.Bool? = nil,
            isArchived: Swift.Bool? = nil,
            isGeneral: Swift.Bool? = nil,
            nameNormalized: Swift.String? = nil,
            isShared: Swift.Bool? = nil,
            isExtShared: Swift.Bool? = nil,
            isOrgShared: Swift.Bool? = nil,
            sharedTeamIds: [Swift.String]? = nil,
            pendingShared: [Swift.String]? = nil,
            pendingConnectedTeamIds: [Swift.String]? = nil,
            isPendingExtShared: Swift.Bool? = nil,
            isPrivate: Swift.Bool? = nil,
            isMpim: Swift.Bool? = nil,
            previousNames: [Swift.String]? = nil,
            conversationHostId: Swift.String? = nil,
            isMoved: Swift.Int? = nil,
            internalTeamIds: [Swift.String]? = nil,
            isGlobalShared: Swift.Bool? = nil,
            isOrgDefault: Swift.Bool? = nil,
            isOrgMandatory: Swift.Bool? = nil,
            enterpriseId: Swift.String? = nil,
            lastRead: Swift.String? = nil,
            isOpen: Swift.Bool? = nil,
            isUserDeleted: Swift.Bool? = nil,
            parentConversation: Swift.String? = nil,
            contextTeamId: Swift.String? = nil
        ) {
            self.id = id
            self.name = name
            self.created = created
            self.unlinked = unlinked
            self.creator = creator
            self.topic = topic
            self.purpose = purpose
            self.priority = priority
            self.user = user
            self.updated = updated
            self.properties = properties
            self.isChannel = isChannel
            self.isGroup = isGroup
            self.isIm = isIm
            self.isArchived = isArchived
            self.isGeneral = isGeneral
            self.nameNormalized = nameNormalized
            self.isShared = isShared
            self.isExtShared = isExtShared
            self.isOrgShared = isOrgShared
            self.sharedTeamIds = sharedTeamIds
            self.pendingShared = pendingShared
            self.pendingConnectedTeamIds = pendingConnectedTeamIds
            self.isPendingExtShared = isPendingExtShared
            self.isPrivate = isPrivate
            self.isMpim = isMpim
            self.previousNames = previousNames
            self.conversationHostId = conversationHostId
            self.isMoved = isMoved
            self.internalTeamIds = internalTeamIds
            self.isGlobalShared = isGlobalShared
            self.isOrgDefault = isOrgDefault
            self.isOrgMandatory = isOrgMandatory
            self.enterpriseId = enterpriseId
            self.lastRead = lastRead
            self.isOpen = isOpen
            self.isUserDeleted = isUserDeleted
            self.parentConversation = parentConversation
            self.contextTeamId = contextTeamId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Purpose`.
    public struct Purpose: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Purpose/value`.
        public var value: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Purpose/creator`.
        public var creator: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Purpose/lastSet`.
        public var lastSet: Swift.Int?
        /// Creates a new `Purpose`.
        ///
        /// - Parameters:
        ///   - value:
        ///   - creator:
        ///   - lastSet:
        public init(
            value: Swift.String? = nil,
            creator: Swift.String? = nil,
            lastSet: Swift.Int? = nil
        ) {
            self.value = value
            self.creator = creator
            self.lastSet = lastSet
        }
    }
    /// - Remark: Generated from `#/components/schemas/SessionSetting`.
    public struct SessionSetting: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/SessionSetting/duration`.
        public var duration: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SessionSetting/userId`.
        public var userId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SessionSetting/desktopAppBrowserQuit`.
        public var desktopAppBrowserQuit: Swift.Bool?
        /// Creates a new `SessionSetting`.
        ///
        /// - Parameters:
        ///   - duration:
        ///   - userId:
        ///   - desktopAppBrowserQuit:
        public init(
            duration: Swift.Int? = nil,
            userId: Swift.String? = nil,
            desktopAppBrowserQuit: Swift.Bool? = nil
        ) {
            self.duration = duration
            self.userId = userId
            self.desktopAppBrowserQuit = desktopAppBrowserQuit
        }
    }
    /// - Remark: Generated from `#/components/schemas/ActiveSession`.
    public struct ActiveSession: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ActiveSession/created`.
        public var created: Components.Schemas.Created?
        /// - Remark: Generated from `#/components/schemas/ActiveSession/recent`.
        public var recent: Components.Schemas.Created?
        /// - Remark: Generated from `#/components/schemas/ActiveSession/userId`.
        public var userId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ActiveSession/sessionId`.
        public var sessionId: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ActiveSession/teamId`.
        public var teamId: Swift.String?
        /// Creates a new `ActiveSession`.
        ///
        /// - Parameters:
        ///   - created:
        ///   - recent:
        ///   - userId:
        ///   - sessionId:
        ///   - teamId:
        public init(
            created: Components.Schemas.Created? = nil,
            recent: Components.Schemas.Created? = nil,
            userId: Swift.String? = nil,
            sessionId: Swift.Int? = nil,
            teamId: Swift.String? = nil
        ) {
            self.created = created
            self.recent = recent
            self.userId = userId
            self.sessionId = sessionId
            self.teamId = teamId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Created`.
    public struct Created: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Created/os`.
        public var os: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Created/ip`.
        public var ip: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Created/deviceHardware`.
        public var deviceHardware: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Created/osVersion`.
        public var osVersion: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Created/slackClientVersion`.
        public var slackClientVersion: Swift.String?
        /// Creates a new `Created`.
        ///
        /// - Parameters:
        ///   - os:
        ///   - ip:
        ///   - deviceHardware:
        ///   - osVersion:
        ///   - slackClientVersion:
        public init(
            os: Swift.String? = nil,
            ip: Swift.String? = nil,
            deviceHardware: Swift.String? = nil,
            osVersion: Swift.String? = nil,
            slackClientVersion: Swift.String? = nil
        ) {
            self.os = os
            self.ip = ip
            self.deviceHardware = deviceHardware
            self.osVersion = osVersion
            self.slackClientVersion = slackClientVersion
        }
    }
    /// - Remark: Generated from `#/components/schemas/Error`.
    public struct _Error: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Error/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/Error/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Error/user`.
        public var user: Swift.String?
        /// Creates a new `_Error`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - error:
        ///   - user:
        public init(
            ok: Swift.Bool,
            error: Swift.String? = nil,
            user: Swift.String? = nil
        ) {
            self.ok = ok
            self.error = error
            self.user = user
        }
    }
    /// - Remark: Generated from `#/components/schemas/Authorization`.
    public struct Authorization: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Authorization/enterpriseId`.
        public var enterpriseId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Authorization/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Authorization/userId`.
        public var userId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Authorization/isBot`.
        public var isBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Authorization/isEnterpriseInstall`.
        public var isEnterpriseInstall: Swift.Bool?
        /// Creates a new `Authorization`.
        ///
        /// - Parameters:
        ///   - enterpriseId:
        ///   - teamId:
        ///   - userId:
        ///   - isBot:
        ///   - isEnterpriseInstall:
        public init(
            enterpriseId: Swift.String? = nil,
            teamId: Swift.String? = nil,
            userId: Swift.String? = nil,
            isBot: Swift.Bool? = nil,
            isEnterpriseInstall: Swift.Bool? = nil
        ) {
            self.enterpriseId = enterpriseId
            self.teamId = teamId
            self.userId = userId
            self.isBot = isBot
            self.isEnterpriseInstall = isEnterpriseInstall
        }
    }
    /// - Remark: Generated from `#/components/schemas/Credentials`.
    public struct Credentials: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Credentials/clientId`.
        public var clientId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Credentials/clientSecret`.
        public var clientSecret: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Credentials/verificationToken`.
        public var verificationToken: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Credentials/signingSecret`.
        public var signingSecret: Swift.String?
        /// Creates a new `Credentials`.
        ///
        /// - Parameters:
        ///   - clientId:
        ///   - clientSecret:
        ///   - verificationToken:
        ///   - signingSecret:
        public init(
            clientId: Swift.String? = nil,
            clientSecret: Swift.String? = nil,
            verificationToken: Swift.String? = nil,
            signingSecret: Swift.String? = nil
        ) {
            self.clientId = clientId
            self.clientSecret = clientSecret
            self.verificationToken = verificationToken
            self.signingSecret = signingSecret
        }
    }
    /// - Remark: Generated from `#/components/schemas/Manifest`.
    public struct Manifest: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Manifest/settings`.
        public var settings: Components.Schemas.Settings?
        /// - Remark: Generated from `#/components/schemas/Manifest/features`.
        public var features: Components.Schemas.Features?
        /// - Remark: Generated from `#/components/schemas/Manifest/functions`.
        public var functions: OpenAPIRuntime.OpenAPIObjectContainer?
        /// - Remark: Generated from `#/components/schemas/Manifest/Metadata`.
        public var metadata: Components.Schemas.Metadata?
        /// - Remark: Generated from `#/components/schemas/Manifest/displayInformation`.
        public var displayInformation: Components.Schemas.DisplayInformation?
        /// - Remark: Generated from `#/components/schemas/Manifest/oauthConfig`.
        public var oauthConfig: Components.Schemas.OauthConfig?
        /// Creates a new `Manifest`.
        ///
        /// - Parameters:
        ///   - settings:
        ///   - features:
        ///   - functions:
        ///   - metadata:
        ///   - displayInformation:
        ///   - oauthConfig:
        public init(
            settings: Components.Schemas.Settings? = nil,
            features: Components.Schemas.Features? = nil,
            functions: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
            metadata: Components.Schemas.Metadata? = nil,
            displayInformation: Components.Schemas.DisplayInformation? = nil,
            oauthConfig: Components.Schemas.OauthConfig? = nil
        ) {
            self.settings = settings
            self.features = features
            self.functions = functions
            self.metadata = metadata
            self.displayInformation = displayInformation
            self.oauthConfig = oauthConfig
        }
    }
    /// - Remark: Generated from `#/components/schemas/Metadata`.
    public struct Metadata: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Metadata/format`.
        public var format: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Metadata/extension`.
        public var _extension: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Metadata/rotation`.
        public var rotation: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Metadata/thumb64`.
        public var thumb64: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Metadata/thumb80`.
        public var thumb80: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Metadata/thumb160`.
        public var thumb160: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Metadata/originalW`.
        public var originalW: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Metadata/originalH`.
        public var originalH: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Metadata/thumb360W`.
        public var thumb360W: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Metadata/thumb360H`.
        public var thumb360H: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Metadata/thumbTiny`.
        public var thumbTiny: Swift.String?
        /// Creates a new `Metadata`.
        ///
        /// - Parameters:
        ///   - format:
        ///   - _extension:
        ///   - rotation:
        ///   - thumb64:
        ///   - thumb80:
        ///   - thumb160:
        ///   - originalW:
        ///   - originalH:
        ///   - thumb360W:
        ///   - thumb360H:
        ///   - thumbTiny:
        public init(
            format: Swift.String? = nil,
            _extension: Swift.String? = nil,
            rotation: Swift.Int? = nil,
            thumb64: Swift.Bool? = nil,
            thumb80: Swift.Bool? = nil,
            thumb160: Swift.Bool? = nil,
            originalW: Swift.Int? = nil,
            originalH: Swift.Int? = nil,
            thumb360W: Swift.Int? = nil,
            thumb360H: Swift.Int? = nil,
            thumbTiny: Swift.String? = nil
        ) {
            self.format = format
            self._extension = _extension
            self.rotation = rotation
            self.thumb64 = thumb64
            self.thumb80 = thumb80
            self.thumb160 = thumb160
            self.originalW = originalW
            self.originalH = originalH
            self.thumb360W = thumb360W
            self.thumb360H = thumb360H
            self.thumbTiny = thumbTiny
        }
    }
    /// - Remark: Generated from `#/components/schemas/DisplayInformation`.
    public struct DisplayInformation: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/DisplayInformation/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/DisplayInformation/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/DisplayInformation/longDescription`.
        public var longDescription: Swift.String?
        /// - Remark: Generated from `#/components/schemas/DisplayInformation/backgroundColor`.
        public var backgroundColor: Swift.String?
        /// Creates a new `DisplayInformation`.
        ///
        /// - Parameters:
        ///   - name:
        ///   - description:
        ///   - longDescription:
        ///   - backgroundColor:
        public init(
            name: Swift.String? = nil,
            description: Swift.String? = nil,
            longDescription: Swift.String? = nil,
            backgroundColor: Swift.String? = nil
        ) {
            self.name = name
            self.description = description
            self.longDescription = longDescription
            self.backgroundColor = backgroundColor
        }
    }
    /// - Remark: Generated from `#/components/schemas/Features`.
    public struct Features: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Features/shortcuts`.
        public var shortcuts: [Components.Schemas.Shortcut]?
        /// - Remark: Generated from `#/components/schemas/Features/appHome`.
        public var appHome: Components.Schemas.AppHome?
        /// - Remark: Generated from `#/components/schemas/Features/botUser`.
        public var botUser: Components.Schemas.BotUser?
        /// - Remark: Generated from `#/components/schemas/Features/slashCommands`.
        public var slashCommands: [Components.Schemas.SlashCommand]?
        /// - Remark: Generated from `#/components/schemas/Features/unfurlDomains`.
        public var unfurlDomains: [Swift.String]?
        /// Creates a new `Features`.
        ///
        /// - Parameters:
        ///   - shortcuts:
        ///   - appHome:
        ///   - botUser:
        ///   - slashCommands:
        ///   - unfurlDomains:
        public init(
            shortcuts: [Components.Schemas.Shortcut]? = nil,
            appHome: Components.Schemas.AppHome? = nil,
            botUser: Components.Schemas.BotUser? = nil,
            slashCommands: [Components.Schemas.SlashCommand]? = nil,
            unfurlDomains: [Swift.String]? = nil
        ) {
            self.shortcuts = shortcuts
            self.appHome = appHome
            self.botUser = botUser
            self.slashCommands = slashCommands
            self.unfurlDomains = unfurlDomains
        }
    }
    /// - Remark: Generated from `#/components/schemas/AppHome`.
    public struct AppHome: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/AppHome/homeTabEnabled`.
        public var homeTabEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/AppHome/messagesTabEnabled`.
        public var messagesTabEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/AppHome/messagesTabReadOnlyEnabled`.
        public var messagesTabReadOnlyEnabled: Swift.Bool?
        /// Creates a new `AppHome`.
        ///
        /// - Parameters:
        ///   - homeTabEnabled:
        ///   - messagesTabEnabled:
        ///   - messagesTabReadOnlyEnabled:
        public init(
            homeTabEnabled: Swift.Bool? = nil,
            messagesTabEnabled: Swift.Bool? = nil,
            messagesTabReadOnlyEnabled: Swift.Bool? = nil
        ) {
            self.homeTabEnabled = homeTabEnabled
            self.messagesTabEnabled = messagesTabEnabled
            self.messagesTabReadOnlyEnabled = messagesTabReadOnlyEnabled
        }
    }
    /// - Remark: Generated from `#/components/schemas/BotUser`.
    public struct BotUser: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/BotUser/displayName`.
        public var displayName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/BotUser/alwaysOnline`.
        public var alwaysOnline: Swift.Bool?
        /// Creates a new `BotUser`.
        ///
        /// - Parameters:
        ///   - displayName:
        ///   - alwaysOnline:
        public init(
            displayName: Swift.String? = nil,
            alwaysOnline: Swift.Bool? = nil
        ) {
            self.displayName = displayName
            self.alwaysOnline = alwaysOnline
        }
    }
    /// - Remark: Generated from `#/components/schemas/Shortcut`.
    public struct Shortcut: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Shortcut/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Shortcut/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Shortcut/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Shortcut/callbackId`.
        public var callbackId: Swift.String?
        /// Creates a new `Shortcut`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - name:
        ///   - description:
        ///   - callbackId:
        public init(
            type: Swift.String? = nil,
            name: Swift.String? = nil,
            description: Swift.String? = nil,
            callbackId: Swift.String? = nil
        ) {
            self.type = type
            self.name = name
            self.description = description
            self.callbackId = callbackId
        }
    }
    /// - Remark: Generated from `#/components/schemas/SlashCommand`.
    public struct SlashCommand: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/SlashCommand/command`.
        public var command: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SlashCommand/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SlashCommand/url`.
        public var url: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SlashCommand/usageHint`.
        public var usageHint: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SlashCommand/shouldEscape`.
        public var shouldEscape: Swift.Bool?
        /// Creates a new `SlashCommand`.
        ///
        /// - Parameters:
        ///   - command:
        ///   - description:
        ///   - url:
        ///   - usageHint:
        ///   - shouldEscape:
        public init(
            command: Swift.String? = nil,
            description: Swift.String? = nil,
            url: Swift.String? = nil,
            usageHint: Swift.String? = nil,
            shouldEscape: Swift.Bool? = nil
        ) {
            self.command = command
            self.description = description
            self.url = url
            self.usageHint = usageHint
            self.shouldEscape = shouldEscape
        }
    }
    /// - Remark: Generated from `#/components/schemas/OauthConfig`.
    public struct OauthConfig: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/OauthConfig/scopes`.
        public var scopes: Components.Schemas.Scopes?
        /// - Remark: Generated from `#/components/schemas/OauthConfig/redirectUrls`.
        public var redirectUrls: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/OauthConfig/tokenManagementEnabled`.
        public var tokenManagementEnabled: Swift.Bool?
        /// Creates a new `OauthConfig`.
        ///
        /// - Parameters:
        ///   - scopes:
        ///   - redirectUrls:
        ///   - tokenManagementEnabled:
        public init(
            scopes: Components.Schemas.Scopes? = nil,
            redirectUrls: [Swift.String]? = nil,
            tokenManagementEnabled: Swift.Bool? = nil
        ) {
            self.scopes = scopes
            self.redirectUrls = redirectUrls
            self.tokenManagementEnabled = tokenManagementEnabled
        }
    }
    /// - Remark: Generated from `#/components/schemas/Scopes`.
    public struct Scopes: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Scopes/team`.
        public var team: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Scopes/channel`.
        public var channel: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Scopes/group`.
        public var group: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Scopes/mpim`.
        public var mpim: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Scopes/im`.
        public var im: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Scopes/user`.
        public var user: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Scopes/appHome`.
        public var appHome: [Swift.String]?
        /// Creates a new `Scopes`.
        ///
        /// - Parameters:
        ///   - team:
        ///   - channel:
        ///   - group:
        ///   - mpim:
        ///   - im:
        ///   - user:
        ///   - appHome:
        public init(
            team: [Swift.String]? = nil,
            channel: [Swift.String]? = nil,
            group: [Swift.String]? = nil,
            mpim: [Swift.String]? = nil,
            im: [Swift.String]? = nil,
            user: [Swift.String]? = nil,
            appHome: [Swift.String]? = nil
        ) {
            self.team = team
            self.channel = channel
            self.group = group
            self.mpim = mpim
            self.im = im
            self.user = user
            self.appHome = appHome
        }
    }
    /// - Remark: Generated from `#/components/schemas/Settings`.
    public struct Settings: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Settings/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Settings/interactivity`.
        public var interactivity: Components.Schemas.Interactivity?
        /// - Remark: Generated from `#/components/schemas/Settings/longDescription`.
        public var longDescription: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Settings/backgroundColor`.
        public var backgroundColor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Settings/eventSubscriptions`.
        public var eventSubscriptions: Components.Schemas.EventSubscriptions?
        /// - Remark: Generated from `#/components/schemas/Settings/allowedIpAddressRanges`.
        public var allowedIpAddressRanges: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Settings/orgDeployEnabled`.
        public var orgDeployEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Settings/socketModeEnabled`.
        public var socketModeEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Settings/tokenRotationEnabled`.
        public var tokenRotationEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Settings/hermesAppType`.
        public var hermesAppType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Settings/functionRuntime`.
        public var functionRuntime: Swift.String?
        /// Creates a new `Settings`.
        ///
        /// - Parameters:
        ///   - description:
        ///   - interactivity:
        ///   - longDescription:
        ///   - backgroundColor:
        ///   - eventSubscriptions:
        ///   - allowedIpAddressRanges:
        ///   - orgDeployEnabled:
        ///   - socketModeEnabled:
        ///   - tokenRotationEnabled:
        ///   - hermesAppType:
        ///   - functionRuntime:
        public init(
            description: Swift.String? = nil,
            interactivity: Components.Schemas.Interactivity? = nil,
            longDescription: Swift.String? = nil,
            backgroundColor: Swift.String? = nil,
            eventSubscriptions: Components.Schemas.EventSubscriptions? = nil,
            allowedIpAddressRanges: [Swift.String]? = nil,
            orgDeployEnabled: Swift.Bool? = nil,
            socketModeEnabled: Swift.Bool? = nil,
            tokenRotationEnabled: Swift.Bool? = nil,
            hermesAppType: Swift.String? = nil,
            functionRuntime: Swift.String? = nil
        ) {
            self.description = description
            self.interactivity = interactivity
            self.longDescription = longDescription
            self.backgroundColor = backgroundColor
            self.eventSubscriptions = eventSubscriptions
            self.allowedIpAddressRanges = allowedIpAddressRanges
            self.orgDeployEnabled = orgDeployEnabled
            self.socketModeEnabled = socketModeEnabled
            self.tokenRotationEnabled = tokenRotationEnabled
            self.hermesAppType = hermesAppType
            self.functionRuntime = functionRuntime
        }
    }
    /// - Remark: Generated from `#/components/schemas/EventSubscriptions`.
    public struct EventSubscriptions: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/EventSubscriptions/botEvents`.
        public var botEvents: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/EventSubscriptions/userEvents`.
        public var userEvents: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/EventSubscriptions/requestUrl`.
        public var requestUrl: Swift.String?
        /// Creates a new `EventSubscriptions`.
        ///
        /// - Parameters:
        ///   - botEvents:
        ///   - userEvents:
        ///   - requestUrl:
        public init(
            botEvents: [Swift.String]? = nil,
            userEvents: [Swift.String]? = nil,
            requestUrl: Swift.String? = nil
        ) {
            self.botEvents = botEvents
            self.userEvents = userEvents
            self.requestUrl = requestUrl
        }
    }
    /// - Remark: Generated from `#/components/schemas/Interactivity`.
    public struct Interactivity: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Interactivity/isEnabled`.
        public var isEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Interactivity/requestUrl`.
        public var requestUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Interactivity/messageMenuOptionsUrl`.
        public var messageMenuOptionsUrl: Swift.String?
        /// Creates a new `Interactivity`.
        ///
        /// - Parameters:
        ///   - isEnabled:
        ///   - requestUrl:
        ///   - messageMenuOptionsUrl:
        public init(
            isEnabled: Swift.Bool? = nil,
            requestUrl: Swift.String? = nil,
            messageMenuOptionsUrl: Swift.String? = nil
        ) {
            self.isEnabled = isEnabled
            self.requestUrl = requestUrl
            self.messageMenuOptionsUrl = messageMenuOptionsUrl
        }
    }
    /// - Remark: Generated from `#/components/schemas/Bookmark`.
    public struct Bookmark: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Bookmark/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/title`.
        public var title: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/link`.
        public var link: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/emoji`.
        public var emoji: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/rank`.
        public var rank: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/channelId`.
        public var channelId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/iconUrl`.
        public var iconUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/entityId`.
        public var entityId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/dateCreated`.
        public var dateCreated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Bookmark/dateUpdated`.
        public var dateUpdated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Bookmark/lastUpdatedByUserId`.
        public var lastUpdatedByUserId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/lastUpdatedByTeamId`.
        public var lastUpdatedByTeamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/shortcutId`.
        public var shortcutId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bookmark/appActionId`.
        public var appActionId: Swift.String?
        /// Creates a new `Bookmark`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - title:
        ///   - link:
        ///   - emoji:
        ///   - type:
        ///   - rank:
        ///   - channelId:
        ///   - iconUrl:
        ///   - entityId:
        ///   - dateCreated:
        ///   - dateUpdated:
        ///   - lastUpdatedByUserId:
        ///   - lastUpdatedByTeamId:
        ///   - shortcutId:
        ///   - appId:
        ///   - appActionId:
        public init(
            id: Swift.String? = nil,
            title: Swift.String? = nil,
            link: Swift.String? = nil,
            emoji: Swift.String? = nil,
            type: Swift.String? = nil,
            rank: Swift.String? = nil,
            channelId: Swift.String? = nil,
            iconUrl: Swift.String? = nil,
            entityId: Swift.String? = nil,
            dateCreated: Swift.Int? = nil,
            dateUpdated: Swift.Int? = nil,
            lastUpdatedByUserId: Swift.String? = nil,
            lastUpdatedByTeamId: Swift.String? = nil,
            shortcutId: Swift.String? = nil,
            appId: Swift.String? = nil,
            appActionId: Swift.String? = nil
        ) {
            self.id = id
            self.title = title
            self.link = link
            self.emoji = emoji
            self.type = type
            self.rank = rank
            self.channelId = channelId
            self.iconUrl = iconUrl
            self.entityId = entityId
            self.dateCreated = dateCreated
            self.dateUpdated = dateUpdated
            self.lastUpdatedByUserId = lastUpdatedByUserId
            self.lastUpdatedByTeamId = lastUpdatedByTeamId
            self.shortcutId = shortcutId
            self.appId = appId
            self.appActionId = appActionId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Bot`.
    public struct Bot: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Bot/id`.
        public var id: Components.Schemas.Id?
        /// - Remark: Generated from `#/components/schemas/Bot/deleted`.
        public var deleted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Bot/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Bot/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Bot/icons`.
        public var icons: Components.Schemas.BotIcons?
        /// - Remark: Generated from `#/components/schemas/Bot/appId`.
        public var appId: Components.Schemas.AppID?
        /// - Remark: Generated from `#/components/schemas/Bot/isWorkflowBot`.
        public var isWorkflowBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Bot/teamId`.
        public var teamId: Swift.String?
        /// Creates a new `Bot`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - deleted:
        ///   - name:
        ///   - updated:
        ///   - icons:
        ///   - appId:
        ///   - isWorkflowBot:
        ///   - teamId:
        public init(
            id: Components.Schemas.Id? = nil,
            deleted: Swift.Bool? = nil,
            name: Swift.String? = nil,
            updated: Swift.Int? = nil,
            icons: Components.Schemas.BotIcons? = nil,
            appId: Components.Schemas.AppID? = nil,
            isWorkflowBot: Swift.Bool? = nil,
            teamId: Swift.String? = nil
        ) {
            self.id = id
            self.deleted = deleted
            self.name = name
            self.updated = updated
            self.icons = icons
            self.appId = appId
            self.isWorkflowBot = isWorkflowBot
            self.teamId = teamId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Section`.
    public struct Section: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Section/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Section/label`.
        public var label: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Section/order`.
        public var order: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Section/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Section/sectionType`.
        public var sectionType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Section/isHidden`.
        public var isHidden: Swift.Bool?
        /// Creates a new `Section`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - label:
        ///   - order:
        ///   - teamId:
        ///   - sectionType:
        ///   - isHidden:
        public init(
            id: Swift.String? = nil,
            label: Swift.String? = nil,
            order: Swift.Int? = nil,
            teamId: Swift.String? = nil,
            sectionType: Swift.String? = nil,
            isHidden: Swift.Bool? = nil
        ) {
            self.id = id
            self.label = label
            self.order = order
            self.teamId = teamId
            self.sectionType = sectionType
            self.isHidden = isHidden
        }
    }
    /// - Remark: Generated from `#/components/schemas/Message`.
    public struct Message: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Message/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/ts`.
        public var ts: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/team`.
        public var team: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/attachments`.
        public var attachments: [Components.Schemas.Attachment]?
        /// - Remark: Generated from `#/components/schemas/Message/permalink`.
        public var permalink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/subtype`.
        public var subtype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/username`.
        public var username: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/blocks`.
        public var blocks: [SlackBlockKit.BlockType]?
        /// - Remark: Generated from `#/components/schemas/Message/subscribed`.
        public var subscribed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Message/reactions`.
        public var reactions: [Components.Schemas.Reaction]?
        /// - Remark: Generated from `#/components/schemas/Message/edited`.
        public var edited: Components.Schemas.Edited?
        /// - Remark: Generated from `#/components/schemas/Message/files`.
        public var files: [Components.Schemas.FileElement]?
        /// - Remark: Generated from `#/components/schemas/Message/upload`.
        public var upload: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Message/inviter`.
        public var inviter: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/botId`.
        public var botId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/isStarred`.
        public var isStarred: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Message/clientMsgId`.
        public var clientMsgId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/threadTs`.
        public var threadTs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/replyCount`.
        public var replyCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Message/replyUsersCount`.
        public var replyUsersCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Message/latestReply`.
        public var latestReply: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/replyUsers`.
        public var replyUsers: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Message/lastRead`.
        public var lastRead: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Message/botProfile`.
        public var botProfile: Components.Schemas.BotProfile?
        /// - Remark: Generated from `#/components/schemas/Message/displayAsBot`.
        public var displayAsBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Message/isLocked`.
        public var isLocked: Swift.Bool?
        /// Creates a new `Message`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - text:
        ///   - user:
        ///   - ts:
        ///   - team:
        ///   - attachments:
        ///   - permalink:
        ///   - subtype:
        ///   - username:
        ///   - blocks:
        ///   - subscribed:
        ///   - reactions:
        ///   - edited:
        ///   - files:
        ///   - upload:
        ///   - inviter:
        ///   - botId:
        ///   - isStarred:
        ///   - clientMsgId:
        ///   - threadTs:
        ///   - replyCount:
        ///   - replyUsersCount:
        ///   - latestReply:
        ///   - replyUsers:
        ///   - lastRead:
        ///   - botProfile:
        ///   - displayAsBot:
        ///   - isLocked:
        public init(
            type: Swift.String? = nil,
            text: Swift.String? = nil,
            user: Swift.String? = nil,
            ts: Swift.String? = nil,
            team: Swift.String? = nil,
            attachments: [Components.Schemas.Attachment]? = nil,
            permalink: Swift.String? = nil,
            subtype: Swift.String? = nil,
            username: Swift.String? = nil,
            blocks: [SlackBlockKit.BlockType]? = nil,
            subscribed: Swift.Bool? = nil,
            reactions: [Components.Schemas.Reaction]? = nil,
            edited: Components.Schemas.Edited? = nil,
            files: [Components.Schemas.FileElement]? = nil,
            upload: Swift.Bool? = nil,
            inviter: Swift.String? = nil,
            botId: Swift.String? = nil,
            isStarred: Swift.Bool? = nil,
            clientMsgId: Swift.String? = nil,
            threadTs: Swift.String? = nil,
            replyCount: Swift.Int? = nil,
            replyUsersCount: Swift.Int? = nil,
            latestReply: Swift.String? = nil,
            replyUsers: [Swift.String]? = nil,
            lastRead: Swift.String? = nil,
            botProfile: Components.Schemas.BotProfile? = nil,
            displayAsBot: Swift.Bool? = nil,
            isLocked: Swift.Bool? = nil
        ) {
            self.type = type
            self.text = text
            self.user = user
            self.ts = ts
            self.team = team
            self.attachments = attachments
            self.permalink = permalink
            self.subtype = subtype
            self.username = username
            self.blocks = blocks
            self.subscribed = subscribed
            self.reactions = reactions
            self.edited = edited
            self.files = files
            self.upload = upload
            self.inviter = inviter
            self.botId = botId
            self.isStarred = isStarred
            self.clientMsgId = clientMsgId
            self.threadTs = threadTs
            self.replyCount = replyCount
            self.replyUsersCount = replyUsersCount
            self.latestReply = latestReply
            self.replyUsers = replyUsers
            self.lastRead = lastRead
            self.botProfile = botProfile
            self.displayAsBot = displayAsBot
            self.isLocked = isLocked
        }
    }
    /// - Remark: Generated from `#/components/schemas/Attachment`.
    public struct Attachment: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Attachment/fallback`.
        public var fallback: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/color`.
        public var color: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/pretext`.
        public var pretext: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/id`.
        public var id: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/indent`.
        public var indent: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Attachment/title`.
        public var title: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/fields`.
        public var fields: [Components.Schemas.Field]?
        /// - Remark: Generated from `#/components/schemas/Attachment/footer`.
        public var footer: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/ts`.
        public var ts: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/actions`.
        public var actions: [Components.Schemas.Action]?
        /// - Remark: Generated from `#/components/schemas/Attachment/blocks`.
        public var blocks: [SlackBlockKit.BlockType]?
        /// - Remark: Generated from `#/components/schemas/Attachment/preview`.
        public var preview: Components.Schemas.Preview?
        /// - Remark: Generated from `#/components/schemas/Attachment/files`.
        public var files: [Components.Schemas.FileElement]?
        /// - Remark: Generated from `#/components/schemas/Attachment/filename`.
        public var filename: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/size`.
        public var size: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/mimetype`.
        public var mimetype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/url`.
        public var url: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/metadata`.
        public var metadata: Components.Schemas.Metadata?
        /// - Remark: Generated from `#/components/schemas/Attachment/msgSubtype`.
        public var msgSubtype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/callbackId`.
        public var callbackId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/serviceUrl`.
        public var serviceUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/serviceName`.
        public var serviceName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/serviceIcon`.
        public var serviceIcon: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/authorId`.
        public var authorId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/authorName`.
        public var authorName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/authorLink`.
        public var authorLink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/authorIcon`.
        public var authorIcon: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/fromUrl`.
        public var fromUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/originalUrl`.
        public var originalUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/authorSubname`.
        public var authorSubname: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/channelId`.
        public var channelId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/channelName`.
        public var channelName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/channelTeam`.
        public var channelTeam: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/botId`.
        public var botId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/isMsgUnfurl`.
        public var isMsgUnfurl: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Attachment/isReplyUnfurl`.
        public var isReplyUnfurl: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Attachment/isThreadRootUnfurl`.
        public var isThreadRootUnfurl: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Attachment/isAppUnfurl`.
        public var isAppUnfurl: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Attachment/appUnfurlUrl`.
        public var appUnfurlUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/titleLink`.
        public var titleLink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/imageUrl`.
        public var imageUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/imageWidth`.
        public var imageWidth: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/imageHeight`.
        public var imageHeight: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/imageBytes`.
        public var imageBytes: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/thumbUrl`.
        public var thumbUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/thumbWidth`.
        public var thumbWidth: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/thumbHeight`.
        public var thumbHeight: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/videoUrl`.
        public var videoUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/videoHtml`.
        public var videoHtml: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/videoHtmlWidth`.
        public var videoHtmlWidth: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/videoHtmlHeight`.
        public var videoHtmlHeight: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Attachment/footerIcon`.
        public var footerIcon: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Attachment/mrkdwnIn`.
        public var mrkdwnIn: [Swift.String]?
        /// Creates a new `Attachment`.
        ///
        /// - Parameters:
        ///   - fallback:
        ///   - color:
        ///   - pretext:
        ///   - id:
        ///   - indent:
        ///   - title:
        ///   - text:
        ///   - fields:
        ///   - footer:
        ///   - ts:
        ///   - actions:
        ///   - blocks:
        ///   - preview:
        ///   - files:
        ///   - filename:
        ///   - size:
        ///   - mimetype:
        ///   - url:
        ///   - metadata:
        ///   - msgSubtype:
        ///   - callbackId:
        ///   - serviceUrl:
        ///   - serviceName:
        ///   - serviceIcon:
        ///   - authorId:
        ///   - authorName:
        ///   - authorLink:
        ///   - authorIcon:
        ///   - fromUrl:
        ///   - originalUrl:
        ///   - authorSubname:
        ///   - channelId:
        ///   - channelName:
        ///   - channelTeam:
        ///   - appId:
        ///   - botId:
        ///   - isMsgUnfurl:
        ///   - isReplyUnfurl:
        ///   - isThreadRootUnfurl:
        ///   - isAppUnfurl:
        ///   - appUnfurlUrl:
        ///   - titleLink:
        ///   - imageUrl:
        ///   - imageWidth:
        ///   - imageHeight:
        ///   - imageBytes:
        ///   - thumbUrl:
        ///   - thumbWidth:
        ///   - thumbHeight:
        ///   - videoUrl:
        ///   - videoHtml:
        ///   - videoHtmlWidth:
        ///   - videoHtmlHeight:
        ///   - footerIcon:
        ///   - mrkdwnIn:
        public init(
            fallback: Swift.String? = nil,
            color: Swift.String? = nil,
            pretext: Swift.String? = nil,
            id: Swift.Int? = nil,
            indent: Swift.Bool? = nil,
            title: Swift.String? = nil,
            text: Swift.String? = nil,
            fields: [Components.Schemas.Field]? = nil,
            footer: Swift.String? = nil,
            ts: Swift.String? = nil,
            actions: [Components.Schemas.Action]? = nil,
            blocks: [SlackBlockKit.BlockType]? = nil,
            preview: Components.Schemas.Preview? = nil,
            files: [Components.Schemas.FileElement]? = nil,
            filename: Swift.String? = nil,
            size: Swift.Int? = nil,
            mimetype: Swift.String? = nil,
            url: Swift.String? = nil,
            metadata: Components.Schemas.Metadata? = nil,
            msgSubtype: Swift.String? = nil,
            callbackId: Swift.String? = nil,
            serviceUrl: Swift.String? = nil,
            serviceName: Swift.String? = nil,
            serviceIcon: Swift.String? = nil,
            authorId: Swift.String? = nil,
            authorName: Swift.String? = nil,
            authorLink: Swift.String? = nil,
            authorIcon: Swift.String? = nil,
            fromUrl: Swift.String? = nil,
            originalUrl: Swift.String? = nil,
            authorSubname: Swift.String? = nil,
            channelId: Swift.String? = nil,
            channelName: Swift.String? = nil,
            channelTeam: Swift.String? = nil,
            appId: Swift.String? = nil,
            botId: Swift.String? = nil,
            isMsgUnfurl: Swift.Bool? = nil,
            isReplyUnfurl: Swift.Bool? = nil,
            isThreadRootUnfurl: Swift.Bool? = nil,
            isAppUnfurl: Swift.Bool? = nil,
            appUnfurlUrl: Swift.String? = nil,
            titleLink: Swift.String? = nil,
            imageUrl: Swift.String? = nil,
            imageWidth: Swift.Int? = nil,
            imageHeight: Swift.Int? = nil,
            imageBytes: Swift.Int? = nil,
            thumbUrl: Swift.String? = nil,
            thumbWidth: Swift.Int? = nil,
            thumbHeight: Swift.Int? = nil,
            videoUrl: Swift.String? = nil,
            videoHtml: Swift.String? = nil,
            videoHtmlWidth: Swift.Int? = nil,
            videoHtmlHeight: Swift.Int? = nil,
            footerIcon: Swift.String? = nil,
            mrkdwnIn: [Swift.String]? = nil
        ) {
            self.fallback = fallback
            self.color = color
            self.pretext = pretext
            self.id = id
            self.indent = indent
            self.title = title
            self.text = text
            self.fields = fields
            self.footer = footer
            self.ts = ts
            self.actions = actions
            self.blocks = blocks
            self.preview = preview
            self.files = files
            self.filename = filename
            self.size = size
            self.mimetype = mimetype
            self.url = url
            self.metadata = metadata
            self.msgSubtype = msgSubtype
            self.callbackId = callbackId
            self.serviceUrl = serviceUrl
            self.serviceName = serviceName
            self.serviceIcon = serviceIcon
            self.authorId = authorId
            self.authorName = authorName
            self.authorLink = authorLink
            self.authorIcon = authorIcon
            self.fromUrl = fromUrl
            self.originalUrl = originalUrl
            self.authorSubname = authorSubname
            self.channelId = channelId
            self.channelName = channelName
            self.channelTeam = channelTeam
            self.appId = appId
            self.botId = botId
            self.isMsgUnfurl = isMsgUnfurl
            self.isReplyUnfurl = isReplyUnfurl
            self.isThreadRootUnfurl = isThreadRootUnfurl
            self.isAppUnfurl = isAppUnfurl
            self.appUnfurlUrl = appUnfurlUrl
            self.titleLink = titleLink
            self.imageUrl = imageUrl
            self.imageWidth = imageWidth
            self.imageHeight = imageHeight
            self.imageBytes = imageBytes
            self.thumbUrl = thumbUrl
            self.thumbWidth = thumbWidth
            self.thumbHeight = thumbHeight
            self.videoUrl = videoUrl
            self.videoHtml = videoHtml
            self.videoHtmlWidth = videoHtmlWidth
            self.videoHtmlHeight = videoHtmlHeight
            self.footerIcon = footerIcon
            self.mrkdwnIn = mrkdwnIn
        }
    }
    /// - Remark: Generated from `#/components/schemas/Action`.
    public struct Action: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Action/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Action/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Action/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Action/style`.
        public var style: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Action/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Action/value`.
        public var value: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Action/confirm`.
        public var confirm: Components.Schemas.ActionConfirm?
        /// - Remark: Generated from `#/components/schemas/Action/options`.
        public var options: [Components.Schemas.SelectedOptionElement]?
        /// - Remark: Generated from `#/components/schemas/Action/url`.
        public var url: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Action/selectedOptions`.
        public var selectedOptions: [Components.Schemas.SelectedOptionElement]?
        /// - Remark: Generated from `#/components/schemas/Action/dataSource`.
        public var dataSource: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Action/minQueryLength`.
        public var minQueryLength: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Action/optionGroups`.
        public var optionGroups: [Components.Schemas.ActionOptionGroup]?
        /// Creates a new `Action`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - text:
        ///   - style:
        ///   - type:
        ///   - value:
        ///   - confirm:
        ///   - options:
        ///   - url:
        ///   - selectedOptions:
        ///   - dataSource:
        ///   - minQueryLength:
        ///   - optionGroups:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            text: Swift.String? = nil,
            style: Swift.String? = nil,
            type: Swift.String? = nil,
            value: Swift.String? = nil,
            confirm: Components.Schemas.ActionConfirm? = nil,
            options: [Components.Schemas.SelectedOptionElement]? = nil,
            url: Swift.String? = nil,
            selectedOptions: [Components.Schemas.SelectedOptionElement]? = nil,
            dataSource: Swift.String? = nil,
            minQueryLength: Swift.Int? = nil,
            optionGroups: [Components.Schemas.ActionOptionGroup]? = nil
        ) {
            self.id = id
            self.name = name
            self.text = text
            self.style = style
            self.type = type
            self.value = value
            self.confirm = confirm
            self.options = options
            self.url = url
            self.selectedOptions = selectedOptions
            self.dataSource = dataSource
            self.minQueryLength = minQueryLength
            self.optionGroups = optionGroups
        }
    }
    /// - Remark: Generated from `#/components/schemas/ActionConfirm`.
    public struct ActionConfirm: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ActionConfirm/title`.
        public var title: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ActionConfirm/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ActionConfirm/okText`.
        public var okText: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ActionConfirm/dismissText`.
        public var dismissText: Swift.String?
        /// Creates a new `ActionConfirm`.
        ///
        /// - Parameters:
        ///   - title:
        ///   - text:
        ///   - okText:
        ///   - dismissText:
        public init(
            title: Swift.String? = nil,
            text: Swift.String? = nil,
            okText: Swift.String? = nil,
            dismissText: Swift.String? = nil
        ) {
            self.title = title
            self.text = text
            self.okText = okText
            self.dismissText = dismissText
        }
    }
    /// - Remark: Generated from `#/components/schemas/Field`.
    public struct Field: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Field/value`.
        public var value: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Field/alt`.
        public var alt: Swift.String?
        /// Creates a new `Field`.
        ///
        /// - Parameters:
        ///   - value:
        ///   - alt:
        public init(
            value: Swift.String? = nil,
            alt: Swift.String? = nil
        ) {
            self.value = value
            self.alt = alt
        }
    }
    /// - Remark: Generated from `#/components/schemas/Block`.
    public struct Block: Codable, Hashable, Sendable {
        /// A container of undocumented properties.
        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
        /// Creates a new `Block`.
        ///
        /// - Parameters:
        ///   - additionalProperties: A container of undocumented properties.
        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
            self.additionalProperties = additionalProperties
        }
        public init(from decoder: any Decoder) throws {
            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
        }
        public func encode(to encoder: any Encoder) throws {
            try encoder.encodeAdditionalProperties(additionalProperties)
        }
    }
    /// - Remark: Generated from `#/components/schemas/BotProfile`.
    public struct BotProfile: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/BotProfile/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/BotProfile/deleted`.
        public var deleted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/BotProfile/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/BotProfile/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/BotProfile/icons`.
        public var icons: Components.Schemas.Icons?
        /// - Remark: Generated from `#/components/schemas/BotProfile/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/BotProfile/teamId`.
        public var teamId: Swift.String?
        /// Creates a new `BotProfile`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - deleted:
        ///   - name:
        ///   - updated:
        ///   - icons:
        ///   - appId:
        ///   - teamId:
        public init(
            id: Swift.String? = nil,
            deleted: Swift.Bool? = nil,
            name: Swift.String? = nil,
            updated: Swift.Int? = nil,
            icons: Components.Schemas.Icons? = nil,
            appId: Swift.String? = nil,
            teamId: Swift.String? = nil
        ) {
            self.id = id
            self.deleted = deleted
            self.name = name
            self.updated = updated
            self.icons = icons
            self.appId = appId
            self.teamId = teamId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Edited`.
    public struct Edited: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Edited/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Edited/ts`.
        public var ts: Swift.String?
        /// Creates a new `Edited`.
        ///
        /// - Parameters:
        ///   - user:
        ///   - ts:
        public init(
            user: Swift.String? = nil,
            ts: Swift.String? = nil
        ) {
            self.user = user
            self.ts = ts
        }
    }
    /// - Remark: Generated from `#/components/schemas/File`.
    public struct File: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/File/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/timestamp`.
        public var timestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/title`.
        public var title: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/subject`.
        public var subject: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/mimetype`.
        public var mimetype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/filetype`.
        public var filetype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/mode`.
        public var mode: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/editable`.
        public var editable: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/editor`.
        public var editor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/editors`.
        public var editors: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/File/subtype`.
        public var subtype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/transcription`.
        public var transcription: Components.Schemas.Transcription?
        /// - Remark: Generated from `#/components/schemas/File/mp4`.
        public var mp4: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/vtt`.
        public var vtt: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/hls`.
        public var hls: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/username`.
        public var username: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/size`.
        public var size: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/deanimate`.
        public var deanimate: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/pjpeg`.
        public var pjpeg: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/permalink`.
        public var permalink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/preview`.
        public var preview: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/lines`.
        public var lines: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/channels`.
        public var channels: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/File/groups`.
        public var groups: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/File/ims`.
        public var ims: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/File/shares`.
        public var shares: Components.Schemas.Shares?
        /// - Remark: Generated from `#/components/schemas/File/to`.
        public var to: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/File/from`.
        public var from: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/File/cc`.
        public var cc: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/File/headers`.
        public var headers: Components.Schemas.Headers?
        /// - Remark: Generated from `#/components/schemas/File/saved`.
        public var saved: Components.Schemas.Saved?
        /// - Remark: Generated from `#/components/schemas/File/access`.
        public var access: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/favorites`.
        public var favorites: [Components.Schemas.Favorite]?
        /// - Remark: Generated from `#/components/schemas/File/reactions`.
        public var reactions: [Components.Schemas.Reaction]?
        /// - Remark: Generated from `#/components/schemas/File/attachments`.
        public var attachments: [OpenAPIRuntime.OpenAPIValueContainer]?
        /// - Remark: Generated from `#/components/schemas/File/blocks`.
        public var blocks: [SlackBlockKit.BlockType]?
        /// - Remark: Generated from `#/components/schemas/File/prettyType`.
        public var prettyType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/userTeam`.
        public var userTeam: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/sourceTeam`.
        public var sourceTeam: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/nonOwnerEditable`.
        public var nonOwnerEditable: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/lastEditor`.
        public var lastEditor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/fileAccess`.
        public var fileAccess: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/editTimestamp`.
        public var editTimestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/altTxt`.
        public var altTxt: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/mp4Low`.
        public var mp4Low: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/hlsEmbed`.
        public var hlsEmbed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/durationMs`.
        public var durationMs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/thumbVideoW`.
        public var thumbVideoW: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/thumbVideoH`.
        public var thumbVideoH: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/originalAttachmentCount`.
        public var originalAttachmentCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/isExternal`.
        public var isExternal: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/externalType`.
        public var externalType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/externalId`.
        public var externalId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/externalUrl`.
        public var externalUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/urlPrivate`.
        public var urlPrivate: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/urlPrivateDownload`.
        public var urlPrivateDownload: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/urlStaticPreview`.
        public var urlStaticPreview: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/appName`.
        public var appName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb64`.
        public var thumb64: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb64Gif`.
        public var thumb64Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb64W`.
        public var thumb64W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb64H`.
        public var thumb64H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb80`.
        public var thumb80: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb80Gif`.
        public var thumb80Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb80W`.
        public var thumb80W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb80H`.
        public var thumb80H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb160`.
        public var thumb160: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb160Gif`.
        public var thumb160Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb160W`.
        public var thumb160W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb160H`.
        public var thumb160H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb360`.
        public var thumb360: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb360Gif`.
        public var thumb360Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb360W`.
        public var thumb360W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb360H`.
        public var thumb360H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb480`.
        public var thumb480: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb480Gif`.
        public var thumb480Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb480W`.
        public var thumb480W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb480H`.
        public var thumb480H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb720`.
        public var thumb720: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb720Gif`.
        public var thumb720Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb720W`.
        public var thumb720W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb720H`.
        public var thumb720H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb800`.
        public var thumb800: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb800Gif`.
        public var thumb800Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb800W`.
        public var thumb800W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb800H`.
        public var thumb800H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb960`.
        public var thumb960: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb960Gif`.
        public var thumb960Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb960W`.
        public var thumb960W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb960H`.
        public var thumb960H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb1024`.
        public var thumb1024: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb1024Gif`.
        public var thumb1024Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb1024W`.
        public var thumb1024W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumb1024H`.
        public var thumb1024H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumbVideo`.
        public var thumbVideo: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumbGif`.
        public var thumbGif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumbPdf`.
        public var thumbPdf: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumbPdfW`.
        public var thumbPdfW: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumbPdfH`.
        public var thumbPdfH: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/thumbTiny`.
        public var thumbTiny: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/convertedPdf`.
        public var convertedPdf: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/imageExifRotation`.
        public var imageExifRotation: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/originalW`.
        public var originalW: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/originalH`.
        public var originalH: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/deanimateGif`.
        public var deanimateGif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/permalinkPublic`.
        public var permalinkPublic: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/editLink`.
        public var editLink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/hasRichPreview`.
        public var hasRichPreview: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/mediaDisplayType`.
        public var mediaDisplayType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/previewIsTruncated`.
        public var previewIsTruncated: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/previewHighlight`.
        public var previewHighlight: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/plainText`.
        public var plainText: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/previewPlainText`.
        public var previewPlainText: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/hasMore`.
        public var hasMore: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/sentToSelf`.
        public var sentToSelf: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/linesMore`.
        public var linesMore: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/isPublic`.
        public var isPublic: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/publicUrlShared`.
        public var publicUrlShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/displayAsBot`.
        public var displayAsBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/hasMoreShares`.
        public var hasMoreShares: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/channelActionsTs`.
        public var channelActionsTs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/channelActionsCount`.
        public var channelActionsCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/simplifiedHtml`.
        public var simplifiedHtml: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/mediaProgress`.
        public var mediaProgress: Components.Schemas.MediaProgress?
        /// - Remark: Generated from `#/components/schemas/File/quipThreadId`.
        public var quipThreadId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/isChannelSpace`.
        public var isChannelSpace: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/linkedChannelId`.
        public var linkedChannelId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/teamsSharedWith`.
        public var teamsSharedWith: [OpenAPIRuntime.OpenAPIValueContainer]?
        /// - Remark: Generated from `#/components/schemas/File/lastRead`.
        public var lastRead: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/titleBlocks`.
        public var titleBlocks: [SlackBlockKit.BlockType]?
        /// - Remark: Generated from `#/components/schemas/File/privateChannelsWithFileAccessCount`.
        public var privateChannelsWithFileAccessCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/privateFileWithAccessCount`.
        public var privateFileWithAccessCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/dmMpdmUsersWithFileAccess`.
        public var dmMpdmUsersWithFileAccess: [Components.Schemas.DmMpdmUsersWithFileAccess]?
        /// - Remark: Generated from `#/components/schemas/File/orgOrWorkspaceAccess`.
        public var orgOrWorkspaceAccess: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/updateNotification`.
        public var updateNotification: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/canvasTemplateMode`.
        public var canvasTemplateMode: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/templateConversionTs`.
        public var templateConversionTs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/templateName`.
        public var templateName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/templateTitle`.
        public var templateTitle: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/templateDescription`.
        public var templateDescription: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/templateIcon`.
        public var templateIcon: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/teamPrefVersionHistoryEnabled`.
        public var teamPrefVersionHistoryEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/showBadge`.
        public var showBadge: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/listMetadata`.
        public var listMetadata: Components.Schemas.ListMetadata?
        /// - Remark: Generated from `#/components/schemas/File/listLimits`.
        public var listLimits: Components.Schemas.ListLimits?
        /// - Remark: Generated from `#/components/schemas/File/listCsvDownloadUrl`.
        public var listCsvDownloadUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/canToggleCanvasLock`.
        public var canToggleCanvasLock: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/isRestrictedSharingEnabled`.
        public var isRestrictedSharingEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/canvasPrintingEnabled`.
        public var canvasPrintingEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/botId`.
        public var botId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/File/initialComment`.
        public var initialComment: Components.Schemas.InitialComment?
        /// - Remark: Generated from `#/components/schemas/File/numStars`.
        public var numStars: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/File/isStarred`.
        public var isStarred: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/File/pinnedTo`.
        public var pinnedTo: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/File/commentsCount`.
        public var commentsCount: Swift.Int?
        /// Creates a new `File`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - created:
        ///   - timestamp:
        ///   - name:
        ///   - title:
        ///   - subject:
        ///   - mimetype:
        ///   - filetype:
        ///   - user:
        ///   - mode:
        ///   - editable:
        ///   - editor:
        ///   - updated:
        ///   - editors:
        ///   - subtype:
        ///   - transcription:
        ///   - mp4:
        ///   - vtt:
        ///   - hls:
        ///   - username:
        ///   - size:
        ///   - deanimate:
        ///   - pjpeg:
        ///   - permalink:
        ///   - preview:
        ///   - lines:
        ///   - channels:
        ///   - groups:
        ///   - ims:
        ///   - shares:
        ///   - to:
        ///   - from:
        ///   - cc:
        ///   - headers:
        ///   - saved:
        ///   - access:
        ///   - favorites:
        ///   - reactions:
        ///   - attachments:
        ///   - blocks:
        ///   - prettyType:
        ///   - userTeam:
        ///   - sourceTeam:
        ///   - nonOwnerEditable:
        ///   - lastEditor:
        ///   - fileAccess:
        ///   - editTimestamp:
        ///   - altTxt:
        ///   - mp4Low:
        ///   - hlsEmbed:
        ///   - durationMs:
        ///   - thumbVideoW:
        ///   - thumbVideoH:
        ///   - originalAttachmentCount:
        ///   - isExternal:
        ///   - externalType:
        ///   - externalId:
        ///   - externalUrl:
        ///   - urlPrivate:
        ///   - urlPrivateDownload:
        ///   - urlStaticPreview:
        ///   - appId:
        ///   - appName:
        ///   - thumb64:
        ///   - thumb64Gif:
        ///   - thumb64W:
        ///   - thumb64H:
        ///   - thumb80:
        ///   - thumb80Gif:
        ///   - thumb80W:
        ///   - thumb80H:
        ///   - thumb160:
        ///   - thumb160Gif:
        ///   - thumb160W:
        ///   - thumb160H:
        ///   - thumb360:
        ///   - thumb360Gif:
        ///   - thumb360W:
        ///   - thumb360H:
        ///   - thumb480:
        ///   - thumb480Gif:
        ///   - thumb480W:
        ///   - thumb480H:
        ///   - thumb720:
        ///   - thumb720Gif:
        ///   - thumb720W:
        ///   - thumb720H:
        ///   - thumb800:
        ///   - thumb800Gif:
        ///   - thumb800W:
        ///   - thumb800H:
        ///   - thumb960:
        ///   - thumb960Gif:
        ///   - thumb960W:
        ///   - thumb960H:
        ///   - thumb1024:
        ///   - thumb1024Gif:
        ///   - thumb1024W:
        ///   - thumb1024H:
        ///   - thumbVideo:
        ///   - thumbGif:
        ///   - thumbPdf:
        ///   - thumbPdfW:
        ///   - thumbPdfH:
        ///   - thumbTiny:
        ///   - convertedPdf:
        ///   - imageExifRotation:
        ///   - originalW:
        ///   - originalH:
        ///   - deanimateGif:
        ///   - permalinkPublic:
        ///   - editLink:
        ///   - hasRichPreview:
        ///   - mediaDisplayType:
        ///   - previewIsTruncated:
        ///   - previewHighlight:
        ///   - plainText:
        ///   - previewPlainText:
        ///   - hasMore:
        ///   - sentToSelf:
        ///   - linesMore:
        ///   - isPublic:
        ///   - publicUrlShared:
        ///   - displayAsBot:
        ///   - hasMoreShares:
        ///   - channelActionsTs:
        ///   - channelActionsCount:
        ///   - simplifiedHtml:
        ///   - mediaProgress:
        ///   - quipThreadId:
        ///   - isChannelSpace:
        ///   - linkedChannelId:
        ///   - teamsSharedWith:
        ///   - lastRead:
        ///   - titleBlocks:
        ///   - privateChannelsWithFileAccessCount:
        ///   - privateFileWithAccessCount:
        ///   - dmMpdmUsersWithFileAccess:
        ///   - orgOrWorkspaceAccess:
        ///   - updateNotification:
        ///   - canvasTemplateMode:
        ///   - templateConversionTs:
        ///   - templateName:
        ///   - templateTitle:
        ///   - templateDescription:
        ///   - templateIcon:
        ///   - teamPrefVersionHistoryEnabled:
        ///   - showBadge:
        ///   - listMetadata:
        ///   - listLimits:
        ///   - listCsvDownloadUrl:
        ///   - canToggleCanvasLock:
        ///   - isRestrictedSharingEnabled:
        ///   - canvasPrintingEnabled:
        ///   - botId:
        ///   - initialComment:
        ///   - numStars:
        ///   - isStarred:
        ///   - pinnedTo:
        ///   - commentsCount:
        public init(
            id: Swift.String? = nil,
            created: Swift.Int? = nil,
            timestamp: Swift.Int? = nil,
            name: Swift.String? = nil,
            title: Swift.String? = nil,
            subject: Swift.String? = nil,
            mimetype: Swift.String? = nil,
            filetype: Swift.String? = nil,
            user: Swift.String? = nil,
            mode: Swift.String? = nil,
            editable: Swift.Bool? = nil,
            editor: Swift.String? = nil,
            updated: Swift.Int? = nil,
            editors: [Swift.String]? = nil,
            subtype: Swift.String? = nil,
            transcription: Components.Schemas.Transcription? = nil,
            mp4: Swift.String? = nil,
            vtt: Swift.String? = nil,
            hls: Swift.String? = nil,
            username: Swift.String? = nil,
            size: Swift.Int? = nil,
            deanimate: Swift.String? = nil,
            pjpeg: Swift.String? = nil,
            permalink: Swift.String? = nil,
            preview: Swift.String? = nil,
            lines: Swift.Int? = nil,
            channels: [Swift.String]? = nil,
            groups: [Swift.String]? = nil,
            ims: [Swift.String]? = nil,
            shares: Components.Schemas.Shares? = nil,
            to: [Components.Schemas.Cc]? = nil,
            from: [Components.Schemas.Cc]? = nil,
            cc: [Components.Schemas.Cc]? = nil,
            headers: Components.Schemas.Headers? = nil,
            saved: Components.Schemas.Saved? = nil,
            access: Swift.String? = nil,
            favorites: [Components.Schemas.Favorite]? = nil,
            reactions: [Components.Schemas.Reaction]? = nil,
            attachments: [OpenAPIRuntime.OpenAPIValueContainer]? = nil,
            blocks: [SlackBlockKit.BlockType]? = nil,
            prettyType: Swift.String? = nil,
            userTeam: Swift.String? = nil,
            sourceTeam: Swift.String? = nil,
            nonOwnerEditable: Swift.Bool? = nil,
            lastEditor: Swift.String? = nil,
            fileAccess: Swift.String? = nil,
            editTimestamp: Swift.Int? = nil,
            altTxt: Swift.String? = nil,
            mp4Low: Swift.String? = nil,
            hlsEmbed: Swift.String? = nil,
            durationMs: Swift.Int? = nil,
            thumbVideoW: Swift.Int? = nil,
            thumbVideoH: Swift.Int? = nil,
            originalAttachmentCount: Swift.Int? = nil,
            isExternal: Swift.Bool? = nil,
            externalType: Swift.String? = nil,
            externalId: Swift.String? = nil,
            externalUrl: Swift.String? = nil,
            urlPrivate: Swift.String? = nil,
            urlPrivateDownload: Swift.String? = nil,
            urlStaticPreview: Swift.String? = nil,
            appId: Swift.String? = nil,
            appName: Swift.String? = nil,
            thumb64: Swift.String? = nil,
            thumb64Gif: Swift.String? = nil,
            thumb64W: Swift.String? = nil,
            thumb64H: Swift.String? = nil,
            thumb80: Swift.String? = nil,
            thumb80Gif: Swift.String? = nil,
            thumb80W: Swift.String? = nil,
            thumb80H: Swift.String? = nil,
            thumb160: Swift.String? = nil,
            thumb160Gif: Swift.String? = nil,
            thumb160W: Swift.String? = nil,
            thumb160H: Swift.String? = nil,
            thumb360: Swift.String? = nil,
            thumb360Gif: Swift.String? = nil,
            thumb360W: Swift.String? = nil,
            thumb360H: Swift.String? = nil,
            thumb480: Swift.String? = nil,
            thumb480Gif: Swift.String? = nil,
            thumb480W: Swift.String? = nil,
            thumb480H: Swift.String? = nil,
            thumb720: Swift.String? = nil,
            thumb720Gif: Swift.String? = nil,
            thumb720W: Swift.String? = nil,
            thumb720H: Swift.String? = nil,
            thumb800: Swift.String? = nil,
            thumb800Gif: Swift.String? = nil,
            thumb800W: Swift.String? = nil,
            thumb800H: Swift.String? = nil,
            thumb960: Swift.String? = nil,
            thumb960Gif: Swift.String? = nil,
            thumb960W: Swift.String? = nil,
            thumb960H: Swift.String? = nil,
            thumb1024: Swift.String? = nil,
            thumb1024Gif: Swift.String? = nil,
            thumb1024W: Swift.String? = nil,
            thumb1024H: Swift.String? = nil,
            thumbVideo: Swift.String? = nil,
            thumbGif: Swift.String? = nil,
            thumbPdf: Swift.String? = nil,
            thumbPdfW: Swift.String? = nil,
            thumbPdfH: Swift.String? = nil,
            thumbTiny: Swift.String? = nil,
            convertedPdf: Swift.String? = nil,
            imageExifRotation: Swift.Int? = nil,
            originalW: Swift.String? = nil,
            originalH: Swift.String? = nil,
            deanimateGif: Swift.String? = nil,
            permalinkPublic: Swift.String? = nil,
            editLink: Swift.String? = nil,
            hasRichPreview: Swift.Bool? = nil,
            mediaDisplayType: Swift.String? = nil,
            previewIsTruncated: Swift.Bool? = nil,
            previewHighlight: Swift.String? = nil,
            plainText: Swift.String? = nil,
            previewPlainText: Swift.String? = nil,
            hasMore: Swift.Bool? = nil,
            sentToSelf: Swift.Bool? = nil,
            linesMore: Swift.Int? = nil,
            isPublic: Swift.Bool? = nil,
            publicUrlShared: Swift.Bool? = nil,
            displayAsBot: Swift.Bool? = nil,
            hasMoreShares: Swift.Bool? = nil,
            channelActionsTs: Swift.String? = nil,
            channelActionsCount: Swift.Int? = nil,
            simplifiedHtml: Swift.String? = nil,
            mediaProgress: Components.Schemas.MediaProgress? = nil,
            quipThreadId: Swift.String? = nil,
            isChannelSpace: Swift.Bool? = nil,
            linkedChannelId: Swift.String? = nil,
            teamsSharedWith: [OpenAPIRuntime.OpenAPIValueContainer]? = nil,
            lastRead: Swift.Int? = nil,
            titleBlocks: [SlackBlockKit.BlockType]? = nil,
            privateChannelsWithFileAccessCount: Swift.Int? = nil,
            privateFileWithAccessCount: Swift.Int? = nil,
            dmMpdmUsersWithFileAccess: [Components.Schemas.DmMpdmUsersWithFileAccess]? = nil,
            orgOrWorkspaceAccess: Swift.String? = nil,
            updateNotification: Swift.Int? = nil,
            canvasTemplateMode: Swift.String? = nil,
            templateConversionTs: Swift.Int? = nil,
            templateName: Swift.String? = nil,
            templateTitle: Swift.String? = nil,
            templateDescription: Swift.String? = nil,
            templateIcon: Swift.String? = nil,
            teamPrefVersionHistoryEnabled: Swift.Bool? = nil,
            showBadge: Swift.Bool? = nil,
            listMetadata: Components.Schemas.ListMetadata? = nil,
            listLimits: Components.Schemas.ListLimits? = nil,
            listCsvDownloadUrl: Swift.String? = nil,
            canToggleCanvasLock: Swift.Bool? = nil,
            isRestrictedSharingEnabled: Swift.Bool? = nil,
            canvasPrintingEnabled: Swift.Bool? = nil,
            botId: Swift.String? = nil,
            initialComment: Components.Schemas.InitialComment? = nil,
            numStars: Swift.Int? = nil,
            isStarred: Swift.Bool? = nil,
            pinnedTo: [Swift.String]? = nil,
            commentsCount: Swift.Int? = nil
        ) {
            self.id = id
            self.created = created
            self.timestamp = timestamp
            self.name = name
            self.title = title
            self.subject = subject
            self.mimetype = mimetype
            self.filetype = filetype
            self.user = user
            self.mode = mode
            self.editable = editable
            self.editor = editor
            self.updated = updated
            self.editors = editors
            self.subtype = subtype
            self.transcription = transcription
            self.mp4 = mp4
            self.vtt = vtt
            self.hls = hls
            self.username = username
            self.size = size
            self.deanimate = deanimate
            self.pjpeg = pjpeg
            self.permalink = permalink
            self.preview = preview
            self.lines = lines
            self.channels = channels
            self.groups = groups
            self.ims = ims
            self.shares = shares
            self.to = to
            self.from = from
            self.cc = cc
            self.headers = headers
            self.saved = saved
            self.access = access
            self.favorites = favorites
            self.reactions = reactions
            self.attachments = attachments
            self.blocks = blocks
            self.prettyType = prettyType
            self.userTeam = userTeam
            self.sourceTeam = sourceTeam
            self.nonOwnerEditable = nonOwnerEditable
            self.lastEditor = lastEditor
            self.fileAccess = fileAccess
            self.editTimestamp = editTimestamp
            self.altTxt = altTxt
            self.mp4Low = mp4Low
            self.hlsEmbed = hlsEmbed
            self.durationMs = durationMs
            self.thumbVideoW = thumbVideoW
            self.thumbVideoH = thumbVideoH
            self.originalAttachmentCount = originalAttachmentCount
            self.isExternal = isExternal
            self.externalType = externalType
            self.externalId = externalId
            self.externalUrl = externalUrl
            self.urlPrivate = urlPrivate
            self.urlPrivateDownload = urlPrivateDownload
            self.urlStaticPreview = urlStaticPreview
            self.appId = appId
            self.appName = appName
            self.thumb64 = thumb64
            self.thumb64Gif = thumb64Gif
            self.thumb64W = thumb64W
            self.thumb64H = thumb64H
            self.thumb80 = thumb80
            self.thumb80Gif = thumb80Gif
            self.thumb80W = thumb80W
            self.thumb80H = thumb80H
            self.thumb160 = thumb160
            self.thumb160Gif = thumb160Gif
            self.thumb160W = thumb160W
            self.thumb160H = thumb160H
            self.thumb360 = thumb360
            self.thumb360Gif = thumb360Gif
            self.thumb360W = thumb360W
            self.thumb360H = thumb360H
            self.thumb480 = thumb480
            self.thumb480Gif = thumb480Gif
            self.thumb480W = thumb480W
            self.thumb480H = thumb480H
            self.thumb720 = thumb720
            self.thumb720Gif = thumb720Gif
            self.thumb720W = thumb720W
            self.thumb720H = thumb720H
            self.thumb800 = thumb800
            self.thumb800Gif = thumb800Gif
            self.thumb800W = thumb800W
            self.thumb800H = thumb800H
            self.thumb960 = thumb960
            self.thumb960Gif = thumb960Gif
            self.thumb960W = thumb960W
            self.thumb960H = thumb960H
            self.thumb1024 = thumb1024
            self.thumb1024Gif = thumb1024Gif
            self.thumb1024W = thumb1024W
            self.thumb1024H = thumb1024H
            self.thumbVideo = thumbVideo
            self.thumbGif = thumbGif
            self.thumbPdf = thumbPdf
            self.thumbPdfW = thumbPdfW
            self.thumbPdfH = thumbPdfH
            self.thumbTiny = thumbTiny
            self.convertedPdf = convertedPdf
            self.imageExifRotation = imageExifRotation
            self.originalW = originalW
            self.originalH = originalH
            self.deanimateGif = deanimateGif
            self.permalinkPublic = permalinkPublic
            self.editLink = editLink
            self.hasRichPreview = hasRichPreview
            self.mediaDisplayType = mediaDisplayType
            self.previewIsTruncated = previewIsTruncated
            self.previewHighlight = previewHighlight
            self.plainText = plainText
            self.previewPlainText = previewPlainText
            self.hasMore = hasMore
            self.sentToSelf = sentToSelf
            self.linesMore = linesMore
            self.isPublic = isPublic
            self.publicUrlShared = publicUrlShared
            self.displayAsBot = displayAsBot
            self.hasMoreShares = hasMoreShares
            self.channelActionsTs = channelActionsTs
            self.channelActionsCount = channelActionsCount
            self.simplifiedHtml = simplifiedHtml
            self.mediaProgress = mediaProgress
            self.quipThreadId = quipThreadId
            self.isChannelSpace = isChannelSpace
            self.linkedChannelId = linkedChannelId
            self.teamsSharedWith = teamsSharedWith
            self.lastRead = lastRead
            self.titleBlocks = titleBlocks
            self.privateChannelsWithFileAccessCount = privateChannelsWithFileAccessCount
            self.privateFileWithAccessCount = privateFileWithAccessCount
            self.dmMpdmUsersWithFileAccess = dmMpdmUsersWithFileAccess
            self.orgOrWorkspaceAccess = orgOrWorkspaceAccess
            self.updateNotification = updateNotification
            self.canvasTemplateMode = canvasTemplateMode
            self.templateConversionTs = templateConversionTs
            self.templateName = templateName
            self.templateTitle = templateTitle
            self.templateDescription = templateDescription
            self.templateIcon = templateIcon
            self.teamPrefVersionHistoryEnabled = teamPrefVersionHistoryEnabled
            self.showBadge = showBadge
            self.listMetadata = listMetadata
            self.listLimits = listLimits
            self.listCsvDownloadUrl = listCsvDownloadUrl
            self.canToggleCanvasLock = canToggleCanvasLock
            self.isRestrictedSharingEnabled = isRestrictedSharingEnabled
            self.canvasPrintingEnabled = canvasPrintingEnabled
            self.botId = botId
            self.initialComment = initialComment
            self.numStars = numStars
            self.isStarred = isStarred
            self.pinnedTo = pinnedTo
            self.commentsCount = commentsCount
        }
    }
    /// - Remark: Generated from `#/components/schemas/Reaction`.
    public struct Reaction: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Reaction/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Reaction/count`.
        public var count: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Reaction/users`.
        public var users: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/Reaction/url`.
        public var url: Swift.String?
        /// Creates a new `Reaction`.
        ///
        /// - Parameters:
        ///   - name:
        ///   - count:
        ///   - users:
        ///   - url:
        public init(
            name: Swift.String? = nil,
            count: Swift.Int? = nil,
            users: [Swift.String]? = nil,
            url: Swift.String? = nil
        ) {
            self.name = name
            self.count = count
            self.users = users
            self.url = url
        }
    }
    /// - Remark: Generated from `#/components/schemas/CustomizableInputParameter`.
    public struct CustomizableInputParameter: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/CustomizableInputParameter/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/CustomizableInputParameter/value`.
        public var value: Swift.String?
        /// Creates a new `CustomizableInputParameter`.
        ///
        /// - Parameters:
        ///   - name:
        ///   - value:
        public init(
            name: Swift.String? = nil,
            value: Swift.String? = nil
        ) {
            self.name = name
            self.value = value
        }
    }
    /// - Remark: Generated from `#/components/schemas/Cc`.
    public struct Cc: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Cc/address`.
        public var address: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Cc/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Cc/original`.
        public var original: Swift.String?
        /// Creates a new `Cc`.
        ///
        /// - Parameters:
        ///   - address:
        ///   - name:
        ///   - original:
        public init(
            address: Swift.String? = nil,
            name: Swift.String? = nil,
            original: Swift.String? = nil
        ) {
            self.address = address
            self.name = name
            self.original = original
        }
    }
    /// - Remark: Generated from `#/components/schemas/DmMpdmUsersWithFileAccess`.
    public struct DmMpdmUsersWithFileAccess: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/DmMpdmUsersWithFileAccess/access`.
        public var access: Swift.String?
        /// - Remark: Generated from `#/components/schemas/DmMpdmUsersWithFileAccess/userId`.
        public var userId: Swift.String?
        /// Creates a new `DmMpdmUsersWithFileAccess`.
        ///
        /// - Parameters:
        ///   - access:
        ///   - userId:
        public init(
            access: Swift.String? = nil,
            userId: Swift.String? = nil
        ) {
            self.access = access
            self.userId = userId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Favorite`.
    public struct Favorite: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Favorite/position`.
        public var position: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Favorite/collectionId`.
        public var collectionId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Favorite/collectionName`.
        public var collectionName: Swift.String?
        /// Creates a new `Favorite`.
        ///
        /// - Parameters:
        ///   - position:
        ///   - collectionId:
        ///   - collectionName:
        public init(
            position: Swift.String? = nil,
            collectionId: Swift.String? = nil,
            collectionName: Swift.String? = nil
        ) {
            self.position = position
            self.collectionId = collectionId
            self.collectionName = collectionName
        }
    }
    /// - Remark: Generated from `#/components/schemas/Headers`.
    public struct Headers: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Headers/date`.
        public var date: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Headers/inReplyTo`.
        public var inReplyTo: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Headers/replyTo`.
        public var replyTo: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Headers/messageId`.
        public var messageId: Swift.String?
        /// Creates a new `Headers`.
        ///
        /// - Parameters:
        ///   - date:
        ///   - inReplyTo:
        ///   - replyTo:
        ///   - messageId:
        public init(
            date: Swift.String? = nil,
            inReplyTo: Swift.String? = nil,
            replyTo: Swift.String? = nil,
            messageId: Swift.String? = nil
        ) {
            self.date = date
            self.inReplyTo = inReplyTo
            self.replyTo = replyTo
            self.messageId = messageId
        }
    }
    /// - Remark: Generated from `#/components/schemas/InitialComment`.
    public struct InitialComment: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/InitialComment/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InitialComment/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InitialComment/timestamp`.
        public var timestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InitialComment/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InitialComment/comment`.
        public var comment: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InitialComment/channel`.
        public var channel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InitialComment/isIntro`.
        public var isIntro: Swift.Bool?
        /// Creates a new `InitialComment`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - created:
        ///   - timestamp:
        ///   - user:
        ///   - comment:
        ///   - channel:
        ///   - isIntro:
        public init(
            id: Swift.String? = nil,
            created: Swift.Int? = nil,
            timestamp: Swift.Int? = nil,
            user: Swift.String? = nil,
            comment: Swift.String? = nil,
            channel: Swift.String? = nil,
            isIntro: Swift.Bool? = nil
        ) {
            self.id = id
            self.created = created
            self.timestamp = timestamp
            self.user = user
            self.comment = comment
            self.channel = channel
            self.isIntro = isIntro
        }
    }
    /// - Remark: Generated from `#/components/schemas/ListLimits`.
    public struct ListLimits: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ListLimits/overRowMaximum`.
        public var overRowMaximum: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ListLimits/rowCountLimit`.
        public var rowCountLimit: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ListLimits/rowCount`.
        public var rowCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ListLimits/overColumnMaximum`.
        public var overColumnMaximum: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ListLimits/columnCount`.
        public var columnCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ListLimits/columnCountLimit`.
        public var columnCountLimit: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ListLimits/overViewMaximum`.
        public var overViewMaximum: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ListLimits/viewCount`.
        public var viewCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ListLimits/viewCountLimit`.
        public var viewCountLimit: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ListLimits/maxAttachmentsPerCell`.
        public var maxAttachmentsPerCell: Swift.Int?
        /// Creates a new `ListLimits`.
        ///
        /// - Parameters:
        ///   - overRowMaximum:
        ///   - rowCountLimit:
        ///   - rowCount:
        ///   - overColumnMaximum:
        ///   - columnCount:
        ///   - columnCountLimit:
        ///   - overViewMaximum:
        ///   - viewCount:
        ///   - viewCountLimit:
        ///   - maxAttachmentsPerCell:
        public init(
            overRowMaximum: Swift.Bool? = nil,
            rowCountLimit: Swift.Int? = nil,
            rowCount: Swift.Int? = nil,
            overColumnMaximum: Swift.Bool? = nil,
            columnCount: Swift.Int? = nil,
            columnCountLimit: Swift.Int? = nil,
            overViewMaximum: Swift.Bool? = nil,
            viewCount: Swift.Int? = nil,
            viewCountLimit: Swift.Int? = nil,
            maxAttachmentsPerCell: Swift.Int? = nil
        ) {
            self.overRowMaximum = overRowMaximum
            self.rowCountLimit = rowCountLimit
            self.rowCount = rowCount
            self.overColumnMaximum = overColumnMaximum
            self.columnCount = columnCount
            self.columnCountLimit = columnCountLimit
            self.overViewMaximum = overViewMaximum
            self.viewCount = viewCount
            self.viewCountLimit = viewCountLimit
            self.maxAttachmentsPerCell = maxAttachmentsPerCell
        }
    }
    /// - Remark: Generated from `#/components/schemas/ListMetadata`.
    public struct ListMetadata: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ListMetadata/icon`.
        public var icon: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/description`.
        public var description: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/schema`.
        public var schema: [Components.Schemas.Schema]?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/views`.
        public var views: [SlackBlockKit.ViewType]?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/integrations`.
        public var integrations: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/iconUrl`.
        public var iconUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/iconTeamId`.
        public var iconTeamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/isTrial`.
        public var isTrial: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/creationSource`.
        public var creationSource: Components.Schemas.CreationSource?
        /// - Remark: Generated from `#/components/schemas/ListMetadata/descriptionBlocks`.
        public var descriptionBlocks: [SlackBlockKit.BlockType]?
        /// Creates a new `ListMetadata`.
        ///
        /// - Parameters:
        ///   - icon:
        ///   - description:
        ///   - schema:
        ///   - views:
        ///   - integrations:
        ///   - iconUrl:
        ///   - iconTeamId:
        ///   - isTrial:
        ///   - creationSource:
        ///   - descriptionBlocks:
        public init(
            icon: Swift.String? = nil,
            description: Swift.String? = nil,
            schema: [Components.Schemas.Schema]? = nil,
            views: [SlackBlockKit.ViewType]? = nil,
            integrations: [Swift.String]? = nil,
            iconUrl: Swift.String? = nil,
            iconTeamId: Swift.String? = nil,
            isTrial: Swift.Bool? = nil,
            creationSource: Components.Schemas.CreationSource? = nil,
            descriptionBlocks: [SlackBlockKit.BlockType]? = nil
        ) {
            self.icon = icon
            self.description = description
            self.schema = schema
            self.views = views
            self.integrations = integrations
            self.iconUrl = iconUrl
            self.iconTeamId = iconTeamId
            self.isTrial = isTrial
            self.creationSource = creationSource
            self.descriptionBlocks = descriptionBlocks
        }
    }
    /// - Remark: Generated from `#/components/schemas/CreationSource`.
    public struct CreationSource: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/CreationSource/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/CreationSource/referenceId`.
        public var referenceId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/CreationSource/workflowFunctionId`.
        public var workflowFunctionId: Swift.String?
        /// Creates a new `CreationSource`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - referenceId:
        ///   - workflowFunctionId:
        public init(
            type: Swift.String? = nil,
            referenceId: Swift.String? = nil,
            workflowFunctionId: Swift.String? = nil
        ) {
            self.type = type
            self.referenceId = referenceId
            self.workflowFunctionId = workflowFunctionId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Schema`.
    public struct Schema: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Schema/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Schema/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Schema/key`.
        public var key: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Schema/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Schema/options`.
        public var options: Components.Schemas.Options?
        /// - Remark: Generated from `#/components/schemas/Schema/isPrimaryColumn`.
        public var isPrimaryColumn: Swift.Bool?
        /// Creates a new `Schema`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - key:
        ///   - type:
        ///   - options:
        ///   - isPrimaryColumn:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            key: Swift.String? = nil,
            type: Swift.String? = nil,
            options: Components.Schemas.Options? = nil,
            isPrimaryColumn: Swift.Bool? = nil
        ) {
            self.id = id
            self.name = name
            self.key = key
            self.type = type
            self.options = options
            self.isPrimaryColumn = isPrimaryColumn
        }
    }
    /// - Remark: Generated from `#/components/schemas/Options`.
    public struct Options: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Options/isScim`.
        public var isScim: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Options/isProtected`.
        public var isProtected: Swift.Bool?
        /// Creates a new `Options`.
        ///
        /// - Parameters:
        ///   - isScim:
        ///   - isProtected:
        public init(
            isScim: Swift.Bool? = nil,
            isProtected: Swift.Bool? = nil
        ) {
            self.isScim = isScim
            self.isProtected = isProtected
        }
    }
    /// - Remark: Generated from `#/components/schemas/View`.
    public struct View: Codable, Hashable, Sendable {
        /// A container of undocumented properties.
        public var additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer
        /// Creates a new `View`.
        ///
        /// - Parameters:
        ///   - additionalProperties: A container of undocumented properties.
        public init(additionalProperties: OpenAPIRuntime.OpenAPIObjectContainer = .init()) {
            self.additionalProperties = additionalProperties
        }
        public init(from decoder: any Decoder) throws {
            additionalProperties = try decoder.decodeAdditionalProperties(knownKeys: [])
        }
        public func encode(to encoder: any Encoder) throws {
            try encoder.encodeAdditionalProperties(additionalProperties)
        }
    }
    /// - Remark: Generated from `#/components/schemas/MediaProgress`.
    public struct MediaProgress: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/MediaProgress/offsetMs`.
        public var offsetMs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/MediaProgress/maxOffsetMs`.
        public var maxOffsetMs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/MediaProgress/durationMs`.
        public var durationMs: Swift.Int?
        /// Creates a new `MediaProgress`.
        ///
        /// - Parameters:
        ///   - offsetMs:
        ///   - maxOffsetMs:
        ///   - durationMs:
        public init(
            offsetMs: Swift.Int? = nil,
            maxOffsetMs: Swift.Int? = nil,
            durationMs: Swift.Int? = nil
        ) {
            self.offsetMs = offsetMs
            self.maxOffsetMs = maxOffsetMs
            self.durationMs = durationMs
        }
    }
    /// - Remark: Generated from `#/components/schemas/Saved`.
    public struct Saved: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Saved/state`.
        public var state: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Saved/isArchived`.
        public var isArchived: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Saved/dateCompleted`.
        public var dateCompleted: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Saved/dateDue`.
        public var dateDue: Swift.Int?
        /// Creates a new `Saved`.
        ///
        /// - Parameters:
        ///   - state:
        ///   - isArchived:
        ///   - dateCompleted:
        ///   - dateDue:
        public init(
            state: Swift.String? = nil,
            isArchived: Swift.Bool? = nil,
            dateCompleted: Swift.Int? = nil,
            dateDue: Swift.Int? = nil
        ) {
            self.state = state
            self.isArchived = isArchived
            self.dateCompleted = dateCompleted
            self.dateDue = dateDue
        }
    }
    /// - Remark: Generated from `#/components/schemas/Shares`.
    public struct Shares: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Shares/public`.
        public var _public: OpenAPIRuntime.OpenAPIObjectContainer?
        /// - Remark: Generated from `#/components/schemas/Shares/private`.
        public var _private: OpenAPIRuntime.OpenAPIObjectContainer?
        /// Creates a new `Shares`.
        ///
        /// - Parameters:
        ///   - _public:
        ///   - _private:
        public init(
            _public: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
            _private: OpenAPIRuntime.OpenAPIObjectContainer? = nil
        ) {
            self._public = _public
            self._private = _private
        }
    }
    /// - Remark: Generated from `#/components/schemas/Transcription`.
    public struct Transcription: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Transcription/status`.
        public var status: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Transcription/locale`.
        public var locale: Swift.String?
        /// Creates a new `Transcription`.
        ///
        /// - Parameters:
        ///   - status:
        ///   - locale:
        public init(
            status: Swift.String? = nil,
            locale: Swift.String? = nil
        ) {
            self.status = status
            self.locale = locale
        }
    }
    /// - Remark: Generated from `#/components/schemas/ActionOptionGroup`.
    public struct ActionOptionGroup: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ActionOptionGroup/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ActionOptionGroup/options`.
        public var options: [Components.Schemas.SelectedOptionElement]?
        /// Creates a new `ActionOptionGroup`.
        ///
        /// - Parameters:
        ///   - text:
        ///   - options:
        public init(
            text: Swift.String? = nil,
            options: [Components.Schemas.SelectedOptionElement]? = nil
        ) {
            self.text = text
            self.options = options
        }
    }
    /// - Remark: Generated from `#/components/schemas/SelectedOptionElement`.
    public struct SelectedOptionElement: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/SelectedOptionElement/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelectedOptionElement/value`.
        public var value: Swift.String?
        /// Creates a new `SelectedOptionElement`.
        ///
        /// - Parameters:
        ///   - text:
        ///   - value:
        public init(
            text: Swift.String? = nil,
            value: Swift.String? = nil
        ) {
            self.text = text
            self.value = value
        }
    }
    /// - Remark: Generated from `#/components/schemas/FileElement`.
    public struct FileElement: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FileElement/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/timestamp`.
        public var timestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/title`.
        public var title: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/subject`.
        public var subject: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/mimetype`.
        public var mimetype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/filetype`.
        public var filetype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/mode`.
        public var mode: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/editable`.
        public var editable: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/editor`.
        public var editor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/subtype`.
        public var subtype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/transcription`.
        public var transcription: Components.Schemas.Transcription?
        /// - Remark: Generated from `#/components/schemas/FileElement/mp4`.
        public var mp4: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/vtt`.
        public var vtt: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/hls`.
        public var hls: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/username`.
        public var username: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/size`.
        public var size: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/deanimate`.
        public var deanimate: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/pjpeg`.
        public var pjpeg: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/permalink`.
        public var permalink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/preview`.
        public var preview: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/lines`.
        public var lines: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/channels`.
        public var channels: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/FileElement/groups`.
        public var groups: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/FileElement/ims`.
        public var ims: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/FileElement/shares`.
        public var shares: Components.Schemas.Shares?
        /// - Remark: Generated from `#/components/schemas/FileElement/to`.
        public var to: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/FileElement/from`.
        public var from: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/FileElement/cc`.
        public var cc: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/FileElement/headers`.
        public var headers: Components.Schemas.Headers?
        /// - Remark: Generated from `#/components/schemas/FileElement/saved`.
        public var saved: Components.Schemas.Saved?
        /// - Remark: Generated from `#/components/schemas/FileElement/reactions`.
        public var reactions: [Components.Schemas.Reaction]?
        /// - Remark: Generated from `#/components/schemas/FileElement/prettyType`.
        public var prettyType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/userTeam`.
        public var userTeam: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/sourceTeam`.
        public var sourceTeam: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/nonOwnerEditable`.
        public var nonOwnerEditable: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/lastEditor`.
        public var lastEditor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/fileAccess`.
        public var fileAccess: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/altTxt`.
        public var altTxt: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/mp4Low`.
        public var mp4Low: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/hlsEmbed`.
        public var hlsEmbed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/durationMs`.
        public var durationMs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumbVideoW`.
        public var thumbVideoW: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumbVideoH`.
        public var thumbVideoH: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/originalAttachmentCount`.
        public var originalAttachmentCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/isExternal`.
        public var isExternal: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/externalType`.
        public var externalType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/externalId`.
        public var externalId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/externalUrl`.
        public var externalUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/urlPrivate`.
        public var urlPrivate: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/urlPrivateDownload`.
        public var urlPrivateDownload: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/appName`.
        public var appName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb64`.
        public var thumb64: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb64Gif`.
        public var thumb64Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb64W`.
        public var thumb64W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb64H`.
        public var thumb64H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb80`.
        public var thumb80: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb80Gif`.
        public var thumb80Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb80W`.
        public var thumb80W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb80H`.
        public var thumb80H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb160`.
        public var thumb160: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb160Gif`.
        public var thumb160Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb160W`.
        public var thumb160W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb160H`.
        public var thumb160H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb360`.
        public var thumb360: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb360Gif`.
        public var thumb360Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb360W`.
        public var thumb360W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb360H`.
        public var thumb360H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb480`.
        public var thumb480: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb480Gif`.
        public var thumb480Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb480W`.
        public var thumb480W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb480H`.
        public var thumb480H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb720`.
        public var thumb720: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb720Gif`.
        public var thumb720Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb720W`.
        public var thumb720W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb720H`.
        public var thumb720H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb800`.
        public var thumb800: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb800Gif`.
        public var thumb800Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb800W`.
        public var thumb800W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb800H`.
        public var thumb800H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb960`.
        public var thumb960: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb960Gif`.
        public var thumb960Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb960W`.
        public var thumb960W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb960H`.
        public var thumb960H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb1024`.
        public var thumb1024: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb1024Gif`.
        public var thumb1024Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb1024W`.
        public var thumb1024W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumb1024H`.
        public var thumb1024H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumbVideo`.
        public var thumbVideo: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumbGif`.
        public var thumbGif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumbPdf`.
        public var thumbPdf: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumbPdfW`.
        public var thumbPdfW: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumbPdfH`.
        public var thumbPdfH: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/thumbTiny`.
        public var thumbTiny: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/convertedPdf`.
        public var convertedPdf: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/imageExifRotation`.
        public var imageExifRotation: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/originalW`.
        public var originalW: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/originalH`.
        public var originalH: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/deanimateGif`.
        public var deanimateGif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/permalinkPublic`.
        public var permalinkPublic: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/editLink`.
        public var editLink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/hasRichPreview`.
        public var hasRichPreview: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/mediaDisplayType`.
        public var mediaDisplayType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/previewIsTruncated`.
        public var previewIsTruncated: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/previewHighlight`.
        public var previewHighlight: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/plainText`.
        public var plainText: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/previewPlainText`.
        public var previewPlainText: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/hasMore`.
        public var hasMore: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/sentToSelf`.
        public var sentToSelf: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/linesMore`.
        public var linesMore: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/isPublic`.
        public var isPublic: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/publicUrlShared`.
        public var publicUrlShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/displayAsBot`.
        public var displayAsBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/hasMoreShares`.
        public var hasMoreShares: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/channelActionsTs`.
        public var channelActionsTs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/channelActionsCount`.
        public var channelActionsCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/simplifiedHtml`.
        public var simplifiedHtml: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/mediaProgress`.
        public var mediaProgress: Components.Schemas.MediaProgress?
        /// - Remark: Generated from `#/components/schemas/FileElement/botId`.
        public var botId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FileElement/initialComment`.
        public var initialComment: Components.Schemas.Comment?
        /// - Remark: Generated from `#/components/schemas/FileElement/numStars`.
        public var numStars: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/FileElement/isStarred`.
        public var isStarred: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FileElement/pinnedTo`.
        public var pinnedTo: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/FileElement/commentsCount`.
        public var commentsCount: Swift.Int?
        /// Creates a new `FileElement`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - created:
        ///   - timestamp:
        ///   - name:
        ///   - title:
        ///   - subject:
        ///   - mimetype:
        ///   - filetype:
        ///   - user:
        ///   - mode:
        ///   - editable:
        ///   - editor:
        ///   - updated:
        ///   - subtype:
        ///   - transcription:
        ///   - mp4:
        ///   - vtt:
        ///   - hls:
        ///   - username:
        ///   - size:
        ///   - deanimate:
        ///   - pjpeg:
        ///   - permalink:
        ///   - preview:
        ///   - lines:
        ///   - channels:
        ///   - groups:
        ///   - ims:
        ///   - shares:
        ///   - to:
        ///   - from:
        ///   - cc:
        ///   - headers:
        ///   - saved:
        ///   - reactions:
        ///   - prettyType:
        ///   - userTeam:
        ///   - sourceTeam:
        ///   - nonOwnerEditable:
        ///   - lastEditor:
        ///   - fileAccess:
        ///   - altTxt:
        ///   - mp4Low:
        ///   - hlsEmbed:
        ///   - durationMs:
        ///   - thumbVideoW:
        ///   - thumbVideoH:
        ///   - originalAttachmentCount:
        ///   - isExternal:
        ///   - externalType:
        ///   - externalId:
        ///   - externalUrl:
        ///   - urlPrivate:
        ///   - urlPrivateDownload:
        ///   - appId:
        ///   - appName:
        ///   - thumb64:
        ///   - thumb64Gif:
        ///   - thumb64W:
        ///   - thumb64H:
        ///   - thumb80:
        ///   - thumb80Gif:
        ///   - thumb80W:
        ///   - thumb80H:
        ///   - thumb160:
        ///   - thumb160Gif:
        ///   - thumb160W:
        ///   - thumb160H:
        ///   - thumb360:
        ///   - thumb360Gif:
        ///   - thumb360W:
        ///   - thumb360H:
        ///   - thumb480:
        ///   - thumb480Gif:
        ///   - thumb480W:
        ///   - thumb480H:
        ///   - thumb720:
        ///   - thumb720Gif:
        ///   - thumb720W:
        ///   - thumb720H:
        ///   - thumb800:
        ///   - thumb800Gif:
        ///   - thumb800W:
        ///   - thumb800H:
        ///   - thumb960:
        ///   - thumb960Gif:
        ///   - thumb960W:
        ///   - thumb960H:
        ///   - thumb1024:
        ///   - thumb1024Gif:
        ///   - thumb1024W:
        ///   - thumb1024H:
        ///   - thumbVideo:
        ///   - thumbGif:
        ///   - thumbPdf:
        ///   - thumbPdfW:
        ///   - thumbPdfH:
        ///   - thumbTiny:
        ///   - convertedPdf:
        ///   - imageExifRotation:
        ///   - originalW:
        ///   - originalH:
        ///   - deanimateGif:
        ///   - permalinkPublic:
        ///   - editLink:
        ///   - hasRichPreview:
        ///   - mediaDisplayType:
        ///   - previewIsTruncated:
        ///   - previewHighlight:
        ///   - plainText:
        ///   - previewPlainText:
        ///   - hasMore:
        ///   - sentToSelf:
        ///   - linesMore:
        ///   - isPublic:
        ///   - publicUrlShared:
        ///   - displayAsBot:
        ///   - hasMoreShares:
        ///   - channelActionsTs:
        ///   - channelActionsCount:
        ///   - simplifiedHtml:
        ///   - mediaProgress:
        ///   - botId:
        ///   - initialComment:
        ///   - numStars:
        ///   - isStarred:
        ///   - pinnedTo:
        ///   - commentsCount:
        public init(
            id: Swift.String? = nil,
            created: Swift.Int? = nil,
            timestamp: Swift.Int? = nil,
            name: Swift.String? = nil,
            title: Swift.String? = nil,
            subject: Swift.String? = nil,
            mimetype: Swift.String? = nil,
            filetype: Swift.String? = nil,
            user: Swift.String? = nil,
            mode: Swift.String? = nil,
            editable: Swift.Bool? = nil,
            editor: Swift.String? = nil,
            updated: Swift.Int? = nil,
            subtype: Swift.String? = nil,
            transcription: Components.Schemas.Transcription? = nil,
            mp4: Swift.String? = nil,
            vtt: Swift.String? = nil,
            hls: Swift.String? = nil,
            username: Swift.String? = nil,
            size: Swift.Int? = nil,
            deanimate: Swift.String? = nil,
            pjpeg: Swift.String? = nil,
            permalink: Swift.String? = nil,
            preview: Swift.String? = nil,
            lines: Swift.Int? = nil,
            channels: [Swift.String]? = nil,
            groups: [Swift.String]? = nil,
            ims: [Swift.String]? = nil,
            shares: Components.Schemas.Shares? = nil,
            to: [Components.Schemas.Cc]? = nil,
            from: [Components.Schemas.Cc]? = nil,
            cc: [Components.Schemas.Cc]? = nil,
            headers: Components.Schemas.Headers? = nil,
            saved: Components.Schemas.Saved? = nil,
            reactions: [Components.Schemas.Reaction]? = nil,
            prettyType: Swift.String? = nil,
            userTeam: Swift.String? = nil,
            sourceTeam: Swift.String? = nil,
            nonOwnerEditable: Swift.Bool? = nil,
            lastEditor: Swift.String? = nil,
            fileAccess: Swift.String? = nil,
            altTxt: Swift.String? = nil,
            mp4Low: Swift.String? = nil,
            hlsEmbed: Swift.String? = nil,
            durationMs: Swift.Int? = nil,
            thumbVideoW: Swift.Int? = nil,
            thumbVideoH: Swift.Int? = nil,
            originalAttachmentCount: Swift.Int? = nil,
            isExternal: Swift.Bool? = nil,
            externalType: Swift.String? = nil,
            externalId: Swift.String? = nil,
            externalUrl: Swift.String? = nil,
            urlPrivate: Swift.String? = nil,
            urlPrivateDownload: Swift.String? = nil,
            appId: Swift.String? = nil,
            appName: Swift.String? = nil,
            thumb64: Swift.String? = nil,
            thumb64Gif: Swift.String? = nil,
            thumb64W: Swift.String? = nil,
            thumb64H: Swift.String? = nil,
            thumb80: Swift.String? = nil,
            thumb80Gif: Swift.String? = nil,
            thumb80W: Swift.String? = nil,
            thumb80H: Swift.String? = nil,
            thumb160: Swift.String? = nil,
            thumb160Gif: Swift.String? = nil,
            thumb160W: Swift.String? = nil,
            thumb160H: Swift.String? = nil,
            thumb360: Swift.String? = nil,
            thumb360Gif: Swift.String? = nil,
            thumb360W: Swift.String? = nil,
            thumb360H: Swift.String? = nil,
            thumb480: Swift.String? = nil,
            thumb480Gif: Swift.String? = nil,
            thumb480W: Swift.String? = nil,
            thumb480H: Swift.String? = nil,
            thumb720: Swift.String? = nil,
            thumb720Gif: Swift.String? = nil,
            thumb720W: Swift.String? = nil,
            thumb720H: Swift.String? = nil,
            thumb800: Swift.String? = nil,
            thumb800Gif: Swift.String? = nil,
            thumb800W: Swift.String? = nil,
            thumb800H: Swift.String? = nil,
            thumb960: Swift.String? = nil,
            thumb960Gif: Swift.String? = nil,
            thumb960W: Swift.String? = nil,
            thumb960H: Swift.String? = nil,
            thumb1024: Swift.String? = nil,
            thumb1024Gif: Swift.String? = nil,
            thumb1024W: Swift.String? = nil,
            thumb1024H: Swift.String? = nil,
            thumbVideo: Swift.String? = nil,
            thumbGif: Swift.String? = nil,
            thumbPdf: Swift.String? = nil,
            thumbPdfW: Swift.String? = nil,
            thumbPdfH: Swift.String? = nil,
            thumbTiny: Swift.String? = nil,
            convertedPdf: Swift.String? = nil,
            imageExifRotation: Swift.Int? = nil,
            originalW: Swift.String? = nil,
            originalH: Swift.String? = nil,
            deanimateGif: Swift.String? = nil,
            permalinkPublic: Swift.String? = nil,
            editLink: Swift.String? = nil,
            hasRichPreview: Swift.Bool? = nil,
            mediaDisplayType: Swift.String? = nil,
            previewIsTruncated: Swift.Bool? = nil,
            previewHighlight: Swift.String? = nil,
            plainText: Swift.String? = nil,
            previewPlainText: Swift.String? = nil,
            hasMore: Swift.Bool? = nil,
            sentToSelf: Swift.Bool? = nil,
            linesMore: Swift.Int? = nil,
            isPublic: Swift.Bool? = nil,
            publicUrlShared: Swift.Bool? = nil,
            displayAsBot: Swift.Bool? = nil,
            hasMoreShares: Swift.Bool? = nil,
            channelActionsTs: Swift.String? = nil,
            channelActionsCount: Swift.Int? = nil,
            simplifiedHtml: Swift.String? = nil,
            mediaProgress: Components.Schemas.MediaProgress? = nil,
            botId: Swift.String? = nil,
            initialComment: Components.Schemas.Comment? = nil,
            numStars: Swift.Int? = nil,
            isStarred: Swift.Bool? = nil,
            pinnedTo: [Swift.String]? = nil,
            commentsCount: Swift.Int? = nil
        ) {
            self.id = id
            self.created = created
            self.timestamp = timestamp
            self.name = name
            self.title = title
            self.subject = subject
            self.mimetype = mimetype
            self.filetype = filetype
            self.user = user
            self.mode = mode
            self.editable = editable
            self.editor = editor
            self.updated = updated
            self.subtype = subtype
            self.transcription = transcription
            self.mp4 = mp4
            self.vtt = vtt
            self.hls = hls
            self.username = username
            self.size = size
            self.deanimate = deanimate
            self.pjpeg = pjpeg
            self.permalink = permalink
            self.preview = preview
            self.lines = lines
            self.channels = channels
            self.groups = groups
            self.ims = ims
            self.shares = shares
            self.to = to
            self.from = from
            self.cc = cc
            self.headers = headers
            self.saved = saved
            self.reactions = reactions
            self.prettyType = prettyType
            self.userTeam = userTeam
            self.sourceTeam = sourceTeam
            self.nonOwnerEditable = nonOwnerEditable
            self.lastEditor = lastEditor
            self.fileAccess = fileAccess
            self.altTxt = altTxt
            self.mp4Low = mp4Low
            self.hlsEmbed = hlsEmbed
            self.durationMs = durationMs
            self.thumbVideoW = thumbVideoW
            self.thumbVideoH = thumbVideoH
            self.originalAttachmentCount = originalAttachmentCount
            self.isExternal = isExternal
            self.externalType = externalType
            self.externalId = externalId
            self.externalUrl = externalUrl
            self.urlPrivate = urlPrivate
            self.urlPrivateDownload = urlPrivateDownload
            self.appId = appId
            self.appName = appName
            self.thumb64 = thumb64
            self.thumb64Gif = thumb64Gif
            self.thumb64W = thumb64W
            self.thumb64H = thumb64H
            self.thumb80 = thumb80
            self.thumb80Gif = thumb80Gif
            self.thumb80W = thumb80W
            self.thumb80H = thumb80H
            self.thumb160 = thumb160
            self.thumb160Gif = thumb160Gif
            self.thumb160W = thumb160W
            self.thumb160H = thumb160H
            self.thumb360 = thumb360
            self.thumb360Gif = thumb360Gif
            self.thumb360W = thumb360W
            self.thumb360H = thumb360H
            self.thumb480 = thumb480
            self.thumb480Gif = thumb480Gif
            self.thumb480W = thumb480W
            self.thumb480H = thumb480H
            self.thumb720 = thumb720
            self.thumb720Gif = thumb720Gif
            self.thumb720W = thumb720W
            self.thumb720H = thumb720H
            self.thumb800 = thumb800
            self.thumb800Gif = thumb800Gif
            self.thumb800W = thumb800W
            self.thumb800H = thumb800H
            self.thumb960 = thumb960
            self.thumb960Gif = thumb960Gif
            self.thumb960W = thumb960W
            self.thumb960H = thumb960H
            self.thumb1024 = thumb1024
            self.thumb1024Gif = thumb1024Gif
            self.thumb1024W = thumb1024W
            self.thumb1024H = thumb1024H
            self.thumbVideo = thumbVideo
            self.thumbGif = thumbGif
            self.thumbPdf = thumbPdf
            self.thumbPdfW = thumbPdfW
            self.thumbPdfH = thumbPdfH
            self.thumbTiny = thumbTiny
            self.convertedPdf = convertedPdf
            self.imageExifRotation = imageExifRotation
            self.originalW = originalW
            self.originalH = originalH
            self.deanimateGif = deanimateGif
            self.permalinkPublic = permalinkPublic
            self.editLink = editLink
            self.hasRichPreview = hasRichPreview
            self.mediaDisplayType = mediaDisplayType
            self.previewIsTruncated = previewIsTruncated
            self.previewHighlight = previewHighlight
            self.plainText = plainText
            self.previewPlainText = previewPlainText
            self.hasMore = hasMore
            self.sentToSelf = sentToSelf
            self.linesMore = linesMore
            self.isPublic = isPublic
            self.publicUrlShared = publicUrlShared
            self.displayAsBot = displayAsBot
            self.hasMoreShares = hasMoreShares
            self.channelActionsTs = channelActionsTs
            self.channelActionsCount = channelActionsCount
            self.simplifiedHtml = simplifiedHtml
            self.mediaProgress = mediaProgress
            self.botId = botId
            self.initialComment = initialComment
            self.numStars = numStars
            self.isStarred = isStarred
            self.pinnedTo = pinnedTo
            self.commentsCount = commentsCount
        }
    }
    /// - Remark: Generated from `#/components/schemas/Comment`.
    public struct Comment: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Comment/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Comment/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Comment/timestamp`.
        public var timestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Comment/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Comment/comment`.
        public var comment: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Comment/channel`.
        public var channel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Comment/isIntro`.
        public var isIntro: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Comment/numStars`.
        public var numStars: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Comment/isStarred`.
        public var isStarred: Swift.Bool?
        /// Creates a new `Comment`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - created:
        ///   - timestamp:
        ///   - user:
        ///   - comment:
        ///   - channel:
        ///   - isIntro:
        ///   - numStars:
        ///   - isStarred:
        public init(
            id: Swift.String? = nil,
            created: Swift.Int? = nil,
            timestamp: Swift.Int? = nil,
            user: Swift.String? = nil,
            comment: Swift.String? = nil,
            channel: Swift.String? = nil,
            isIntro: Swift.Bool? = nil,
            numStars: Swift.Int? = nil,
            isStarred: Swift.Bool? = nil
        ) {
            self.id = id
            self.created = created
            self.timestamp = timestamp
            self.user = user
            self.comment = comment
            self.channel = channel
            self.isIntro = isIntro
            self.numStars = numStars
            self.isStarred = isStarred
        }
    }
    /// - Remark: Generated from `#/components/schemas/Preview`.
    public struct Preview: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Preview/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Preview/title`.
        public var title: Components.Schemas.Description?
        /// - Remark: Generated from `#/components/schemas/Preview/subtitle`.
        public var subtitle: Components.Schemas.Description?
        /// - Remark: Generated from `#/components/schemas/Preview/canRemove`.
        public var canRemove: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Preview/iconUrl`.
        public var iconUrl: Swift.String?
        /// Creates a new `Preview`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - title:
        ///   - subtitle:
        ///   - canRemove:
        ///   - iconUrl:
        public init(
            type: Swift.String? = nil,
            title: Components.Schemas.Description? = nil,
            subtitle: Components.Schemas.Description? = nil,
            canRemove: Swift.Bool? = nil,
            iconUrl: Swift.String? = nil
        ) {
            self.type = type
            self.title = title
            self.subtitle = subtitle
            self.canRemove = canRemove
            self.iconUrl = iconUrl
        }
    }
    /// - Remark: Generated from `#/components/schemas/ScheduledMessage`.
    public struct ScheduledMessage: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ScheduledMessage/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ScheduledMessage/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ScheduledMessage/channelId`.
        public var channelId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ScheduledMessage/postAt`.
        public var postAt: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ScheduledMessage/dateCreated`.
        public var dateCreated: Swift.Int?
        /// Creates a new `ScheduledMessage`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - text:
        ///   - channelId:
        ///   - postAt:
        ///   - dateCreated:
        public init(
            id: Swift.String? = nil,
            text: Swift.String? = nil,
            channelId: Swift.String? = nil,
            postAt: Swift.Int? = nil,
            dateCreated: Swift.Int? = nil
        ) {
            self.id = id
            self.text = text
            self.channelId = channelId
            self.postAt = postAt
            self.dateCreated = dateCreated
        }
    }
    /// - Remark: Generated from `#/components/schemas/Canvas`.
    public struct Canvas: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Canvas/fileId`.
        public var fileId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Canvas/isEmpty`.
        public var isEmpty: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Canvas/quipThreadId`.
        public var quipThreadId: Swift.String?
        /// Creates a new `Canvas`.
        ///
        /// - Parameters:
        ///   - fileId:
        ///   - isEmpty:
        ///   - quipThreadId:
        public init(
            fileId: Swift.String? = nil,
            isEmpty: Swift.Bool? = nil,
            quipThreadId: Swift.String? = nil
        ) {
            self.fileId = fileId
            self.isEmpty = isEmpty
            self.quipThreadId = quipThreadId
        }
    }
    /// - Remark: Generated from `#/components/schemas/InviteElement`.
    public struct InviteElement: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/InviteElement/direction`.
        public var direction: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteElement/status`.
        public var status: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteElement/invite`.
        public var invite: Components.Schemas.InviteInvite?
        /// - Remark: Generated from `#/components/schemas/InviteElement/channel`.
        public var channel: Components.Schemas.Channel?
        /// - Remark: Generated from `#/components/schemas/InviteElement/acceptances`.
        public var acceptances: [Components.Schemas.Acceptance]?
        /// - Remark: Generated from `#/components/schemas/InviteElement/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteElement/sig`.
        public var sig: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteElement/link`.
        public var link: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteElement/dateLastUpdated`.
        public var dateLastUpdated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InviteElement/inviteType`.
        public var inviteType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteElement/dateCreated`.
        public var dateCreated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InviteElement/dateInvalid`.
        public var dateInvalid: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InviteElement/invitingTeam`.
        public var invitingTeam: Components.Schemas.IngTeam?
        /// - Remark: Generated from `#/components/schemas/InviteElement/invitingUser`.
        public var invitingUser: Components.Schemas.TingUser?
        /// - Remark: Generated from `#/components/schemas/InviteElement/invitePayload`.
        public var invitePayload: Components.Schemas.InvitePayload?
        /// - Remark: Generated from `#/components/schemas/InviteElement/recipientUserId`.
        public var recipientUserId: Swift.String?
        /// Creates a new `InviteElement`.
        ///
        /// - Parameters:
        ///   - direction:
        ///   - status:
        ///   - invite:
        ///   - channel:
        ///   - acceptances:
        ///   - id:
        ///   - sig:
        ///   - link:
        ///   - dateLastUpdated:
        ///   - inviteType:
        ///   - dateCreated:
        ///   - dateInvalid:
        ///   - invitingTeam:
        ///   - invitingUser:
        ///   - invitePayload:
        ///   - recipientUserId:
        public init(
            direction: Swift.String? = nil,
            status: Swift.String? = nil,
            invite: Components.Schemas.InviteInvite? = nil,
            channel: Components.Schemas.Channel? = nil,
            acceptances: [Components.Schemas.Acceptance]? = nil,
            id: Swift.String? = nil,
            sig: Swift.String? = nil,
            link: Swift.String? = nil,
            dateLastUpdated: Swift.Int? = nil,
            inviteType: Swift.String? = nil,
            dateCreated: Swift.Int? = nil,
            dateInvalid: Swift.Int? = nil,
            invitingTeam: Components.Schemas.IngTeam? = nil,
            invitingUser: Components.Schemas.TingUser? = nil,
            invitePayload: Components.Schemas.InvitePayload? = nil,
            recipientUserId: Swift.String? = nil
        ) {
            self.direction = direction
            self.status = status
            self.invite = invite
            self.channel = channel
            self.acceptances = acceptances
            self.id = id
            self.sig = sig
            self.link = link
            self.dateLastUpdated = dateLastUpdated
            self.inviteType = inviteType
            self.dateCreated = dateCreated
            self.dateInvalid = dateInvalid
            self.invitingTeam = invitingTeam
            self.invitingUser = invitingUser
            self.invitePayload = invitePayload
            self.recipientUserId = recipientUserId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Acceptance`.
    public struct Acceptance: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Acceptance/reviews`.
        public var reviews: [Components.Schemas.Review]?
        /// - Remark: Generated from `#/components/schemas/Acceptance/approvalStatus`.
        public var approvalStatus: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Acceptance/dateAccepted`.
        public var dateAccepted: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Acceptance/dateInvalid`.
        public var dateInvalid: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Acceptance/dateLastUpdated`.
        public var dateLastUpdated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Acceptance/acceptingTeam`.
        public var acceptingTeam: Components.Schemas.IngTeam?
        /// - Remark: Generated from `#/components/schemas/Acceptance/acceptingUser`.
        public var acceptingUser: Components.Schemas.TingUser?
        /// Creates a new `Acceptance`.
        ///
        /// - Parameters:
        ///   - reviews:
        ///   - approvalStatus:
        ///   - dateAccepted:
        ///   - dateInvalid:
        ///   - dateLastUpdated:
        ///   - acceptingTeam:
        ///   - acceptingUser:
        public init(
            reviews: [Components.Schemas.Review]? = nil,
            approvalStatus: Swift.String? = nil,
            dateAccepted: Swift.Int? = nil,
            dateInvalid: Swift.Int? = nil,
            dateLastUpdated: Swift.Int? = nil,
            acceptingTeam: Components.Schemas.IngTeam? = nil,
            acceptingUser: Components.Schemas.TingUser? = nil
        ) {
            self.reviews = reviews
            self.approvalStatus = approvalStatus
            self.dateAccepted = dateAccepted
            self.dateInvalid = dateInvalid
            self.dateLastUpdated = dateLastUpdated
            self.acceptingTeam = acceptingTeam
            self.acceptingUser = acceptingUser
        }
    }
    /// - Remark: Generated from `#/components/schemas/IngTeam`.
    public struct IngTeam: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/IngTeam/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/IngTeam/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/IngTeam/icon`.
        public var icon: Components.Schemas.Icon?
        /// - Remark: Generated from `#/components/schemas/IngTeam/domain`.
        public var domain: Swift.String?
        /// - Remark: Generated from `#/components/schemas/IngTeam/isVerified`.
        public var isVerified: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/IngTeam/dateCreated`.
        public var dateCreated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/IngTeam/avatarBaseUrl`.
        public var avatarBaseUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/IngTeam/requiresSponsorship`.
        public var requiresSponsorship: Swift.Bool?
        /// Creates a new `IngTeam`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - icon:
        ///   - domain:
        ///   - isVerified:
        ///   - dateCreated:
        ///   - avatarBaseUrl:
        ///   - requiresSponsorship:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            icon: Components.Schemas.Icon? = nil,
            domain: Swift.String? = nil,
            isVerified: Swift.Bool? = nil,
            dateCreated: Swift.Int? = nil,
            avatarBaseUrl: Swift.String? = nil,
            requiresSponsorship: Swift.Bool? = nil
        ) {
            self.id = id
            self.name = name
            self.icon = icon
            self.domain = domain
            self.isVerified = isVerified
            self.dateCreated = dateCreated
            self.avatarBaseUrl = avatarBaseUrl
            self.requiresSponsorship = requiresSponsorship
        }
    }
    /// - Remark: Generated from `#/components/schemas/TingUser`.
    public struct TingUser: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/TingUser/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/TingUser/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/TingUser/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/TingUser/profile`.
        public var profile: Components.Schemas.Profile?
        /// - Remark: Generated from `#/components/schemas/TingUser/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/TingUser/whoCanShareContactCard`.
        public var whoCanShareContactCard: Swift.String?
        /// Creates a new `TingUser`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - updated:
        ///   - profile:
        ///   - teamId:
        ///   - whoCanShareContactCard:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            updated: Swift.Int? = nil,
            profile: Components.Schemas.Profile? = nil,
            teamId: Swift.String? = nil,
            whoCanShareContactCard: Swift.String? = nil
        ) {
            self.id = id
            self.name = name
            self.updated = updated
            self.profile = profile
            self.teamId = teamId
            self.whoCanShareContactCard = whoCanShareContactCard
        }
    }
    /// - Remark: Generated from `#/components/schemas/Profile`.
    public struct Profile: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Profile/image24`.
        public var image24: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Profile/image32`.
        public var image32: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Profile/image48`.
        public var image48: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Profile/image72`.
        public var image72: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Profile/image192`.
        public var image192: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Profile/image512`.
        public var image512: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Profile/image1024`.
        public var image1024: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Profile/imageOriginal`.
        public var imageOriginal: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Profile/avatarHash`.
        public var avatarHash: Swift.String?
        /// Creates a new `Profile`.
        ///
        /// - Parameters:
        ///   - image24:
        ///   - image32:
        ///   - image48:
        ///   - image72:
        ///   - image192:
        ///   - image512:
        ///   - image1024:
        ///   - imageOriginal:
        ///   - avatarHash:
        public init(
            image24: Swift.String? = nil,
            image32: Swift.String? = nil,
            image48: Swift.String? = nil,
            image72: Swift.String? = nil,
            image192: Swift.String? = nil,
            image512: Swift.String? = nil,
            image1024: Swift.String? = nil,
            imageOriginal: Swift.String? = nil,
            avatarHash: Swift.String? = nil
        ) {
            self.image24 = image24
            self.image32 = image32
            self.image48 = image48
            self.image72 = image72
            self.image192 = image192
            self.image512 = image512
            self.image1024 = image1024
            self.imageOriginal = imageOriginal
            self.avatarHash = avatarHash
        }
    }
    /// - Remark: Generated from `#/components/schemas/Review`.
    public struct Review: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Review/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Review/dateReview`.
        public var dateReview: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Review/reviewingTeam`.
        public var reviewingTeam: Components.Schemas.IngTeam?
        /// Creates a new `Review`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - dateReview:
        ///   - reviewingTeam:
        public init(
            type: Swift.String? = nil,
            dateReview: Swift.Int? = nil,
            reviewingTeam: Components.Schemas.IngTeam? = nil
        ) {
            self.type = type
            self.dateReview = dateReview
            self.reviewingTeam = reviewingTeam
        }
    }
    /// - Remark: Generated from `#/components/schemas/InviteInvite`.
    public struct InviteInvite: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/InviteInvite/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteInvite/link`.
        public var link: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteInvite/sig`.
        public var sig: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteInvite/dateCreated`.
        public var dateCreated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InviteInvite/dateInvalid`.
        public var dateInvalid: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InviteInvite/invitingTeam`.
        public var invitingTeam: Components.Schemas.IngTeam?
        /// - Remark: Generated from `#/components/schemas/InviteInvite/invitingUser`.
        public var invitingUser: Components.Schemas.TingUser?
        /// - Remark: Generated from `#/components/schemas/InviteInvite/recipientUserId`.
        public var recipientUserId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InviteInvite/recipientEmail`.
        public var recipientEmail: Swift.String?
        /// Creates a new `InviteInvite`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - link:
        ///   - sig:
        ///   - dateCreated:
        ///   - dateInvalid:
        ///   - invitingTeam:
        ///   - invitingUser:
        ///   - recipientUserId:
        ///   - recipientEmail:
        public init(
            id: Swift.String? = nil,
            link: Swift.String? = nil,
            sig: Swift.String? = nil,
            dateCreated: Swift.Int? = nil,
            dateInvalid: Swift.Int? = nil,
            invitingTeam: Components.Schemas.IngTeam? = nil,
            invitingUser: Components.Schemas.TingUser? = nil,
            recipientUserId: Swift.String? = nil,
            recipientEmail: Swift.String? = nil
        ) {
            self.id = id
            self.link = link
            self.sig = sig
            self.dateCreated = dateCreated
            self.dateInvalid = dateInvalid
            self.invitingTeam = invitingTeam
            self.invitingUser = invitingUser
            self.recipientUserId = recipientUserId
            self.recipientEmail = recipientEmail
        }
    }
    /// - Remark: Generated from `#/components/schemas/InvitePayload`.
    public struct InvitePayload: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/InvitePayload/channel`.
        public var channel: Components.Schemas.Channel?
        /// - Remark: Generated from `#/components/schemas/InvitePayload/inviteType`.
        public var inviteType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InvitePayload/isSponsored`.
        public var isSponsored: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/InvitePayload/isExternalLimited`.
        public var isExternalLimited: Swift.Bool?
        /// Creates a new `InvitePayload`.
        ///
        /// - Parameters:
        ///   - channel:
        ///   - inviteType:
        ///   - isSponsored:
        ///   - isExternalLimited:
        public init(
            channel: Components.Schemas.Channel? = nil,
            inviteType: Swift.String? = nil,
            isSponsored: Swift.Bool? = nil,
            isExternalLimited: Swift.Bool? = nil
        ) {
            self.channel = channel
            self.inviteType = inviteType
            self.isSponsored = isSponsored
            self.isExternalLimited = isExternalLimited
        }
    }
    /// - Remark: Generated from `#/components/schemas/InvitingUser`.
    public struct InvitingUser: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/InvitingUser/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InvitingUser/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InvitingUser/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/InvitingUser/profile`.
        public var profile: Components.Schemas.Profile?
        /// - Remark: Generated from `#/components/schemas/InvitingUser/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/InvitingUser/whoCanShareContactCard`.
        public var whoCanShareContactCard: Swift.String?
        /// Creates a new `InvitingUser`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - updated:
        ///   - profile:
        ///   - teamId:
        ///   - whoCanShareContactCard:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            updated: Swift.Int? = nil,
            profile: Components.Schemas.Profile? = nil,
            teamId: Swift.String? = nil,
            whoCanShareContactCard: Swift.String? = nil
        ) {
            self.id = id
            self.name = name
            self.updated = updated
            self.profile = profile
            self.teamId = teamId
            self.whoCanShareContactCard = whoCanShareContactCard
        }
    }
    /// - Remark: Generated from `#/components/schemas/TargetUser`.
    public struct TargetUser: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/TargetUser/recipientEmail`.
        public var recipientEmail: Swift.String?
        /// Creates a new `TargetUser`.
        ///
        /// - Parameters:
        ///   - recipientEmail:
        public init(recipientEmail: Swift.String? = nil) {
            self.recipientEmail = recipientEmail
        }
    }
    /// - Remark: Generated from `#/components/schemas/Category`.
    public struct Category: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Category/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Category/emojiNames`.
        public var emojiNames: [Swift.String]?
        /// Creates a new `Category`.
        ///
        /// - Parameters:
        ///   - name:
        ///   - emojiNames:
        public init(
            name: Swift.String? = nil,
            emojiNames: [Swift.String]? = nil
        ) {
            self.name = name
            self.emojiNames = emojiNames
        }
    }
    /// - Remark: Generated from `#/components/schemas/Paging`.
    public struct Paging: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Paging/count`.
        public var count: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Paging/total`.
        public var total: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Paging/page`.
        public var page: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Paging/pages`.
        public var pages: Swift.Int?
        /// Creates a new `Paging`.
        ///
        /// - Parameters:
        ///   - count:
        ///   - total:
        ///   - page:
        ///   - pages:
        public init(
            count: Swift.Int? = nil,
            total: Swift.Int? = nil,
            page: Swift.Int? = nil,
            pages: Swift.Int? = nil
        ) {
            self.count = count
            self.total = total
            self.page = page
            self.pages = pages
        }
    }
    /// - Remark: Generated from `#/components/schemas/Description`.
    public struct Description: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Description/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Description/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Description/emoji`.
        public var emoji: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Description/verbatim`.
        public var verbatim: Swift.Bool?
        /// Creates a new `Description`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - text:
        ///   - emoji:
        ///   - verbatim:
        public init(
            type: Swift.String? = nil,
            text: Swift.String? = nil,
            emoji: Swift.Bool? = nil,
            verbatim: Swift.Bool? = nil
        ) {
            self.type = type
            self.text = text
            self.emoji = emoji
            self.verbatim = verbatim
        }
    }
    /// - Remark: Generated from `#/components/schemas/IncomingWebhook`.
    public struct IncomingWebhook: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/IncomingWebhook/url`.
        public var url: Swift.String?
        /// - Remark: Generated from `#/components/schemas/IncomingWebhook/channel`.
        public var channel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/IncomingWebhook/channelId`.
        public var channelId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/IncomingWebhook/configurationUrl`.
        public var configurationUrl: Swift.String?
        /// Creates a new `IncomingWebhook`.
        ///
        /// - Parameters:
        ///   - url:
        ///   - channel:
        ///   - channelId:
        ///   - configurationUrl:
        public init(
            url: Swift.String? = nil,
            channel: Swift.String? = nil,
            channelId: Swift.String? = nil,
            configurationUrl: Swift.String? = nil
        ) {
            self.url = url
            self.channel = channel
            self.channelId = channelId
            self.configurationUrl = configurationUrl
        }
    }
    /// - Remark: Generated from `#/components/schemas/AuthedUser`.
    public struct AuthedUser: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/AuthedUser/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AuthedUser/scope`.
        public var scope: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AuthedUser/tokenType`.
        public var tokenType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AuthedUser/accessToken`.
        public var accessToken: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AuthedUser/refreshToken`.
        public var refreshToken: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AuthedUser/expiresIn`.
        public var expiresIn: Swift.Int?
        /// Creates a new `AuthedUser`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - scope:
        ///   - tokenType:
        ///   - accessToken:
        ///   - refreshToken:
        ///   - expiresIn:
        public init(
            id: Swift.String? = nil,
            scope: Swift.String? = nil,
            tokenType: Swift.String? = nil,
            accessToken: Swift.String? = nil,
            refreshToken: Swift.String? = nil,
            expiresIn: Swift.Int? = nil
        ) {
            self.id = id
            self.scope = scope
            self.tokenType = tokenType
            self.accessToken = accessToken
            self.refreshToken = refreshToken
            self.expiresIn = expiresIn
        }
    }
    /// - Remark: Generated from `#/components/schemas/Enterprise`.
    public struct Enterprise: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Enterprise/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Enterprise/name`.
        public var name: Swift.String?
        /// Creates a new `Enterprise`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil
        ) {
            self.id = id
            self.name = name
        }
    }
    /// - Remark: Generated from `#/components/schemas/Item`.
    public struct Item: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Item/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Item/channel`.
        public var channel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Item/message`.
        public var message: Components.Schemas.Message?
        /// - Remark: Generated from `#/components/schemas/Item/file`.
        public var file: Components.Schemas.ItemFile?
        /// - Remark: Generated from `#/components/schemas/Item/comment`.
        public var comment: Components.Schemas.Comment?
        /// - Remark: Generated from `#/components/schemas/Item/dateCreate`.
        public var dateCreate: Swift.Int?
        /// Creates a new `Item`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - channel:
        ///   - message:
        ///   - file:
        ///   - comment:
        ///   - dateCreate:
        public init(
            type: Swift.String? = nil,
            channel: Swift.String? = nil,
            message: Components.Schemas.Message? = nil,
            file: Components.Schemas.ItemFile? = nil,
            comment: Components.Schemas.Comment? = nil,
            dateCreate: Swift.Int? = nil
        ) {
            self.type = type
            self.channel = channel
            self.message = message
            self.file = file
            self.comment = comment
            self.dateCreate = dateCreate
        }
    }
    /// - Remark: Generated from `#/components/schemas/Reminder`.
    public struct Reminder: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Reminder/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Reminder/creator`.
        public var creator: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Reminder/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Reminder/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Reminder/recurring`.
        public var recurring: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Reminder/time`.
        public var time: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Reminder/channel`.
        public var channel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Reminder/recurrence`.
        public var recurrence: Components.Schemas.Recurrence?
        /// - Remark: Generated from `#/components/schemas/Reminder/completeTs`.
        public var completeTs: Swift.Int?
        /// Creates a new `Reminder`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - creator:
        ///   - text:
        ///   - user:
        ///   - recurring:
        ///   - time:
        ///   - channel:
        ///   - recurrence:
        ///   - completeTs:
        public init(
            id: Swift.String? = nil,
            creator: Swift.String? = nil,
            text: Swift.String? = nil,
            user: Swift.String? = nil,
            recurring: Swift.Bool? = nil,
            time: Swift.Int? = nil,
            channel: Swift.String? = nil,
            recurrence: Components.Schemas.Recurrence? = nil,
            completeTs: Swift.Int? = nil
        ) {
            self.id = id
            self.creator = creator
            self.text = text
            self.user = user
            self.recurring = recurring
            self.time = time
            self.channel = channel
            self.recurrence = recurrence
            self.completeTs = completeTs
        }
    }
    /// - Remark: Generated from `#/components/schemas/Recurrence`.
    public struct Recurrence: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Recurrence/frequency`.
        public var frequency: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Recurrence/weekdays`.
        public var weekdays: [Swift.String]?
        /// Creates a new `Recurrence`.
        ///
        /// - Parameters:
        ///   - frequency:
        ///   - weekdays:
        public init(
            frequency: Swift.String? = nil,
            weekdays: [Swift.String]? = nil
        ) {
            self.frequency = frequency
            self.weekdays = weekdays
        }
    }
    /// - Remark: Generated from `#/components/schemas/Self`.
    public struct _Self: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Self/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Self/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Self/prefs`.
        public var prefs: Components.Schemas.SelfPrefs?
        /// - Remark: Generated from `#/components/schemas/Self/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Self/firstLogin`.
        public var firstLogin: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Self/manualPresence`.
        public var manualPresence: Swift.String?
        /// Creates a new `_Self`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - prefs:
        ///   - created:
        ///   - firstLogin:
        ///   - manualPresence:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            prefs: Components.Schemas.SelfPrefs? = nil,
            created: Swift.Int? = nil,
            firstLogin: Swift.Int? = nil,
            manualPresence: Swift.String? = nil
        ) {
            self.id = id
            self.name = name
            self.prefs = prefs
            self.created = created
            self.firstLogin = firstLogin
            self.manualPresence = manualPresence
        }
    }
    /// - Remark: Generated from `#/components/schemas/BotIcons`.
    public struct BotIcons: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/BotIcons/image36`.
        public var image36: Swift.String?
        /// - Remark: Generated from `#/components/schemas/BotIcons/image48`.
        public var image48: Swift.String?
        /// - Remark: Generated from `#/components/schemas/BotIcons/image72`.
        public var image72: Swift.String?
        /// Creates a new `BotIcons`.
        ///
        /// - Parameters:
        ///   - image36:
        ///   - image48:
        ///   - image72:
        public init(
            image36: Swift.String? = nil,
            image48: Swift.String? = nil,
            image72: Swift.String? = nil
        ) {
            self.image36 = image36
            self.image48 = image48
            self.image72 = image72
        }
    }
    /// - Remark: Generated from `#/components/schemas/SelfPrefs`.
    public struct SelfPrefs: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/time24`.
        public var time24: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/jumbomoji`.
        public var jumbomoji: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/locale`.
        public var locale: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/purchaser`.
        public var purchaser: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/tz`.
        public var tz: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/frecency`.
        public var frecency: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/underlineLinks`.
        public var underlineLinks: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/userColors`.
        public var userColors: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/colorNamesInList`.
        public var colorNamesInList: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emailAlerts`.
        public var emailAlerts: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emailAlertsSleepUntil`.
        public var emailAlertsSleepUntil: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emailTips`.
        public var emailTips: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emailWeekly`.
        public var emailWeekly: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emailOffers`.
        public var emailOffers: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emailResearch`.
        public var emailResearch: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emailDeveloper`.
        public var emailDeveloper: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/welcomeMessageHidden`.
        public var welcomeMessageHidden: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchSort`.
        public var searchSort: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchFileSort`.
        public var searchFileSort: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchChannelSort`.
        public var searchChannelSort: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchPeopleSort`.
        public var searchPeopleSort: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/expandInlineImgs`.
        public var expandInlineImgs: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/expandInternalInlineImgs`.
        public var expandInternalInlineImgs: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/expandSnippets`.
        public var expandSnippets: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/postsFormattingGuide`.
        public var postsFormattingGuide: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenWelcome2`.
        public var seenWelcome2: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenSsbPrompt`.
        public var seenSsbPrompt: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/spacesNewXpBannerDismissed`.
        public var spacesNewXpBannerDismissed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchOnlyMyChannels`.
        public var searchOnlyMyChannels: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchOnlyCurrentTeam`.
        public var searchOnlyCurrentTeam: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchHideMyChannels`.
        public var searchHideMyChannels: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchOnlyShowOnline`.
        public var searchOnlyShowOnline: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchHideDeactivatedUsers`.
        public var searchHideDeactivatedUsers: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emojiMode`.
        public var emojiMode: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emojiUse`.
        public var emojiUse: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emojiUseOrg`.
        public var emojiUseOrg: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasInvited`.
        public var hasInvited: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasUploaded`.
        public var hasUploaded: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasCreatedChannel`.
        public var hasCreatedChannel: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasCreatedChannelSection`.
        public var hasCreatedChannelSection: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasSearched`.
        public var hasSearched: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchExcludeChannels`.
        public var searchExcludeChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/messagesTheme`.
        public var messagesTheme: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/webappSpellcheck`.
        public var webappSpellcheck: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noJoinedOverlays`.
        public var noJoinedOverlays: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noCreatedOverlays`.
        public var noCreatedOverlays: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dropboxEnabled`.
        public var dropboxEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenDomainInviteReminder`.
        public var seenDomainInviteReminder: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenMemberInviteReminder`.
        public var seenMemberInviteReminder: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/muteSounds`.
        public var muteSounds: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/arrowHistory`.
        public var arrowHistory: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/tabUiReturnSelects`.
        public var tabUiReturnSelects: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/obeyInlineImgLimit`.
        public var obeyInlineImgLimit: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/requireAt`.
        public var requireAt: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/ssbSpaceWindow`.
        public var ssbSpaceWindow: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/macSsbBounce`.
        public var macSsbBounce: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/macSsbBullet`.
        public var macSsbBullet: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/expandNonMediaAttachments`.
        public var expandNonMediaAttachments: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showTyping`.
        public var showTyping: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pagekeysHandled`.
        public var pagekeysHandled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/lastSnippetType`.
        public var lastSnippetType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/displayRealNamesOverride`.
        public var displayRealNamesOverride: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/displayDisplayNames`.
        public var displayDisplayNames: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enterIsSpecialInTbt`.
        public var enterIsSpecialInTbt: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/msgInputSendBtn`.
        public var msgInputSendBtn: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/msgInputSendBtnAutoSet`.
        public var msgInputSendBtnAutoSet: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/msgInputStickyComposer`.
        public var msgInputStickyComposer: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/composerNux`.
        public var composerNux: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/graphicEmoticons`.
        public var graphicEmoticons: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/convertEmoticons`.
        public var convertEmoticons: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/ssEmojis`.
        public var ssEmojis: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingStart`.
        public var seenOnboardingStart: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/onboardingCancelled`.
        public var onboardingCancelled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingSlackbotConversation`.
        public var seenOnboardingSlackbotConversation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingChannels`.
        public var seenOnboardingChannels: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingDirectMessages`.
        public var seenOnboardingDirectMessages: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingInvites`.
        public var seenOnboardingInvites: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingSearch`.
        public var seenOnboardingSearch: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingRecentMentions`.
        public var seenOnboardingRecentMentions: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingStarredItems`.
        public var seenOnboardingStarredItems: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingPrivateGroups`.
        public var seenOnboardingPrivateGroups: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingBanner`.
        public var seenOnboardingBanner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/onboardingSlackbotConversationStep`.
        public var onboardingSlackbotConversationStep: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/setTzAutomatically`.
        public var setTzAutomatically: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/suppressLinkWarning`.
        public var suppressLinkWarning: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/suppressExternalInvitesFromComposeWarning`.
        public var suppressExternalInvitesFromComposeWarning: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenEmojiPackCta`.
        public var seenEmojiPackCta: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenEmojiPackDialog`.
        public var seenEmojiPackDialog: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenScheduleSendCoachmark`.
        public var seenScheduleSendCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emojiPacksMostRecentAvailableTime`.
        public var emojiPacksMostRecentAvailableTime: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emojiPacksClickedPickerCta`.
        public var emojiPacksClickedPickerCta: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emojiPacksClickedPickerPostInstallCta`.
        public var emojiPacksClickedPickerPostInstallCta: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emojiPacksClickedCollectionCta`.
        public var emojiPacksClickedCollectionCta: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEnabled`.
        public var dndEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndStartHour`.
        public var dndStartHour: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEndHour`.
        public var dndEndHour: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndBeforeMonday`.
        public var dndBeforeMonday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndAfterMonday`.
        public var dndAfterMonday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEnabledMonday`.
        public var dndEnabledMonday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndBeforeTuesday`.
        public var dndBeforeTuesday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndAfterTuesday`.
        public var dndAfterTuesday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEnabledTuesday`.
        public var dndEnabledTuesday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndBeforeWednesday`.
        public var dndBeforeWednesday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndAfterWednesday`.
        public var dndAfterWednesday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEnabledWednesday`.
        public var dndEnabledWednesday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndBeforeThursday`.
        public var dndBeforeThursday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndAfterThursday`.
        public var dndAfterThursday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEnabledThursday`.
        public var dndEnabledThursday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndBeforeFriday`.
        public var dndBeforeFriday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndAfterFriday`.
        public var dndAfterFriday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEnabledFriday`.
        public var dndEnabledFriday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndBeforeSaturday`.
        public var dndBeforeSaturday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndAfterSaturday`.
        public var dndAfterSaturday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEnabledSaturday`.
        public var dndEnabledSaturday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndBeforeSunday`.
        public var dndBeforeSunday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndAfterSunday`.
        public var dndAfterSunday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndEnabledSunday`.
        public var dndEnabledSunday: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndDays`.
        public var dndDays: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndWeekdaysOffAllday`.
        public var dndWeekdaysOffAllday: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/reminderNotificationTime`.
        public var reminderNotificationTime: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndCustomNewBadgeSeen`.
        public var dndCustomNewBadgeSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dndNotificationScheduleNewBadgeSeen`.
        public var dndNotificationScheduleNewBadgeSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/notificationCenterFilters`.
        public var notificationCenterFilters: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/callsSurveyLastSeen`.
        public var callsSurveyLastSeen: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddleSurveyLastSeen`.
        public var huddleSurveyLastSeen: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/sidebarBehavior`.
        public var sidebarBehavior: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/channelSort`.
        public var channelSort: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/separatePrivateChannels`.
        public var separatePrivateChannels: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/separateSharedChannels`.
        public var separateSharedChannels: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/sidebarTheme`.
        public var sidebarTheme: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/sidebarThemeCustomValues`.
        public var sidebarThemeCustomValues: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noInvitesWidgetInSidebar`.
        public var noInvitesWidgetInSidebar: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noOmniboxInChannels`.
        public var noOmniboxInChannels: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/kKeyOmniboxAutoHideCount`.
        public var kKeyOmniboxAutoHideCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showSidebarQuickswitcherButton`.
        public var showSidebarQuickswitcherButton: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/entOrgWideChannelsSidebar`.
        public var entOrgWideChannelsSidebar: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/markMsgsReadImmediately`.
        public var markMsgsReadImmediately: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/startScrollAtOldest`.
        public var startScrollAtOldest: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/snippetEditorWrapLongLines`.
        public var snippetEditorWrapLongLines: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/lsDisabled`.
        public var lsDisabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/fKeySearch`.
        public var fKeySearch: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/kKeyOmnibox`.
        public var kKeyOmnibox: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/promptedForEmailDisabling`.
        public var promptedForEmailDisabling: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noMacelectronBanner`.
        public var noMacelectronBanner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noMacssb1Banner`.
        public var noMacssb1Banner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noMacssb2Banner`.
        public var noMacssb2Banner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noWinssb1Banner`.
        public var noWinssb1Banner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hideUserGroupInfoPane`.
        public var hideUserGroupInfoPane: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mentionsExcludeAtUserGroups`.
        public var mentionsExcludeAtUserGroups: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mentionsExcludeReactions`.
        public var mentionsExcludeReactions: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/privacyPolicySeen`.
        public var privacyPolicySeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enterpriseMigrationSeen`.
        public var enterpriseMigrationSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/searchExcludeBots`.
        public var searchExcludeBots: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/loadLato2`.
        public var loadLato2: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/fullerTimestamps`.
        public var fullerTimestamps: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/lastSeenAtChannelWarning`.
        public var lastSeenAtChannelWarning: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/emojiAutocompleteBig`.
        public var emojiAutocompleteBig: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/twoFactorAuthEnabled`.
        public var twoFactorAuthEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hideHexSwatch`.
        public var hideHexSwatch: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showJumperScores`.
        public var showJumperScores: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enterpriseMdmCustomMsg`.
        public var enterpriseMdmCustomMsg: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/clientLogsPri`.
        public var clientLogsPri: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/flannelServerPool`.
        public var flannelServerPool: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mentionsExcludeAtChannels`.
        public var mentionsExcludeAtChannels: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/confirmClearAllUnreads`.
        public var confirmClearAllUnreads: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/confirmUserMarkedAway`.
        public var confirmUserMarkedAway: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/boxEnabled`.
        public var boxEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenSingleEmojiMsg`.
        public var seenSingleEmojiMsg: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/confirmShCallStart`.
        public var confirmShCallStart: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/preferredSkinTone`.
        public var preferredSkinTone: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showAllSkinTones`.
        public var showAllSkinTones: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/whatsNewRead`.
        public var whatsNewRead: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/helpModalOpenTimestamp`.
        public var helpModalOpenTimestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/helpModalConsultBannerDismissed`.
        public var helpModalConsultBannerDismissed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/helpFlexpaneSlackConnectCardSeen`.
        public var helpFlexpaneSlackConnectCardSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/helpFlexpaneClipsCardSeen`.
        public var helpFlexpaneClipsCardSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/helpMenuOpenTimestamp`.
        public var helpMenuOpenTimestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/frecencyJumper`.
        public var frecencyJumper: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/frecencyEntJumper`.
        public var frecencyEntJumper: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/newxpSeenLastMessage`.
        public var newxpSeenLastMessage: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showMemoryInstrument`.
        public var showMemoryInstrument: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableUnreadView`.
        public var enableUnreadView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenUnreadViewCoachmark`.
        public var seenUnreadViewCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenConnectDmCoachmark`.
        public var seenConnectDmCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenConnectSectionCoachmark`.
        public var seenConnectSectionCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/shouldShowConnectSection`.
        public var shouldShowConnectSection: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableReactEmojiPicker`.
        public var enableReactEmojiPicker: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenCustomStatusBadge`.
        public var seenCustomStatusBadge: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenCustomStatusCallout`.
        public var seenCustomStatusCallout: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenCustomStatusExpirationBadge`.
        public var seenCustomStatusExpirationBadge: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/usedCustomStatusKbShortcut`.
        public var usedCustomStatusKbShortcut: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenGuestAdminSlackbotAnnouncement`.
        public var seenGuestAdminSlackbotAnnouncement: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenThreadsNotificationBanner`.
        public var seenThreadsNotificationBanner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenNameTaggingCoachmark`.
        public var seenNameTaggingCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/allUnreadsSortOrder`.
        public var allUnreadsSortOrder: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/allUnreadsSectionFilter`.
        public var allUnreadsSectionFilter: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenIntlChannelNamesCoachmark`.
        public var seenIntlChannelNamesCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenP3LocaleChangeMessageKoKr`.
        public var seenP3LocaleChangeMessageKoKr: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenToastNewLocaleLaunch`.
        public var seenToastNewLocaleLaunch: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenToastNewLocaleLaunchTs`.
        public var seenToastNewLocaleLaunchTs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenLocaleChangeMessage`.
        public var seenLocaleChangeMessage: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenJapaneseLocaleChangeMessage`.
        public var seenJapaneseLocaleChangeMessage: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenSharedChannelsCoachmark`.
        public var seenSharedChannelsCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenSharedChannelsOptInChangeMessage`.
        public var seenSharedChannelsOptInChangeMessage: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasRecentlySharedAChannel`.
        public var hasRecentlySharedAChannel: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenChannelBrowserAdminCoachmark`.
        public var seenChannelBrowserAdminCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenAdministrationMenu`.
        public var seenAdministrationMenu: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenDraftsSectionCoachmark`.
        public var seenDraftsSectionCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenEmojiUpdateOverlayCoachmark`.
        public var seenEmojiUpdateOverlayCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenSonicDeluxeToast`.
        public var seenSonicDeluxeToast: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenWysiwygDeluxeToast`.
        public var seenWysiwygDeluxeToast: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenMarkdownPasteToast`.
        public var seenMarkdownPasteToast: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenMarkdownPasteShortcut`.
        public var seenMarkdownPasteShortcut: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenIaEducation`.
        public var seenIaEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showIaTourRelaunch`.
        public var showIaTourRelaunch: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/plainTextMode`.
        public var plainTextMode: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showSharedChannelsEducationBanner`.
        public var showSharedChannelsEducationBanner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/iaSlackbotSurveyTimestamp48h`.
        public var iaSlackbotSurveyTimestamp48h: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/iaSlackbotSurveyTimestamp7d`.
        public var iaSlackbotSurveyTimestamp7d: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableStreamlineView`.
        public var enableStreamlineView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableSentView`.
        public var enableSentView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/allowCallsToSetCurrentStatus`.
        public var allowCallsToSetCurrentStatus: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/inInteractiveMasMigrationFlow`.
        public var inInteractiveMasMigrationFlow: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/sunsetInteractiveMessageViews`.
        public var sunsetInteractiveMessageViews: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/shdepPromoCodeSubmitted`.
        public var shdepPromoCodeSubmitted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenShdepSlackbotMessage`.
        public var seenShdepSlackbotMessage: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenCallsInteractiveCoachmark`.
        public var seenCallsInteractiveCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/allowCmdTabIss`.
        public var allowCmdTabIss: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/joinCallsDeviceSettings`.
        public var joinCallsDeviceSettings: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/callsDisconnectOnLock`.
        public var callsDisconnectOnLock: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenWorkflowBuilderDeluxeToast`.
        public var seenWorkflowBuilderDeluxeToast: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/workflowBuilderIntroModalClickedThrough`.
        public var workflowBuilderIntroModalClickedThrough: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/workflowBuilderCoachmarks`.
        public var workflowBuilderCoachmarks: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenGdriveCoachmark`.
        public var seenGdriveCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenFirstInstallCoachmark`.
        public var seenFirstInstallCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenExistingInstallCoachmark`.
        public var seenExistingInstallCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenLinkUnfurlCoachmark`.
        public var seenLinkUnfurlCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/filePickerVariant`.
        public var filePickerVariant: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/openQuipDocInFlexpane`.
        public var openQuipDocInFlexpane: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/savedSearches`.
        public var savedSearches: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesVariant`.
        public var huddlesVariant: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesCcByDefault`.
        public var huddlesCcByDefault: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesMuteByDefault`.
        public var huddlesMuteByDefault: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesGlobalMute`.
        public var huddlesGlobalMute: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesMiniPanel`.
        public var huddlesMiniPanel: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesSetStatus`.
        public var huddlesSetStatus: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesShowShoutyRooster`.
        public var huddlesShowShoutyRooster: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesDisconnectOnLock`.
        public var huddlesDisconnectOnLock: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesPlayMusicWhenLast`.
        public var huddlesPlayMusicWhenLast: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesAllowSmartNotif`.
        public var huddlesAllowSmartNotif: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesReactionsPlaySound`.
        public var huddlesReactionsPlaySound: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesReactionsReadOutLoud`.
        public var huddlesReactionsReadOutLoud: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddlesChimeNewEndpointsCheckCompleted`.
        public var huddlesChimeNewEndpointsCheckCompleted: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/xwsSidebarVariant`.
        public var xwsSidebarVariant: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/inboxViewsWorkspaceFilter`.
        public var inboxViewsWorkspaceFilter: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/overloadedMessageEnabled`.
        public var overloadedMessageEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenHighlightsCoachmark`.
        public var seenHighlightsCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenHighlightsArrowsCoachmark`.
        public var seenHighlightsArrowsCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenHighlightsWarmWelcome`.
        public var seenHighlightsWarmWelcome: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenNewSearchUi`.
        public var seenNewSearchUi: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenChannelSearch`.
        public var seenChannelSearch: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenPeopleSearch`.
        public var seenPeopleSearch: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenPeopleSearchCount`.
        public var seenPeopleSearchCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedScrollSearchTooltipCount`.
        public var dismissedScrollSearchTooltipCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/lastDismissedScrollSearchTooltipTimestamp`.
        public var lastDismissedScrollSearchTooltipTimestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasUsedQuickswitcherShortcut`.
        public var hasUsedQuickswitcherShortcut: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenQuickswitcherShortcutTipCount`.
        public var seenQuickswitcherShortcutTipCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersDismissedChannelsLowResultsEducation`.
        public var browsersDismissedChannelsLowResultsEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersSeenInitialChannelsEducation`.
        public var browsersSeenInitialChannelsEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersDismissedPeopleLowResultsEducation`.
        public var browsersDismissedPeopleLowResultsEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersSeenInitialPeopleEducation`.
        public var browsersSeenInitialPeopleEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersDismissedUserGroupsLowResultsEducation`.
        public var browsersDismissedUserGroupsLowResultsEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersSeenInitialUserGroupsEducation`.
        public var browsersSeenInitialUserGroupsEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersDismissedFilesLowResultsEducation`.
        public var browsersDismissedFilesLowResultsEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersSeenInitialFilesEducation`.
        public var browsersSeenInitialFilesEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersDismissedInitialDraftsEducation`.
        public var browsersDismissedInitialDraftsEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersSeenInitialDraftsEducation`.
        public var browsersSeenInitialDraftsEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersDismissedInitialActivityEducation`.
        public var browsersDismissedInitialActivityEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersSeenInitialActivityEducation`.
        public var browsersSeenInitialActivityEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersDismissedInitialSavedEducation`.
        public var browsersDismissedInitialSavedEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/browsersSeenInitialSavedEducation`.
        public var browsersSeenInitialSavedEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenEditMode`.
        public var seenEditMode: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenEditModeEdu`.
        public var seenEditModeEdu: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/xwsDismissedEducation`.
        public var xwsDismissedEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/xwsSeenEducation`.
        public var xwsSeenEducation: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/sidebarPrefDismissedTip`.
        public var sidebarPrefDismissedTip: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/a11yDyslexic`.
        public var a11yDyslexic: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/a11yAnimations`.
        public var a11yAnimations: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenKeyboardShortcutsCoachmark`.
        public var seenKeyboardShortcutsCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/needsInitialPasswordSet`.
        public var needsInitialPasswordSet: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/lessonsEnabled`.
        public var lessonsEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/tractorEnabled`.
        public var tractorEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/tractorExperimentGroup`.
        public var tractorExperimentGroup: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/openedSlackbotDm`.
        public var openedSlackbotDm: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/newxpSeenHelpMessage`.
        public var newxpSeenHelpMessage: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/newxpSuggestedChannels`.
        public var newxpSuggestedChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/onboardingComplete`.
        public var onboardingComplete: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/welcomePlaceState`.
        public var welcomePlaceState: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasReceivedThreadedMessage`.
        public var hasReceivedThreadedMessage: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/joinerNotificationsMuted`.
        public var joinerNotificationsMuted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/inviteAcceptedNotificationsMuted`.
        public var inviteAcceptedNotificationsMuted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/joinerMessageSuggestionDismissed`.
        public var joinerMessageSuggestionDismissed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedFullscreenDownloadSsbPrompt`.
        public var dismissedFullscreenDownloadSsbPrompt: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedBannerDownloadSsbPrompt`.
        public var dismissedBannerDownloadSsbPrompt: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/onboardingState`.
        public var onboardingState: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/whocanseethisDmMpdmBadge`.
        public var whocanseethisDmMpdmBadge: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/highlightWords`.
        public var highlightWords: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/threadsEverything`.
        public var threadsEverything: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/noTextInNotifications`.
        public var noTextInNotifications: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushShowPreview`.
        public var pushShowPreview: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growlsEnabled`.
        public var growlsEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/allChannelsLoud`.
        public var allChannelsLoud: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushDmAlert`.
        public var pushDmAlert: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushMentionAlert`.
        public var pushMentionAlert: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushEverything`.
        public var pushEverything: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushIdleWait`.
        public var pushIdleWait: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushSound`.
        public var pushSound: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/newMsgSnd`.
        public var newMsgSnd: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/huddleInviteSound`.
        public var huddleInviteSound: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushLoudChannels`.
        public var pushLoudChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushMentionChannels`.
        public var pushMentionChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushLoudChannelsSet`.
        public var pushLoudChannelsSet: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/loudChannels`.
        public var loudChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/neverChannels`.
        public var neverChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/loudChannelsSet`.
        public var loudChannelsSet: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/atChannelSuppressedChannels`.
        public var atChannelSuppressedChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/pushAtChannelSuppressedChannels`.
        public var pushAtChannelSuppressedChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mutedChannels`.
        public var mutedChannels: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/allNotificationsPrefs`.
        public var allNotificationsPrefs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthMsgLimitApproachingCtaCount`.
        public var growthMsgLimitApproachingCtaCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthMsgLimitApproachingCtaTs`.
        public var growthMsgLimitApproachingCtaTs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthMsgLimitReachedCtaCount`.
        public var growthMsgLimitReachedCtaCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthMsgLimitReachedCtaLastTs`.
        public var growthMsgLimitReachedCtaLastTs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthMsgLimitLongReachedCtaCount`.
        public var growthMsgLimitLongReachedCtaCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthMsgLimitLongReachedCtaLastTs`.
        public var growthMsgLimitLongReachedCtaLastTs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthMsgLimitSixtyDayBannerCtaCount`.
        public var growthMsgLimitSixtyDayBannerCtaCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthMsgLimitSixtyDayBannerCtaLastTs`.
        public var growthMsgLimitSixtyDayBannerCtaLastTs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/growthAllBannersPrefs`.
        public var growthAllBannersPrefs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/analyticsUpsellCoachmarkSeen`.
        public var analyticsUpsellCoachmarkSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenAppSpaceCoachmark`.
        public var seenAppSpaceCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenAppSpaceTutorial`.
        public var seenAppSpaceTutorial: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedAppLauncherWelcome`.
        public var dismissedAppLauncherWelcome: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedAppLauncherLimit`.
        public var dismissedAppLauncherLimit: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedAppLauncherAtlassianPromo`.
        public var dismissedAppLauncherAtlassianPromo: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableAppConfigRedesign`.
        public var enableAppConfigRedesign: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedAppConfigRedesignCoachmark`.
        public var dismissedAppConfigRedesignCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedAppManifestDescription`.
        public var dismissedAppManifestDescription: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedAppManifestCoachmark`.
        public var dismissedAppManifestCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenChannelEmailTooltip`.
        public var seenChannelEmailTooltip: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showEntOnboarding`.
        public var showEntOnboarding: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/foldersEnabled`.
        public var foldersEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/folderData`.
        public var folderData: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenCorporateExportAlert`.
        public var seenCorporateExportAlert: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showAutocompleteHelp`.
        public var showAutocompleteHelp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/deprecationToastLastSeen`.
        public var deprecationToastLastSeen: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/deprecationModalLastSeen`.
        public var deprecationModalLastSeen: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/deprecationBannerLastSeen`.
        public var deprecationBannerLastSeen: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/iap1Lab`.
        public var iap1Lab: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/iaTopNavTheme`.
        public var iaTopNavTheme: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/iaPlatformActionsLab`.
        public var iaPlatformActionsLab: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/activityView`.
        public var activityView: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/savedView`.
        public var savedView: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenFloatingSidebarCoachmark`.
        public var seenFloatingSidebarCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/desktopClientIds`.
        public var desktopClientIds: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/failoverProxyCheckCompleted`.
        public var failoverProxyCheckCompleted: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/chimeAccessCheckCompleted`.
        public var chimeAccessCheckCompleted: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mxCalendarType`.
        public var mxCalendarType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/edgeUploadProxyCheckCompleted`.
        public var edgeUploadProxyCheckCompleted: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/appSubdomainCheckCompleted`.
        public var appSubdomainCheckCompleted: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/addPromptInteracted`.
        public var addPromptInteracted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/addAppsPromptDismissed`.
        public var addAppsPromptDismissed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/addChannelPromptDismissed`.
        public var addChannelPromptDismissed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/channelSidebarHideInvite`.
        public var channelSidebarHideInvite: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/channelSidebarHideBrowseDmsLink`.
        public var channelSidebarHideBrowseDmsLink: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/inProdSurveysEnabled`.
        public var inProdSurveysEnabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/connectDmEarlyAccess`.
        public var connectDmEarlyAccess: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedInstalledAppDmSuggestions`.
        public var dismissedInstalledAppDmSuggestions: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenContextualMessageShortcutsModal`.
        public var seenContextualMessageShortcutsModal: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenMessageNavigationEducationalToast`.
        public var seenMessageNavigationEducationalToast: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/contextualMessageShortcutsModalWasSeen`.
        public var contextualMessageShortcutsModalWasSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/messageNavigationToastWasSeen`.
        public var messageNavigationToastWasSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/upToBrowseKbShortcut`.
        public var upToBrowseKbShortcut: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/setA11yPrefsNewUser`.
        public var setA11yPrefsNewUser: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/a11yPlaySoundForIncomingDm`.
        public var a11yPlaySoundForIncomingDm: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/a11yPlaySoundForSentDm`.
        public var a11yPlaySoundForSentDm: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/a11yReadOutIncomingDm`.
        public var a11yReadOutIncomingDm: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/a11yScreenReaderMessageLabelDateTimeFirst`.
        public var a11yScreenReaderMessageLabelDateTimeFirst: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/shouldShowContextualHelpForConversationNavigation`.
        public var shouldShowContextualHelpForConversationNavigation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/shouldShowContextualHelpForJumpToConversation`.
        public var shouldShowContextualHelpForJumpToConversation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/shouldShowContextualHelpForSectionNavigation`.
        public var shouldShowContextualHelpForSectionNavigation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/shouldShowContextualHelpForThreadNavigation`.
        public var shouldShowContextualHelpForThreadNavigation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/shouldShowUnsendMessageConfirmation`.
        public var shouldShowUnsendMessageConfirmation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/channelSections`.
        public var channelSections: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showQuickReactions`.
        public var showQuickReactions: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/userCustomizedQuickReactionsDisplayFeature`.
        public var userCustomizedQuickReactionsDisplayFeature: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/userCustomizedQuickReactionsHasCustomized`.
        public var userCustomizedQuickReactionsHasCustomized: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/userCustomizedQuickReactionsUseFrequentlyUsedEmoji`.
        public var userCustomizedQuickReactionsUseFrequentlyUsedEmoji: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/reactionNotifications`.
        public var reactionNotifications: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasReceivedMentionOrReaction`.
        public var hasReceivedMentionOrReaction: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasStarredItem`.
        public var hasStarredItem: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasDraftedMessage`.
        public var hasDraftedMessage: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableMentionsAndReactionsView`.
        public var enableMentionsAndReactionsView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableRemindersView`.
        public var enableRemindersView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableSavedItemsView`.
        public var enableSavedItemsView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableHqView`.
        public var enableHqView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableAllDmsView`.
        public var enableAllDmsView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableChannelBrowserView`.
        public var enableChannelBrowserView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableFileBrowserView`.
        public var enableFileBrowserView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enablePeopleBrowserView`.
        public var enablePeopleBrowserView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableAppBrowserView`.
        public var enableAppBrowserView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/reachedAllDmsDisclosure`.
        public var reachedAllDmsDisclosure: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableSlackConnectView`.
        public var enableSlackConnectView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableSlackConnectView2`.
        public var enableSlackConnectView2: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasAcknowledgedShortcutSpeedbump`.
        public var hasAcknowledgedShortcutSpeedbump: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableMediaCaptions`.
        public var enableMediaCaptions: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mediaPlaybackSpeed`.
        public var mediaPlaybackSpeed: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mediaMuted`.
        public var mediaMuted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mediaVolume`.
        public var mediaVolume: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedConnectAutoApprovalModal`.
        public var dismissedConnectAutoApprovalModal: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/tasksView`.
        public var tasksView: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showSidebarAvatars`.
        public var showSidebarAvatars: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasDismissedGoogleDirectoryCoachmark`.
        public var hasDismissedGoogleDirectoryCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenScPageBanner`.
        public var seenScPageBanner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenScMenuCoachmark`.
        public var seenScMenuCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenScPage`.
        public var seenScPage: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedScdmEducation`.
        public var dismissedScdmEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenBookmarksIntro`.
        public var seenBookmarksIntro: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/scdmTrialOfferBanner`.
        public var scdmTrialOfferBanner: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/identityLinksPrefs`.
        public var identityLinksPrefs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/identityLinksGlobalPrefs`.
        public var identityLinksGlobalPrefs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenSectionsUnreadsOnlyPromptCount`.
        public var seenSectionsUnreadsOnlyPromptCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/lastSeenSectionsUnreadsOnlyPromptTimestamp`.
        public var lastSeenSectionsUnreadsOnlyPromptTimestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/notificationsView`.
        public var notificationsView: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/progressiveDisclosureState`.
        public var progressiveDisclosureState: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/suggestionsRequestId`.
        public var suggestionsRequestId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/allowedUnfurlSenders`.
        public var allowedUnfurlSenders: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/iaDetailsCoachmarkSeen`.
        public var iaDetailsCoachmarkSeen: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hideExternalMembersSharingSpeedBump`.
        public var hideExternalMembersSharingSpeedBump: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/whoCanShareContactCard`.
        public var whoCanShareContactCard: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/slackConnectInviteShouldBadgeSidebar`.
        public var slackConnectInviteShouldBadgeSidebar: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/phcDismissed`.
        public var phcDismissed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedGovSlackFirstTimePopup`.
        public var dismissedGovSlackFirstTimePopup: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mobileChannelListSort`.
        public var mobileChannelListSort: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/userExpectationsSurveyLastTriggerAttempt`.
        public var userExpectationsSurveyLastTriggerAttempt: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/localesEnabled`.
        public var localesEnabled: Components.Schemas.LocalesEnabled?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/phcViewed`.
        public var phcViewed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenA11yPrefSetupCoachmark`.
        public var seenA11yPrefSetupCoachmark: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableFileBrowserViewForDocs`.
        public var enableFileBrowserViewForDocs: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableShortcutsView`.
        public var enableShortcutsView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/showGovSlackContextBarBanner`.
        public var showGovSlackContextBarBanner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/whoCanSeeAccountBySearchingEmail`.
        public var whoCanSeeAccountBySearchingEmail: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/contextualHelpResetCount`.
        public var contextualHelpResetCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/mobileChannelListShowAllDms`.
        public var mobileChannelListShowAllDms: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableQuipFileBrowserView`.
        public var enableQuipFileBrowserView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/a11yPlaySoundForIncomingDmChoice`.
        public var a11yPlaySoundForIncomingDmChoice: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/a11yPlaySoundForSentDmChoice`.
        public var a11yPlaySoundForSentDmChoice: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/onboardingTipOptOut`.
        public var onboardingTipOptOut: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingSynthView`.
        public var seenOnboardingSynthView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableDraftsView`.
        public var enableDraftsView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableScheduledView`.
        public var enableScheduledView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenSentPageInSidebar`.
        public var seenSentPageInSidebar: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/firstSeenSentPageInSidebar`.
        public var firstSeenSentPageInSidebar: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenNewBadgeInMoreMenuSidebar`.
        public var seenNewBadgeInMoreMenuSidebar: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/firstSeenNewBadgeInMoreMenuSidebar`.
        public var firstSeenNewBadgeInMoreMenuSidebar: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingSynthViewCount`.
        public var seenOnboardingSynthViewCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/synthViewPrefs`.
        public var synthViewPrefs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/clipsFeedbackSurveyLastTriggerAttempt`.
        public var clipsFeedbackSurveyLastTriggerAttempt: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/enableLaterView`.
        public var enableLaterView: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasJoinedHuddle`.
        public var hasJoinedHuddle: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hasSentTenMessages`.
        public var hasSentTenMessages: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/suppressThreadMentionWarning`.
        public var suppressThreadMentionWarning: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/hiddenUsers`.
        public var hiddenUsers: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/dismissedSentPageEducation`.
        public var dismissedSentPageEducation: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingSynthViewV2`.
        public var seenOnboardingSynthViewV2: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/clickedCloseOnboardingSynthViewBanner`.
        public var clickedCloseOnboardingSynthViewBanner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/seenOnboardingSynthViewCountV2`.
        public var seenOnboardingSynthViewCountV2: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/appManifestSchemaFormat`.
        public var appManifestSchemaFormat: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SelfPrefs/channelCanvasVariant`.
        public var channelCanvasVariant: Swift.Int?
        /// Creates a new `SelfPrefs`.
        ///
        /// - Parameters:
        ///   - time24:
        ///   - jumbomoji:
        ///   - locale:
        ///   - purchaser:
        ///   - tz:
        ///   - frecency:
        ///   - underlineLinks:
        ///   - userColors:
        ///   - colorNamesInList:
        ///   - emailAlerts:
        ///   - emailAlertsSleepUntil:
        ///   - emailTips:
        ///   - emailWeekly:
        ///   - emailOffers:
        ///   - emailResearch:
        ///   - emailDeveloper:
        ///   - welcomeMessageHidden:
        ///   - searchSort:
        ///   - searchFileSort:
        ///   - searchChannelSort:
        ///   - searchPeopleSort:
        ///   - expandInlineImgs:
        ///   - expandInternalInlineImgs:
        ///   - expandSnippets:
        ///   - postsFormattingGuide:
        ///   - seenWelcome2:
        ///   - seenSsbPrompt:
        ///   - spacesNewXpBannerDismissed:
        ///   - searchOnlyMyChannels:
        ///   - searchOnlyCurrentTeam:
        ///   - searchHideMyChannels:
        ///   - searchOnlyShowOnline:
        ///   - searchHideDeactivatedUsers:
        ///   - emojiMode:
        ///   - emojiUse:
        ///   - emojiUseOrg:
        ///   - hasInvited:
        ///   - hasUploaded:
        ///   - hasCreatedChannel:
        ///   - hasCreatedChannelSection:
        ///   - hasSearched:
        ///   - searchExcludeChannels:
        ///   - messagesTheme:
        ///   - webappSpellcheck:
        ///   - noJoinedOverlays:
        ///   - noCreatedOverlays:
        ///   - dropboxEnabled:
        ///   - seenDomainInviteReminder:
        ///   - seenMemberInviteReminder:
        ///   - muteSounds:
        ///   - arrowHistory:
        ///   - tabUiReturnSelects:
        ///   - obeyInlineImgLimit:
        ///   - requireAt:
        ///   - ssbSpaceWindow:
        ///   - macSsbBounce:
        ///   - macSsbBullet:
        ///   - expandNonMediaAttachments:
        ///   - showTyping:
        ///   - pagekeysHandled:
        ///   - lastSnippetType:
        ///   - displayRealNamesOverride:
        ///   - displayDisplayNames:
        ///   - enterIsSpecialInTbt:
        ///   - msgInputSendBtn:
        ///   - msgInputSendBtnAutoSet:
        ///   - msgInputStickyComposer:
        ///   - composerNux:
        ///   - graphicEmoticons:
        ///   - convertEmoticons:
        ///   - ssEmojis:
        ///   - seenOnboardingStart:
        ///   - onboardingCancelled:
        ///   - seenOnboardingSlackbotConversation:
        ///   - seenOnboardingChannels:
        ///   - seenOnboardingDirectMessages:
        ///   - seenOnboardingInvites:
        ///   - seenOnboardingSearch:
        ///   - seenOnboardingRecentMentions:
        ///   - seenOnboardingStarredItems:
        ///   - seenOnboardingPrivateGroups:
        ///   - seenOnboardingBanner:
        ///   - onboardingSlackbotConversationStep:
        ///   - setTzAutomatically:
        ///   - suppressLinkWarning:
        ///   - suppressExternalInvitesFromComposeWarning:
        ///   - seenEmojiPackCta:
        ///   - seenEmojiPackDialog:
        ///   - seenScheduleSendCoachmark:
        ///   - emojiPacksMostRecentAvailableTime:
        ///   - emojiPacksClickedPickerCta:
        ///   - emojiPacksClickedPickerPostInstallCta:
        ///   - emojiPacksClickedCollectionCta:
        ///   - dndEnabled:
        ///   - dndStartHour:
        ///   - dndEndHour:
        ///   - dndBeforeMonday:
        ///   - dndAfterMonday:
        ///   - dndEnabledMonday:
        ///   - dndBeforeTuesday:
        ///   - dndAfterTuesday:
        ///   - dndEnabledTuesday:
        ///   - dndBeforeWednesday:
        ///   - dndAfterWednesday:
        ///   - dndEnabledWednesday:
        ///   - dndBeforeThursday:
        ///   - dndAfterThursday:
        ///   - dndEnabledThursday:
        ///   - dndBeforeFriday:
        ///   - dndAfterFriday:
        ///   - dndEnabledFriday:
        ///   - dndBeforeSaturday:
        ///   - dndAfterSaturday:
        ///   - dndEnabledSaturday:
        ///   - dndBeforeSunday:
        ///   - dndAfterSunday:
        ///   - dndEnabledSunday:
        ///   - dndDays:
        ///   - dndWeekdaysOffAllday:
        ///   - reminderNotificationTime:
        ///   - dndCustomNewBadgeSeen:
        ///   - dndNotificationScheduleNewBadgeSeen:
        ///   - notificationCenterFilters:
        ///   - callsSurveyLastSeen:
        ///   - huddleSurveyLastSeen:
        ///   - sidebarBehavior:
        ///   - channelSort:
        ///   - separatePrivateChannels:
        ///   - separateSharedChannels:
        ///   - sidebarTheme:
        ///   - sidebarThemeCustomValues:
        ///   - noInvitesWidgetInSidebar:
        ///   - noOmniboxInChannels:
        ///   - kKeyOmniboxAutoHideCount:
        ///   - showSidebarQuickswitcherButton:
        ///   - entOrgWideChannelsSidebar:
        ///   - markMsgsReadImmediately:
        ///   - startScrollAtOldest:
        ///   - snippetEditorWrapLongLines:
        ///   - lsDisabled:
        ///   - fKeySearch:
        ///   - kKeyOmnibox:
        ///   - promptedForEmailDisabling:
        ///   - noMacelectronBanner:
        ///   - noMacssb1Banner:
        ///   - noMacssb2Banner:
        ///   - noWinssb1Banner:
        ///   - hideUserGroupInfoPane:
        ///   - mentionsExcludeAtUserGroups:
        ///   - mentionsExcludeReactions:
        ///   - privacyPolicySeen:
        ///   - enterpriseMigrationSeen:
        ///   - searchExcludeBots:
        ///   - loadLato2:
        ///   - fullerTimestamps:
        ///   - lastSeenAtChannelWarning:
        ///   - emojiAutocompleteBig:
        ///   - twoFactorAuthEnabled:
        ///   - hideHexSwatch:
        ///   - showJumperScores:
        ///   - enterpriseMdmCustomMsg:
        ///   - clientLogsPri:
        ///   - flannelServerPool:
        ///   - mentionsExcludeAtChannels:
        ///   - confirmClearAllUnreads:
        ///   - confirmUserMarkedAway:
        ///   - boxEnabled:
        ///   - seenSingleEmojiMsg:
        ///   - confirmShCallStart:
        ///   - preferredSkinTone:
        ///   - showAllSkinTones:
        ///   - whatsNewRead:
        ///   - helpModalOpenTimestamp:
        ///   - helpModalConsultBannerDismissed:
        ///   - helpFlexpaneSlackConnectCardSeen:
        ///   - helpFlexpaneClipsCardSeen:
        ///   - helpMenuOpenTimestamp:
        ///   - frecencyJumper:
        ///   - frecencyEntJumper:
        ///   - newxpSeenLastMessage:
        ///   - showMemoryInstrument:
        ///   - enableUnreadView:
        ///   - seenUnreadViewCoachmark:
        ///   - seenConnectDmCoachmark:
        ///   - seenConnectSectionCoachmark:
        ///   - shouldShowConnectSection:
        ///   - enableReactEmojiPicker:
        ///   - seenCustomStatusBadge:
        ///   - seenCustomStatusCallout:
        ///   - seenCustomStatusExpirationBadge:
        ///   - usedCustomStatusKbShortcut:
        ///   - seenGuestAdminSlackbotAnnouncement:
        ///   - seenThreadsNotificationBanner:
        ///   - seenNameTaggingCoachmark:
        ///   - allUnreadsSortOrder:
        ///   - allUnreadsSectionFilter:
        ///   - seenIntlChannelNamesCoachmark:
        ///   - seenP3LocaleChangeMessageKoKr:
        ///   - seenToastNewLocaleLaunch:
        ///   - seenToastNewLocaleLaunchTs:
        ///   - seenLocaleChangeMessage:
        ///   - seenJapaneseLocaleChangeMessage:
        ///   - seenSharedChannelsCoachmark:
        ///   - seenSharedChannelsOptInChangeMessage:
        ///   - hasRecentlySharedAChannel:
        ///   - seenChannelBrowserAdminCoachmark:
        ///   - seenAdministrationMenu:
        ///   - seenDraftsSectionCoachmark:
        ///   - seenEmojiUpdateOverlayCoachmark:
        ///   - seenSonicDeluxeToast:
        ///   - seenWysiwygDeluxeToast:
        ///   - seenMarkdownPasteToast:
        ///   - seenMarkdownPasteShortcut:
        ///   - seenIaEducation:
        ///   - showIaTourRelaunch:
        ///   - plainTextMode:
        ///   - showSharedChannelsEducationBanner:
        ///   - iaSlackbotSurveyTimestamp48h:
        ///   - iaSlackbotSurveyTimestamp7d:
        ///   - enableStreamlineView:
        ///   - enableSentView:
        ///   - allowCallsToSetCurrentStatus:
        ///   - inInteractiveMasMigrationFlow:
        ///   - sunsetInteractiveMessageViews:
        ///   - shdepPromoCodeSubmitted:
        ///   - seenShdepSlackbotMessage:
        ///   - seenCallsInteractiveCoachmark:
        ///   - allowCmdTabIss:
        ///   - joinCallsDeviceSettings:
        ///   - callsDisconnectOnLock:
        ///   - seenWorkflowBuilderDeluxeToast:
        ///   - workflowBuilderIntroModalClickedThrough:
        ///   - workflowBuilderCoachmarks:
        ///   - seenGdriveCoachmark:
        ///   - seenFirstInstallCoachmark:
        ///   - seenExistingInstallCoachmark:
        ///   - seenLinkUnfurlCoachmark:
        ///   - filePickerVariant:
        ///   - openQuipDocInFlexpane:
        ///   - savedSearches:
        ///   - huddlesVariant:
        ///   - huddlesCcByDefault:
        ///   - huddlesMuteByDefault:
        ///   - huddlesGlobalMute:
        ///   - huddlesMiniPanel:
        ///   - huddlesSetStatus:
        ///   - huddlesShowShoutyRooster:
        ///   - huddlesDisconnectOnLock:
        ///   - huddlesPlayMusicWhenLast:
        ///   - huddlesAllowSmartNotif:
        ///   - huddlesReactionsPlaySound:
        ///   - huddlesReactionsReadOutLoud:
        ///   - huddlesChimeNewEndpointsCheckCompleted:
        ///   - xwsSidebarVariant:
        ///   - inboxViewsWorkspaceFilter:
        ///   - overloadedMessageEnabled:
        ///   - seenHighlightsCoachmark:
        ///   - seenHighlightsArrowsCoachmark:
        ///   - seenHighlightsWarmWelcome:
        ///   - seenNewSearchUi:
        ///   - seenChannelSearch:
        ///   - seenPeopleSearch:
        ///   - seenPeopleSearchCount:
        ///   - dismissedScrollSearchTooltipCount:
        ///   - lastDismissedScrollSearchTooltipTimestamp:
        ///   - hasUsedQuickswitcherShortcut:
        ///   - seenQuickswitcherShortcutTipCount:
        ///   - browsersDismissedChannelsLowResultsEducation:
        ///   - browsersSeenInitialChannelsEducation:
        ///   - browsersDismissedPeopleLowResultsEducation:
        ///   - browsersSeenInitialPeopleEducation:
        ///   - browsersDismissedUserGroupsLowResultsEducation:
        ///   - browsersSeenInitialUserGroupsEducation:
        ///   - browsersDismissedFilesLowResultsEducation:
        ///   - browsersSeenInitialFilesEducation:
        ///   - browsersDismissedInitialDraftsEducation:
        ///   - browsersSeenInitialDraftsEducation:
        ///   - browsersDismissedInitialActivityEducation:
        ///   - browsersSeenInitialActivityEducation:
        ///   - browsersDismissedInitialSavedEducation:
        ///   - browsersSeenInitialSavedEducation:
        ///   - seenEditMode:
        ///   - seenEditModeEdu:
        ///   - xwsDismissedEducation:
        ///   - xwsSeenEducation:
        ///   - sidebarPrefDismissedTip:
        ///   - a11yDyslexic:
        ///   - a11yAnimations:
        ///   - seenKeyboardShortcutsCoachmark:
        ///   - needsInitialPasswordSet:
        ///   - lessonsEnabled:
        ///   - tractorEnabled:
        ///   - tractorExperimentGroup:
        ///   - openedSlackbotDm:
        ///   - newxpSeenHelpMessage:
        ///   - newxpSuggestedChannels:
        ///   - onboardingComplete:
        ///   - welcomePlaceState:
        ///   - hasReceivedThreadedMessage:
        ///   - joinerNotificationsMuted:
        ///   - inviteAcceptedNotificationsMuted:
        ///   - joinerMessageSuggestionDismissed:
        ///   - dismissedFullscreenDownloadSsbPrompt:
        ///   - dismissedBannerDownloadSsbPrompt:
        ///   - onboardingState:
        ///   - whocanseethisDmMpdmBadge:
        ///   - highlightWords:
        ///   - threadsEverything:
        ///   - noTextInNotifications:
        ///   - pushShowPreview:
        ///   - growlsEnabled:
        ///   - allChannelsLoud:
        ///   - pushDmAlert:
        ///   - pushMentionAlert:
        ///   - pushEverything:
        ///   - pushIdleWait:
        ///   - pushSound:
        ///   - newMsgSnd:
        ///   - huddleInviteSound:
        ///   - pushLoudChannels:
        ///   - pushMentionChannels:
        ///   - pushLoudChannelsSet:
        ///   - loudChannels:
        ///   - neverChannels:
        ///   - loudChannelsSet:
        ///   - atChannelSuppressedChannels:
        ///   - pushAtChannelSuppressedChannels:
        ///   - mutedChannels:
        ///   - allNotificationsPrefs:
        ///   - growthMsgLimitApproachingCtaCount:
        ///   - growthMsgLimitApproachingCtaTs:
        ///   - growthMsgLimitReachedCtaCount:
        ///   - growthMsgLimitReachedCtaLastTs:
        ///   - growthMsgLimitLongReachedCtaCount:
        ///   - growthMsgLimitLongReachedCtaLastTs:
        ///   - growthMsgLimitSixtyDayBannerCtaCount:
        ///   - growthMsgLimitSixtyDayBannerCtaLastTs:
        ///   - growthAllBannersPrefs:
        ///   - analyticsUpsellCoachmarkSeen:
        ///   - seenAppSpaceCoachmark:
        ///   - seenAppSpaceTutorial:
        ///   - dismissedAppLauncherWelcome:
        ///   - dismissedAppLauncherLimit:
        ///   - dismissedAppLauncherAtlassianPromo:
        ///   - enableAppConfigRedesign:
        ///   - dismissedAppConfigRedesignCoachmark:
        ///   - dismissedAppManifestDescription:
        ///   - dismissedAppManifestCoachmark:
        ///   - seenChannelEmailTooltip:
        ///   - showEntOnboarding:
        ///   - foldersEnabled:
        ///   - folderData:
        ///   - seenCorporateExportAlert:
        ///   - showAutocompleteHelp:
        ///   - deprecationToastLastSeen:
        ///   - deprecationModalLastSeen:
        ///   - deprecationBannerLastSeen:
        ///   - iap1Lab:
        ///   - iaTopNavTheme:
        ///   - iaPlatformActionsLab:
        ///   - activityView:
        ///   - savedView:
        ///   - seenFloatingSidebarCoachmark:
        ///   - desktopClientIds:
        ///   - failoverProxyCheckCompleted:
        ///   - chimeAccessCheckCompleted:
        ///   - mxCalendarType:
        ///   - edgeUploadProxyCheckCompleted:
        ///   - appSubdomainCheckCompleted:
        ///   - addPromptInteracted:
        ///   - addAppsPromptDismissed:
        ///   - addChannelPromptDismissed:
        ///   - channelSidebarHideInvite:
        ///   - channelSidebarHideBrowseDmsLink:
        ///   - inProdSurveysEnabled:
        ///   - connectDmEarlyAccess:
        ///   - dismissedInstalledAppDmSuggestions:
        ///   - seenContextualMessageShortcutsModal:
        ///   - seenMessageNavigationEducationalToast:
        ///   - contextualMessageShortcutsModalWasSeen:
        ///   - messageNavigationToastWasSeen:
        ///   - upToBrowseKbShortcut:
        ///   - setA11yPrefsNewUser:
        ///   - a11yPlaySoundForIncomingDm:
        ///   - a11yPlaySoundForSentDm:
        ///   - a11yReadOutIncomingDm:
        ///   - a11yScreenReaderMessageLabelDateTimeFirst:
        ///   - shouldShowContextualHelpForConversationNavigation:
        ///   - shouldShowContextualHelpForJumpToConversation:
        ///   - shouldShowContextualHelpForSectionNavigation:
        ///   - shouldShowContextualHelpForThreadNavigation:
        ///   - shouldShowUnsendMessageConfirmation:
        ///   - channelSections:
        ///   - showQuickReactions:
        ///   - userCustomizedQuickReactionsDisplayFeature:
        ///   - userCustomizedQuickReactionsHasCustomized:
        ///   - userCustomizedQuickReactionsUseFrequentlyUsedEmoji:
        ///   - reactionNotifications:
        ///   - hasReceivedMentionOrReaction:
        ///   - hasStarredItem:
        ///   - hasDraftedMessage:
        ///   - enableMentionsAndReactionsView:
        ///   - enableRemindersView:
        ///   - enableSavedItemsView:
        ///   - enableHqView:
        ///   - enableAllDmsView:
        ///   - enableChannelBrowserView:
        ///   - enableFileBrowserView:
        ///   - enablePeopleBrowserView:
        ///   - enableAppBrowserView:
        ///   - reachedAllDmsDisclosure:
        ///   - enableSlackConnectView:
        ///   - enableSlackConnectView2:
        ///   - hasAcknowledgedShortcutSpeedbump:
        ///   - enableMediaCaptions:
        ///   - mediaPlaybackSpeed:
        ///   - mediaMuted:
        ///   - mediaVolume:
        ///   - dismissedConnectAutoApprovalModal:
        ///   - tasksView:
        ///   - showSidebarAvatars:
        ///   - hasDismissedGoogleDirectoryCoachmark:
        ///   - seenScPageBanner:
        ///   - seenScMenuCoachmark:
        ///   - seenScPage:
        ///   - dismissedScdmEducation:
        ///   - seenBookmarksIntro:
        ///   - scdmTrialOfferBanner:
        ///   - identityLinksPrefs:
        ///   - identityLinksGlobalPrefs:
        ///   - seenSectionsUnreadsOnlyPromptCount:
        ///   - lastSeenSectionsUnreadsOnlyPromptTimestamp:
        ///   - notificationsView:
        ///   - progressiveDisclosureState:
        ///   - suggestionsRequestId:
        ///   - allowedUnfurlSenders:
        ///   - iaDetailsCoachmarkSeen:
        ///   - hideExternalMembersSharingSpeedBump:
        ///   - whoCanShareContactCard:
        ///   - slackConnectInviteShouldBadgeSidebar:
        ///   - phcDismissed:
        ///   - dismissedGovSlackFirstTimePopup:
        ///   - mobileChannelListSort:
        ///   - userExpectationsSurveyLastTriggerAttempt:
        ///   - localesEnabled:
        ///   - phcViewed:
        ///   - seenA11yPrefSetupCoachmark:
        ///   - enableFileBrowserViewForDocs:
        ///   - enableShortcutsView:
        ///   - showGovSlackContextBarBanner:
        ///   - whoCanSeeAccountBySearchingEmail:
        ///   - contextualHelpResetCount:
        ///   - mobileChannelListShowAllDms:
        ///   - enableQuipFileBrowserView:
        ///   - a11yPlaySoundForIncomingDmChoice:
        ///   - a11yPlaySoundForSentDmChoice:
        ///   - onboardingTipOptOut:
        ///   - seenOnboardingSynthView:
        ///   - enableDraftsView:
        ///   - enableScheduledView:
        ///   - seenSentPageInSidebar:
        ///   - firstSeenSentPageInSidebar:
        ///   - seenNewBadgeInMoreMenuSidebar:
        ///   - firstSeenNewBadgeInMoreMenuSidebar:
        ///   - seenOnboardingSynthViewCount:
        ///   - synthViewPrefs:
        ///   - clipsFeedbackSurveyLastTriggerAttempt:
        ///   - enableLaterView:
        ///   - hasJoinedHuddle:
        ///   - hasSentTenMessages:
        ///   - suppressThreadMentionWarning:
        ///   - hiddenUsers:
        ///   - dismissedSentPageEducation:
        ///   - seenOnboardingSynthViewV2:
        ///   - clickedCloseOnboardingSynthViewBanner:
        ///   - seenOnboardingSynthViewCountV2:
        ///   - appManifestSchemaFormat:
        ///   - channelCanvasVariant:
        public init(
            time24: Swift.Bool? = nil,
            jumbomoji: Swift.Bool? = nil,
            locale: Swift.String? = nil,
            purchaser: Swift.Bool? = nil,
            tz: Swift.String? = nil,
            frecency: Swift.String? = nil,
            underlineLinks: Swift.Bool? = nil,
            userColors: Swift.String? = nil,
            colorNamesInList: Swift.Bool? = nil,
            emailAlerts: Swift.String? = nil,
            emailAlertsSleepUntil: Swift.Int? = nil,
            emailTips: Swift.Bool? = nil,
            emailWeekly: Swift.Bool? = nil,
            emailOffers: Swift.Bool? = nil,
            emailResearch: Swift.Bool? = nil,
            emailDeveloper: Swift.Bool? = nil,
            welcomeMessageHidden: Swift.Bool? = nil,
            searchSort: Swift.String? = nil,
            searchFileSort: Swift.String? = nil,
            searchChannelSort: Swift.String? = nil,
            searchPeopleSort: Swift.String? = nil,
            expandInlineImgs: Swift.Bool? = nil,
            expandInternalInlineImgs: Swift.Bool? = nil,
            expandSnippets: Swift.Bool? = nil,
            postsFormattingGuide: Swift.Bool? = nil,
            seenWelcome2: Swift.Bool? = nil,
            seenSsbPrompt: Swift.Bool? = nil,
            spacesNewXpBannerDismissed: Swift.Bool? = nil,
            searchOnlyMyChannels: Swift.Bool? = nil,
            searchOnlyCurrentTeam: Swift.Bool? = nil,
            searchHideMyChannels: Swift.Bool? = nil,
            searchOnlyShowOnline: Swift.Bool? = nil,
            searchHideDeactivatedUsers: Swift.Bool? = nil,
            emojiMode: Swift.String? = nil,
            emojiUse: Swift.String? = nil,
            emojiUseOrg: Swift.String? = nil,
            hasInvited: Swift.Bool? = nil,
            hasUploaded: Swift.Bool? = nil,
            hasCreatedChannel: Swift.Bool? = nil,
            hasCreatedChannelSection: Swift.Bool? = nil,
            hasSearched: Swift.Bool? = nil,
            searchExcludeChannels: Swift.String? = nil,
            messagesTheme: Swift.String? = nil,
            webappSpellcheck: Swift.Bool? = nil,
            noJoinedOverlays: Swift.Bool? = nil,
            noCreatedOverlays: Swift.Bool? = nil,
            dropboxEnabled: Swift.Bool? = nil,
            seenDomainInviteReminder: Swift.Bool? = nil,
            seenMemberInviteReminder: Swift.Bool? = nil,
            muteSounds: Swift.Bool? = nil,
            arrowHistory: Swift.Bool? = nil,
            tabUiReturnSelects: Swift.Bool? = nil,
            obeyInlineImgLimit: Swift.Bool? = nil,
            requireAt: Swift.Bool? = nil,
            ssbSpaceWindow: Swift.String? = nil,
            macSsbBounce: Swift.String? = nil,
            macSsbBullet: Swift.Bool? = nil,
            expandNonMediaAttachments: Swift.Bool? = nil,
            showTyping: Swift.Bool? = nil,
            pagekeysHandled: Swift.Bool? = nil,
            lastSnippetType: Swift.String? = nil,
            displayRealNamesOverride: Swift.Int? = nil,
            displayDisplayNames: Swift.Bool? = nil,
            enterIsSpecialInTbt: Swift.Bool? = nil,
            msgInputSendBtn: Swift.Bool? = nil,
            msgInputSendBtnAutoSet: Swift.Bool? = nil,
            msgInputStickyComposer: Swift.Bool? = nil,
            composerNux: Swift.String? = nil,
            graphicEmoticons: Swift.Bool? = nil,
            convertEmoticons: Swift.Bool? = nil,
            ssEmojis: Swift.Bool? = nil,
            seenOnboardingStart: Swift.Bool? = nil,
            onboardingCancelled: Swift.Bool? = nil,
            seenOnboardingSlackbotConversation: Swift.Bool? = nil,
            seenOnboardingChannels: Swift.Bool? = nil,
            seenOnboardingDirectMessages: Swift.Bool? = nil,
            seenOnboardingInvites: Swift.Bool? = nil,
            seenOnboardingSearch: Swift.Bool? = nil,
            seenOnboardingRecentMentions: Swift.Bool? = nil,
            seenOnboardingStarredItems: Swift.Bool? = nil,
            seenOnboardingPrivateGroups: Swift.Bool? = nil,
            seenOnboardingBanner: Swift.Bool? = nil,
            onboardingSlackbotConversationStep: Swift.Int? = nil,
            setTzAutomatically: Swift.Bool? = nil,
            suppressLinkWarning: Swift.Bool? = nil,
            suppressExternalInvitesFromComposeWarning: Swift.Bool? = nil,
            seenEmojiPackCta: Swift.Int? = nil,
            seenEmojiPackDialog: Swift.Bool? = nil,
            seenScheduleSendCoachmark: Swift.Bool? = nil,
            emojiPacksMostRecentAvailableTime: Swift.Int? = nil,
            emojiPacksClickedPickerCta: Swift.Bool? = nil,
            emojiPacksClickedPickerPostInstallCta: Swift.Bool? = nil,
            emojiPacksClickedCollectionCta: Swift.Bool? = nil,
            dndEnabled: Swift.Bool? = nil,
            dndStartHour: Swift.String? = nil,
            dndEndHour: Swift.String? = nil,
            dndBeforeMonday: Swift.String? = nil,
            dndAfterMonday: Swift.String? = nil,
            dndEnabledMonday: Swift.String? = nil,
            dndBeforeTuesday: Swift.String? = nil,
            dndAfterTuesday: Swift.String? = nil,
            dndEnabledTuesday: Swift.String? = nil,
            dndBeforeWednesday: Swift.String? = nil,
            dndAfterWednesday: Swift.String? = nil,
            dndEnabledWednesday: Swift.String? = nil,
            dndBeforeThursday: Swift.String? = nil,
            dndAfterThursday: Swift.String? = nil,
            dndEnabledThursday: Swift.String? = nil,
            dndBeforeFriday: Swift.String? = nil,
            dndAfterFriday: Swift.String? = nil,
            dndEnabledFriday: Swift.String? = nil,
            dndBeforeSaturday: Swift.String? = nil,
            dndAfterSaturday: Swift.String? = nil,
            dndEnabledSaturday: Swift.String? = nil,
            dndBeforeSunday: Swift.String? = nil,
            dndAfterSunday: Swift.String? = nil,
            dndEnabledSunday: Swift.String? = nil,
            dndDays: Swift.String? = nil,
            dndWeekdaysOffAllday: Swift.Bool? = nil,
            reminderNotificationTime: Swift.String? = nil,
            dndCustomNewBadgeSeen: Swift.Bool? = nil,
            dndNotificationScheduleNewBadgeSeen: Swift.Bool? = nil,
            notificationCenterFilters: Swift.String? = nil,
            callsSurveyLastSeen: Swift.String? = nil,
            huddleSurveyLastSeen: Swift.String? = nil,
            sidebarBehavior: Swift.String? = nil,
            channelSort: Swift.String? = nil,
            separatePrivateChannels: Swift.Bool? = nil,
            separateSharedChannels: Swift.Bool? = nil,
            sidebarTheme: Swift.String? = nil,
            sidebarThemeCustomValues: Swift.String? = nil,
            noInvitesWidgetInSidebar: Swift.Bool? = nil,
            noOmniboxInChannels: Swift.Bool? = nil,
            kKeyOmniboxAutoHideCount: Swift.Int? = nil,
            showSidebarQuickswitcherButton: Swift.Bool? = nil,
            entOrgWideChannelsSidebar: Swift.Bool? = nil,
            markMsgsReadImmediately: Swift.Bool? = nil,
            startScrollAtOldest: Swift.Bool? = nil,
            snippetEditorWrapLongLines: Swift.Bool? = nil,
            lsDisabled: Swift.Bool? = nil,
            fKeySearch: Swift.Bool? = nil,
            kKeyOmnibox: Swift.Bool? = nil,
            promptedForEmailDisabling: Swift.Bool? = nil,
            noMacelectronBanner: Swift.Bool? = nil,
            noMacssb1Banner: Swift.Bool? = nil,
            noMacssb2Banner: Swift.Bool? = nil,
            noWinssb1Banner: Swift.Bool? = nil,
            hideUserGroupInfoPane: Swift.Bool? = nil,
            mentionsExcludeAtUserGroups: Swift.Bool? = nil,
            mentionsExcludeReactions: Swift.Bool? = nil,
            privacyPolicySeen: Swift.Bool? = nil,
            enterpriseMigrationSeen: Swift.Bool? = nil,
            searchExcludeBots: Swift.Bool? = nil,
            loadLato2: Swift.Bool? = nil,
            fullerTimestamps: Swift.Bool? = nil,
            lastSeenAtChannelWarning: Swift.Int? = nil,
            emojiAutocompleteBig: Swift.Bool? = nil,
            twoFactorAuthEnabled: Swift.Bool? = nil,
            hideHexSwatch: Swift.Bool? = nil,
            showJumperScores: Swift.Bool? = nil,
            enterpriseMdmCustomMsg: Swift.String? = nil,
            clientLogsPri: Swift.String? = nil,
            flannelServerPool: Swift.String? = nil,
            mentionsExcludeAtChannels: Swift.Bool? = nil,
            confirmClearAllUnreads: Swift.Bool? = nil,
            confirmUserMarkedAway: Swift.Bool? = nil,
            boxEnabled: Swift.Bool? = nil,
            seenSingleEmojiMsg: Swift.Bool? = nil,
            confirmShCallStart: Swift.Bool? = nil,
            preferredSkinTone: Swift.String? = nil,
            showAllSkinTones: Swift.Bool? = nil,
            whatsNewRead: Swift.Int? = nil,
            helpModalOpenTimestamp: Swift.Int? = nil,
            helpModalConsultBannerDismissed: Swift.Bool? = nil,
            helpFlexpaneSlackConnectCardSeen: Swift.Bool? = nil,
            helpFlexpaneClipsCardSeen: Swift.Bool? = nil,
            helpMenuOpenTimestamp: Swift.Int? = nil,
            frecencyJumper: Swift.String? = nil,
            frecencyEntJumper: Swift.String? = nil,
            newxpSeenLastMessage: Swift.Int? = nil,
            showMemoryInstrument: Swift.Bool? = nil,
            enableUnreadView: Swift.Bool? = nil,
            seenUnreadViewCoachmark: Swift.Bool? = nil,
            seenConnectDmCoachmark: Swift.Bool? = nil,
            seenConnectSectionCoachmark: Swift.Bool? = nil,
            shouldShowConnectSection: Swift.Bool? = nil,
            enableReactEmojiPicker: Swift.Bool? = nil,
            seenCustomStatusBadge: Swift.Bool? = nil,
            seenCustomStatusCallout: Swift.Bool? = nil,
            seenCustomStatusExpirationBadge: Swift.Bool? = nil,
            usedCustomStatusKbShortcut: Swift.Bool? = nil,
            seenGuestAdminSlackbotAnnouncement: Swift.Bool? = nil,
            seenThreadsNotificationBanner: Swift.Bool? = nil,
            seenNameTaggingCoachmark: Swift.Bool? = nil,
            allUnreadsSortOrder: Swift.String? = nil,
            allUnreadsSectionFilter: Swift.String? = nil,
            seenIntlChannelNamesCoachmark: Swift.Bool? = nil,
            seenP3LocaleChangeMessageKoKr: Swift.Int? = nil,
            seenToastNewLocaleLaunch: Swift.String? = nil,
            seenToastNewLocaleLaunchTs: Swift.Int? = nil,
            seenLocaleChangeMessage: Swift.Int? = nil,
            seenJapaneseLocaleChangeMessage: Swift.Bool? = nil,
            seenSharedChannelsCoachmark: Swift.Bool? = nil,
            seenSharedChannelsOptInChangeMessage: Swift.Bool? = nil,
            hasRecentlySharedAChannel: Swift.Bool? = nil,
            seenChannelBrowserAdminCoachmark: Swift.Bool? = nil,
            seenAdministrationMenu: Swift.Bool? = nil,
            seenDraftsSectionCoachmark: Swift.Bool? = nil,
            seenEmojiUpdateOverlayCoachmark: Swift.Bool? = nil,
            seenSonicDeluxeToast: Swift.Int? = nil,
            seenWysiwygDeluxeToast: Swift.Bool? = nil,
            seenMarkdownPasteToast: Swift.Int? = nil,
            seenMarkdownPasteShortcut: Swift.Int? = nil,
            seenIaEducation: Swift.Bool? = nil,
            showIaTourRelaunch: Swift.Int? = nil,
            plainTextMode: Swift.Bool? = nil,
            showSharedChannelsEducationBanner: Swift.Bool? = nil,
            iaSlackbotSurveyTimestamp48h: Swift.Int? = nil,
            iaSlackbotSurveyTimestamp7d: Swift.Int? = nil,
            enableStreamlineView: Swift.Bool? = nil,
            enableSentView: Swift.Bool? = nil,
            allowCallsToSetCurrentStatus: Swift.Bool? = nil,
            inInteractiveMasMigrationFlow: Swift.Bool? = nil,
            sunsetInteractiveMessageViews: Swift.Int? = nil,
            shdepPromoCodeSubmitted: Swift.Bool? = nil,
            seenShdepSlackbotMessage: Swift.Bool? = nil,
            seenCallsInteractiveCoachmark: Swift.Bool? = nil,
            allowCmdTabIss: Swift.Bool? = nil,
            joinCallsDeviceSettings: Swift.String? = nil,
            callsDisconnectOnLock: Swift.Bool? = nil,
            seenWorkflowBuilderDeluxeToast: Swift.Bool? = nil,
            workflowBuilderIntroModalClickedThrough: Swift.Bool? = nil,
            workflowBuilderCoachmarks: Swift.String? = nil,
            seenGdriveCoachmark: Swift.Bool? = nil,
            seenFirstInstallCoachmark: Swift.Bool? = nil,
            seenExistingInstallCoachmark: Swift.Bool? = nil,
            seenLinkUnfurlCoachmark: Swift.Bool? = nil,
            filePickerVariant: Swift.Int? = nil,
            openQuipDocInFlexpane: Swift.Bool? = nil,
            savedSearches: Swift.String? = nil,
            huddlesVariant: Swift.Int? = nil,
            huddlesCcByDefault: Swift.Bool? = nil,
            huddlesMuteByDefault: Swift.Bool? = nil,
            huddlesGlobalMute: Swift.Bool? = nil,
            huddlesMiniPanel: Swift.Bool? = nil,
            huddlesSetStatus: Swift.Bool? = nil,
            huddlesShowShoutyRooster: Swift.Bool? = nil,
            huddlesDisconnectOnLock: Swift.Bool? = nil,
            huddlesPlayMusicWhenLast: Swift.Bool? = nil,
            huddlesAllowSmartNotif: Swift.Bool? = nil,
            huddlesReactionsPlaySound: Swift.Bool? = nil,
            huddlesReactionsReadOutLoud: Swift.Bool? = nil,
            huddlesChimeNewEndpointsCheckCompleted: Swift.Int? = nil,
            xwsSidebarVariant: Swift.Int? = nil,
            inboxViewsWorkspaceFilter: Swift.String? = nil,
            overloadedMessageEnabled: Swift.Bool? = nil,
            seenHighlightsCoachmark: Swift.Bool? = nil,
            seenHighlightsArrowsCoachmark: Swift.Bool? = nil,
            seenHighlightsWarmWelcome: Swift.Bool? = nil,
            seenNewSearchUi: Swift.Bool? = nil,
            seenChannelSearch: Swift.Bool? = nil,
            seenPeopleSearch: Swift.Bool? = nil,
            seenPeopleSearchCount: Swift.Int? = nil,
            dismissedScrollSearchTooltipCount: Swift.Int? = nil,
            lastDismissedScrollSearchTooltipTimestamp: Swift.Int? = nil,
            hasUsedQuickswitcherShortcut: Swift.Bool? = nil,
            seenQuickswitcherShortcutTipCount: Swift.Int? = nil,
            browsersDismissedChannelsLowResultsEducation: Swift.Bool? = nil,
            browsersSeenInitialChannelsEducation: Swift.Bool? = nil,
            browsersDismissedPeopleLowResultsEducation: Swift.Bool? = nil,
            browsersSeenInitialPeopleEducation: Swift.Bool? = nil,
            browsersDismissedUserGroupsLowResultsEducation: Swift.Bool? = nil,
            browsersSeenInitialUserGroupsEducation: Swift.Bool? = nil,
            browsersDismissedFilesLowResultsEducation: Swift.Bool? = nil,
            browsersSeenInitialFilesEducation: Swift.Bool? = nil,
            browsersDismissedInitialDraftsEducation: Swift.Bool? = nil,
            browsersSeenInitialDraftsEducation: Swift.Bool? = nil,
            browsersDismissedInitialActivityEducation: Swift.Bool? = nil,
            browsersSeenInitialActivityEducation: Swift.Bool? = nil,
            browsersDismissedInitialSavedEducation: Swift.Bool? = nil,
            browsersSeenInitialSavedEducation: Swift.Bool? = nil,
            seenEditMode: Swift.Bool? = nil,
            seenEditModeEdu: Swift.Bool? = nil,
            xwsDismissedEducation: Swift.Bool? = nil,
            xwsSeenEducation: Swift.Int? = nil,
            sidebarPrefDismissedTip: Swift.Bool? = nil,
            a11yDyslexic: Swift.Bool? = nil,
            a11yAnimations: Swift.Bool? = nil,
            seenKeyboardShortcutsCoachmark: Swift.Bool? = nil,
            needsInitialPasswordSet: Swift.Bool? = nil,
            lessonsEnabled: Swift.Bool? = nil,
            tractorEnabled: Swift.Bool? = nil,
            tractorExperimentGroup: Swift.String? = nil,
            openedSlackbotDm: Swift.Bool? = nil,
            newxpSeenHelpMessage: Swift.Int? = nil,
            newxpSuggestedChannels: Swift.String? = nil,
            onboardingComplete: Swift.Bool? = nil,
            welcomePlaceState: Swift.String? = nil,
            hasReceivedThreadedMessage: Swift.Bool? = nil,
            joinerNotificationsMuted: Swift.Bool? = nil,
            inviteAcceptedNotificationsMuted: Swift.Bool? = nil,
            joinerMessageSuggestionDismissed: Swift.Bool? = nil,
            dismissedFullscreenDownloadSsbPrompt: Swift.Bool? = nil,
            dismissedBannerDownloadSsbPrompt: Swift.Bool? = nil,
            onboardingState: Swift.Int? = nil,
            whocanseethisDmMpdmBadge: Swift.Bool? = nil,
            highlightWords: Swift.String? = nil,
            threadsEverything: Swift.Bool? = nil,
            noTextInNotifications: Swift.Bool? = nil,
            pushShowPreview: Swift.Bool? = nil,
            growlsEnabled: Swift.Bool? = nil,
            allChannelsLoud: Swift.Bool? = nil,
            pushDmAlert: Swift.Bool? = nil,
            pushMentionAlert: Swift.Bool? = nil,
            pushEverything: Swift.Bool? = nil,
            pushIdleWait: Swift.Int? = nil,
            pushSound: Swift.String? = nil,
            newMsgSnd: Swift.String? = nil,
            huddleInviteSound: Swift.String? = nil,
            pushLoudChannels: Swift.String? = nil,
            pushMentionChannels: Swift.String? = nil,
            pushLoudChannelsSet: Swift.String? = nil,
            loudChannels: Swift.String? = nil,
            neverChannels: Swift.String? = nil,
            loudChannelsSet: Swift.String? = nil,
            atChannelSuppressedChannels: Swift.String? = nil,
            pushAtChannelSuppressedChannels: Swift.String? = nil,
            mutedChannels: Swift.String? = nil,
            allNotificationsPrefs: Swift.String? = nil,
            growthMsgLimitApproachingCtaCount: Swift.Int? = nil,
            growthMsgLimitApproachingCtaTs: Swift.Int? = nil,
            growthMsgLimitReachedCtaCount: Swift.Int? = nil,
            growthMsgLimitReachedCtaLastTs: Swift.Int? = nil,
            growthMsgLimitLongReachedCtaCount: Swift.Int? = nil,
            growthMsgLimitLongReachedCtaLastTs: Swift.Int? = nil,
            growthMsgLimitSixtyDayBannerCtaCount: Swift.Int? = nil,
            growthMsgLimitSixtyDayBannerCtaLastTs: Swift.Int? = nil,
            growthAllBannersPrefs: Swift.String? = nil,
            analyticsUpsellCoachmarkSeen: Swift.Bool? = nil,
            seenAppSpaceCoachmark: Swift.Bool? = nil,
            seenAppSpaceTutorial: Swift.Bool? = nil,
            dismissedAppLauncherWelcome: Swift.Bool? = nil,
            dismissedAppLauncherLimit: Swift.Bool? = nil,
            dismissedAppLauncherAtlassianPromo: Swift.Bool? = nil,
            enableAppConfigRedesign: Swift.Bool? = nil,
            dismissedAppConfigRedesignCoachmark: Swift.Bool? = nil,
            dismissedAppManifestDescription: Swift.Bool? = nil,
            dismissedAppManifestCoachmark: Swift.Bool? = nil,
            seenChannelEmailTooltip: Swift.Bool? = nil,
            showEntOnboarding: Swift.Bool? = nil,
            foldersEnabled: Swift.Bool? = nil,
            folderData: Swift.String? = nil,
            seenCorporateExportAlert: Swift.Bool? = nil,
            showAutocompleteHelp: Swift.Int? = nil,
            deprecationToastLastSeen: Swift.Int? = nil,
            deprecationModalLastSeen: Swift.Int? = nil,
            deprecationBannerLastSeen: Swift.Int? = nil,
            iap1Lab: Swift.Int? = nil,
            iaTopNavTheme: Swift.String? = nil,
            iaPlatformActionsLab: Swift.Int? = nil,
            activityView: Swift.String? = nil,
            savedView: Swift.String? = nil,
            seenFloatingSidebarCoachmark: Swift.Bool? = nil,
            desktopClientIds: Swift.String? = nil,
            failoverProxyCheckCompleted: Swift.Int? = nil,
            chimeAccessCheckCompleted: Swift.Int? = nil,
            mxCalendarType: Swift.String? = nil,
            edgeUploadProxyCheckCompleted: Swift.Int? = nil,
            appSubdomainCheckCompleted: Swift.Int? = nil,
            addPromptInteracted: Swift.Bool? = nil,
            addAppsPromptDismissed: Swift.Bool? = nil,
            addChannelPromptDismissed: Swift.Bool? = nil,
            channelSidebarHideInvite: Swift.Bool? = nil,
            channelSidebarHideBrowseDmsLink: Swift.Bool? = nil,
            inProdSurveysEnabled: Swift.Bool? = nil,
            connectDmEarlyAccess: Swift.Bool? = nil,
            dismissedInstalledAppDmSuggestions: Swift.String? = nil,
            seenContextualMessageShortcutsModal: Swift.Bool? = nil,
            seenMessageNavigationEducationalToast: Swift.Bool? = nil,
            contextualMessageShortcutsModalWasSeen: Swift.Bool? = nil,
            messageNavigationToastWasSeen: Swift.Bool? = nil,
            upToBrowseKbShortcut: Swift.Bool? = nil,
            setA11yPrefsNewUser: Swift.Bool? = nil,
            a11yPlaySoundForIncomingDm: Swift.Bool? = nil,
            a11yPlaySoundForSentDm: Swift.Bool? = nil,
            a11yReadOutIncomingDm: Swift.Bool? = nil,
            a11yScreenReaderMessageLabelDateTimeFirst: Swift.Bool? = nil,
            shouldShowContextualHelpForConversationNavigation: Swift.Bool? = nil,
            shouldShowContextualHelpForJumpToConversation: Swift.Bool? = nil,
            shouldShowContextualHelpForSectionNavigation: Swift.Bool? = nil,
            shouldShowContextualHelpForThreadNavigation: Swift.Bool? = nil,
            shouldShowUnsendMessageConfirmation: Swift.Bool? = nil,
            channelSections: Swift.String? = nil,
            showQuickReactions: Swift.Bool? = nil,
            userCustomizedQuickReactionsDisplayFeature: Swift.Int? = nil,
            userCustomizedQuickReactionsHasCustomized: Swift.Bool? = nil,
            userCustomizedQuickReactionsUseFrequentlyUsedEmoji: Swift.Bool? = nil,
            reactionNotifications: Swift.String? = nil,
            hasReceivedMentionOrReaction: Swift.Bool? = nil,
            hasStarredItem: Swift.Bool? = nil,
            hasDraftedMessage: Swift.Bool? = nil,
            enableMentionsAndReactionsView: Swift.Bool? = nil,
            enableRemindersView: Swift.Bool? = nil,
            enableSavedItemsView: Swift.Bool? = nil,
            enableHqView: Swift.Bool? = nil,
            enableAllDmsView: Swift.Bool? = nil,
            enableChannelBrowserView: Swift.Bool? = nil,
            enableFileBrowserView: Swift.Bool? = nil,
            enablePeopleBrowserView: Swift.Bool? = nil,
            enableAppBrowserView: Swift.Bool? = nil,
            reachedAllDmsDisclosure: Swift.Bool? = nil,
            enableSlackConnectView: Swift.Bool? = nil,
            enableSlackConnectView2: Swift.Int? = nil,
            hasAcknowledgedShortcutSpeedbump: Swift.Bool? = nil,
            enableMediaCaptions: Swift.Bool? = nil,
            mediaPlaybackSpeed: Swift.Int? = nil,
            mediaMuted: Swift.Bool? = nil,
            mediaVolume: Swift.Int? = nil,
            dismissedConnectAutoApprovalModal: Swift.String? = nil,
            tasksView: Swift.String? = nil,
            showSidebarAvatars: Swift.Bool? = nil,
            hasDismissedGoogleDirectoryCoachmark: Swift.Bool? = nil,
            seenScPageBanner: Swift.Bool? = nil,
            seenScMenuCoachmark: Swift.Bool? = nil,
            seenScPage: Swift.Bool? = nil,
            dismissedScdmEducation: Swift.Bool? = nil,
            seenBookmarksIntro: Swift.Bool? = nil,
            scdmTrialOfferBanner: Swift.String? = nil,
            identityLinksPrefs: Swift.String? = nil,
            identityLinksGlobalPrefs: Swift.String? = nil,
            seenSectionsUnreadsOnlyPromptCount: Swift.Int? = nil,
            lastSeenSectionsUnreadsOnlyPromptTimestamp: Swift.Int? = nil,
            notificationsView: Swift.String? = nil,
            progressiveDisclosureState: Swift.String? = nil,
            suggestionsRequestId: Swift.String? = nil,
            allowedUnfurlSenders: Swift.String? = nil,
            iaDetailsCoachmarkSeen: Swift.Bool? = nil,
            hideExternalMembersSharingSpeedBump: Swift.Bool? = nil,
            whoCanShareContactCard: Swift.String? = nil,
            slackConnectInviteShouldBadgeSidebar: Swift.Bool? = nil,
            phcDismissed: Swift.String? = nil,
            dismissedGovSlackFirstTimePopup: Swift.Bool? = nil,
            mobileChannelListSort: Swift.String? = nil,
            userExpectationsSurveyLastTriggerAttempt: Swift.Int? = nil,
            localesEnabled: Components.Schemas.LocalesEnabled? = nil,
            phcViewed: Swift.String? = nil,
            seenA11yPrefSetupCoachmark: Swift.Bool? = nil,
            enableFileBrowserViewForDocs: Swift.Bool? = nil,
            enableShortcutsView: Swift.Bool? = nil,
            showGovSlackContextBarBanner: Swift.Bool? = nil,
            whoCanSeeAccountBySearchingEmail: Swift.String? = nil,
            contextualHelpResetCount: Swift.Int? = nil,
            mobileChannelListShowAllDms: Swift.Bool? = nil,
            enableQuipFileBrowserView: Swift.Bool? = nil,
            a11yPlaySoundForIncomingDmChoice: Swift.String? = nil,
            a11yPlaySoundForSentDmChoice: Swift.String? = nil,
            onboardingTipOptOut: Swift.Bool? = nil,
            seenOnboardingSynthView: Swift.Bool? = nil,
            enableDraftsView: Swift.Bool? = nil,
            enableScheduledView: Swift.Bool? = nil,
            seenSentPageInSidebar: Swift.Bool? = nil,
            firstSeenSentPageInSidebar: Swift.Int? = nil,
            seenNewBadgeInMoreMenuSidebar: Swift.Bool? = nil,
            firstSeenNewBadgeInMoreMenuSidebar: Swift.Int? = nil,
            seenOnboardingSynthViewCount: Swift.Int? = nil,
            synthViewPrefs: Swift.String? = nil,
            clipsFeedbackSurveyLastTriggerAttempt: Swift.Int? = nil,
            enableLaterView: Swift.Bool? = nil,
            hasJoinedHuddle: Swift.Bool? = nil,
            hasSentTenMessages: Swift.Int? = nil,
            suppressThreadMentionWarning: Swift.Bool? = nil,
            hiddenUsers: Swift.String? = nil,
            dismissedSentPageEducation: Swift.Bool? = nil,
            seenOnboardingSynthViewV2: Swift.Bool? = nil,
            clickedCloseOnboardingSynthViewBanner: Swift.Bool? = nil,
            seenOnboardingSynthViewCountV2: Swift.Int? = nil,
            appManifestSchemaFormat: Swift.String? = nil,
            channelCanvasVariant: Swift.Int? = nil
        ) {
            self.time24 = time24
            self.jumbomoji = jumbomoji
            self.locale = locale
            self.purchaser = purchaser
            self.tz = tz
            self.frecency = frecency
            self.underlineLinks = underlineLinks
            self.userColors = userColors
            self.colorNamesInList = colorNamesInList
            self.emailAlerts = emailAlerts
            self.emailAlertsSleepUntil = emailAlertsSleepUntil
            self.emailTips = emailTips
            self.emailWeekly = emailWeekly
            self.emailOffers = emailOffers
            self.emailResearch = emailResearch
            self.emailDeveloper = emailDeveloper
            self.welcomeMessageHidden = welcomeMessageHidden
            self.searchSort = searchSort
            self.searchFileSort = searchFileSort
            self.searchChannelSort = searchChannelSort
            self.searchPeopleSort = searchPeopleSort
            self.expandInlineImgs = expandInlineImgs
            self.expandInternalInlineImgs = expandInternalInlineImgs
            self.expandSnippets = expandSnippets
            self.postsFormattingGuide = postsFormattingGuide
            self.seenWelcome2 = seenWelcome2
            self.seenSsbPrompt = seenSsbPrompt
            self.spacesNewXpBannerDismissed = spacesNewXpBannerDismissed
            self.searchOnlyMyChannels = searchOnlyMyChannels
            self.searchOnlyCurrentTeam = searchOnlyCurrentTeam
            self.searchHideMyChannels = searchHideMyChannels
            self.searchOnlyShowOnline = searchOnlyShowOnline
            self.searchHideDeactivatedUsers = searchHideDeactivatedUsers
            self.emojiMode = emojiMode
            self.emojiUse = emojiUse
            self.emojiUseOrg = emojiUseOrg
            self.hasInvited = hasInvited
            self.hasUploaded = hasUploaded
            self.hasCreatedChannel = hasCreatedChannel
            self.hasCreatedChannelSection = hasCreatedChannelSection
            self.hasSearched = hasSearched
            self.searchExcludeChannels = searchExcludeChannels
            self.messagesTheme = messagesTheme
            self.webappSpellcheck = webappSpellcheck
            self.noJoinedOverlays = noJoinedOverlays
            self.noCreatedOverlays = noCreatedOverlays
            self.dropboxEnabled = dropboxEnabled
            self.seenDomainInviteReminder = seenDomainInviteReminder
            self.seenMemberInviteReminder = seenMemberInviteReminder
            self.muteSounds = muteSounds
            self.arrowHistory = arrowHistory
            self.tabUiReturnSelects = tabUiReturnSelects
            self.obeyInlineImgLimit = obeyInlineImgLimit
            self.requireAt = requireAt
            self.ssbSpaceWindow = ssbSpaceWindow
            self.macSsbBounce = macSsbBounce
            self.macSsbBullet = macSsbBullet
            self.expandNonMediaAttachments = expandNonMediaAttachments
            self.showTyping = showTyping
            self.pagekeysHandled = pagekeysHandled
            self.lastSnippetType = lastSnippetType
            self.displayRealNamesOverride = displayRealNamesOverride
            self.displayDisplayNames = displayDisplayNames
            self.enterIsSpecialInTbt = enterIsSpecialInTbt
            self.msgInputSendBtn = msgInputSendBtn
            self.msgInputSendBtnAutoSet = msgInputSendBtnAutoSet
            self.msgInputStickyComposer = msgInputStickyComposer
            self.composerNux = composerNux
            self.graphicEmoticons = graphicEmoticons
            self.convertEmoticons = convertEmoticons
            self.ssEmojis = ssEmojis
            self.seenOnboardingStart = seenOnboardingStart
            self.onboardingCancelled = onboardingCancelled
            self.seenOnboardingSlackbotConversation = seenOnboardingSlackbotConversation
            self.seenOnboardingChannels = seenOnboardingChannels
            self.seenOnboardingDirectMessages = seenOnboardingDirectMessages
            self.seenOnboardingInvites = seenOnboardingInvites
            self.seenOnboardingSearch = seenOnboardingSearch
            self.seenOnboardingRecentMentions = seenOnboardingRecentMentions
            self.seenOnboardingStarredItems = seenOnboardingStarredItems
            self.seenOnboardingPrivateGroups = seenOnboardingPrivateGroups
            self.seenOnboardingBanner = seenOnboardingBanner
            self.onboardingSlackbotConversationStep = onboardingSlackbotConversationStep
            self.setTzAutomatically = setTzAutomatically
            self.suppressLinkWarning = suppressLinkWarning
            self.suppressExternalInvitesFromComposeWarning = suppressExternalInvitesFromComposeWarning
            self.seenEmojiPackCta = seenEmojiPackCta
            self.seenEmojiPackDialog = seenEmojiPackDialog
            self.seenScheduleSendCoachmark = seenScheduleSendCoachmark
            self.emojiPacksMostRecentAvailableTime = emojiPacksMostRecentAvailableTime
            self.emojiPacksClickedPickerCta = emojiPacksClickedPickerCta
            self.emojiPacksClickedPickerPostInstallCta = emojiPacksClickedPickerPostInstallCta
            self.emojiPacksClickedCollectionCta = emojiPacksClickedCollectionCta
            self.dndEnabled = dndEnabled
            self.dndStartHour = dndStartHour
            self.dndEndHour = dndEndHour
            self.dndBeforeMonday = dndBeforeMonday
            self.dndAfterMonday = dndAfterMonday
            self.dndEnabledMonday = dndEnabledMonday
            self.dndBeforeTuesday = dndBeforeTuesday
            self.dndAfterTuesday = dndAfterTuesday
            self.dndEnabledTuesday = dndEnabledTuesday
            self.dndBeforeWednesday = dndBeforeWednesday
            self.dndAfterWednesday = dndAfterWednesday
            self.dndEnabledWednesday = dndEnabledWednesday
            self.dndBeforeThursday = dndBeforeThursday
            self.dndAfterThursday = dndAfterThursday
            self.dndEnabledThursday = dndEnabledThursday
            self.dndBeforeFriday = dndBeforeFriday
            self.dndAfterFriday = dndAfterFriday
            self.dndEnabledFriday = dndEnabledFriday
            self.dndBeforeSaturday = dndBeforeSaturday
            self.dndAfterSaturday = dndAfterSaturday
            self.dndEnabledSaturday = dndEnabledSaturday
            self.dndBeforeSunday = dndBeforeSunday
            self.dndAfterSunday = dndAfterSunday
            self.dndEnabledSunday = dndEnabledSunday
            self.dndDays = dndDays
            self.dndWeekdaysOffAllday = dndWeekdaysOffAllday
            self.reminderNotificationTime = reminderNotificationTime
            self.dndCustomNewBadgeSeen = dndCustomNewBadgeSeen
            self.dndNotificationScheduleNewBadgeSeen = dndNotificationScheduleNewBadgeSeen
            self.notificationCenterFilters = notificationCenterFilters
            self.callsSurveyLastSeen = callsSurveyLastSeen
            self.huddleSurveyLastSeen = huddleSurveyLastSeen
            self.sidebarBehavior = sidebarBehavior
            self.channelSort = channelSort
            self.separatePrivateChannels = separatePrivateChannels
            self.separateSharedChannels = separateSharedChannels
            self.sidebarTheme = sidebarTheme
            self.sidebarThemeCustomValues = sidebarThemeCustomValues
            self.noInvitesWidgetInSidebar = noInvitesWidgetInSidebar
            self.noOmniboxInChannels = noOmniboxInChannels
            self.kKeyOmniboxAutoHideCount = kKeyOmniboxAutoHideCount
            self.showSidebarQuickswitcherButton = showSidebarQuickswitcherButton
            self.entOrgWideChannelsSidebar = entOrgWideChannelsSidebar
            self.markMsgsReadImmediately = markMsgsReadImmediately
            self.startScrollAtOldest = startScrollAtOldest
            self.snippetEditorWrapLongLines = snippetEditorWrapLongLines
            self.lsDisabled = lsDisabled
            self.fKeySearch = fKeySearch
            self.kKeyOmnibox = kKeyOmnibox
            self.promptedForEmailDisabling = promptedForEmailDisabling
            self.noMacelectronBanner = noMacelectronBanner
            self.noMacssb1Banner = noMacssb1Banner
            self.noMacssb2Banner = noMacssb2Banner
            self.noWinssb1Banner = noWinssb1Banner
            self.hideUserGroupInfoPane = hideUserGroupInfoPane
            self.mentionsExcludeAtUserGroups = mentionsExcludeAtUserGroups
            self.mentionsExcludeReactions = mentionsExcludeReactions
            self.privacyPolicySeen = privacyPolicySeen
            self.enterpriseMigrationSeen = enterpriseMigrationSeen
            self.searchExcludeBots = searchExcludeBots
            self.loadLato2 = loadLato2
            self.fullerTimestamps = fullerTimestamps
            self.lastSeenAtChannelWarning = lastSeenAtChannelWarning
            self.emojiAutocompleteBig = emojiAutocompleteBig
            self.twoFactorAuthEnabled = twoFactorAuthEnabled
            self.hideHexSwatch = hideHexSwatch
            self.showJumperScores = showJumperScores
            self.enterpriseMdmCustomMsg = enterpriseMdmCustomMsg
            self.clientLogsPri = clientLogsPri
            self.flannelServerPool = flannelServerPool
            self.mentionsExcludeAtChannels = mentionsExcludeAtChannels
            self.confirmClearAllUnreads = confirmClearAllUnreads
            self.confirmUserMarkedAway = confirmUserMarkedAway
            self.boxEnabled = boxEnabled
            self.seenSingleEmojiMsg = seenSingleEmojiMsg
            self.confirmShCallStart = confirmShCallStart
            self.preferredSkinTone = preferredSkinTone
            self.showAllSkinTones = showAllSkinTones
            self.whatsNewRead = whatsNewRead
            self.helpModalOpenTimestamp = helpModalOpenTimestamp
            self.helpModalConsultBannerDismissed = helpModalConsultBannerDismissed
            self.helpFlexpaneSlackConnectCardSeen = helpFlexpaneSlackConnectCardSeen
            self.helpFlexpaneClipsCardSeen = helpFlexpaneClipsCardSeen
            self.helpMenuOpenTimestamp = helpMenuOpenTimestamp
            self.frecencyJumper = frecencyJumper
            self.frecencyEntJumper = frecencyEntJumper
            self.newxpSeenLastMessage = newxpSeenLastMessage
            self.showMemoryInstrument = showMemoryInstrument
            self.enableUnreadView = enableUnreadView
            self.seenUnreadViewCoachmark = seenUnreadViewCoachmark
            self.seenConnectDmCoachmark = seenConnectDmCoachmark
            self.seenConnectSectionCoachmark = seenConnectSectionCoachmark
            self.shouldShowConnectSection = shouldShowConnectSection
            self.enableReactEmojiPicker = enableReactEmojiPicker
            self.seenCustomStatusBadge = seenCustomStatusBadge
            self.seenCustomStatusCallout = seenCustomStatusCallout
            self.seenCustomStatusExpirationBadge = seenCustomStatusExpirationBadge
            self.usedCustomStatusKbShortcut = usedCustomStatusKbShortcut
            self.seenGuestAdminSlackbotAnnouncement = seenGuestAdminSlackbotAnnouncement
            self.seenThreadsNotificationBanner = seenThreadsNotificationBanner
            self.seenNameTaggingCoachmark = seenNameTaggingCoachmark
            self.allUnreadsSortOrder = allUnreadsSortOrder
            self.allUnreadsSectionFilter = allUnreadsSectionFilter
            self.seenIntlChannelNamesCoachmark = seenIntlChannelNamesCoachmark
            self.seenP3LocaleChangeMessageKoKr = seenP3LocaleChangeMessageKoKr
            self.seenToastNewLocaleLaunch = seenToastNewLocaleLaunch
            self.seenToastNewLocaleLaunchTs = seenToastNewLocaleLaunchTs
            self.seenLocaleChangeMessage = seenLocaleChangeMessage
            self.seenJapaneseLocaleChangeMessage = seenJapaneseLocaleChangeMessage
            self.seenSharedChannelsCoachmark = seenSharedChannelsCoachmark
            self.seenSharedChannelsOptInChangeMessage = seenSharedChannelsOptInChangeMessage
            self.hasRecentlySharedAChannel = hasRecentlySharedAChannel
            self.seenChannelBrowserAdminCoachmark = seenChannelBrowserAdminCoachmark
            self.seenAdministrationMenu = seenAdministrationMenu
            self.seenDraftsSectionCoachmark = seenDraftsSectionCoachmark
            self.seenEmojiUpdateOverlayCoachmark = seenEmojiUpdateOverlayCoachmark
            self.seenSonicDeluxeToast = seenSonicDeluxeToast
            self.seenWysiwygDeluxeToast = seenWysiwygDeluxeToast
            self.seenMarkdownPasteToast = seenMarkdownPasteToast
            self.seenMarkdownPasteShortcut = seenMarkdownPasteShortcut
            self.seenIaEducation = seenIaEducation
            self.showIaTourRelaunch = showIaTourRelaunch
            self.plainTextMode = plainTextMode
            self.showSharedChannelsEducationBanner = showSharedChannelsEducationBanner
            self.iaSlackbotSurveyTimestamp48h = iaSlackbotSurveyTimestamp48h
            self.iaSlackbotSurveyTimestamp7d = iaSlackbotSurveyTimestamp7d
            self.enableStreamlineView = enableStreamlineView
            self.enableSentView = enableSentView
            self.allowCallsToSetCurrentStatus = allowCallsToSetCurrentStatus
            self.inInteractiveMasMigrationFlow = inInteractiveMasMigrationFlow
            self.sunsetInteractiveMessageViews = sunsetInteractiveMessageViews
            self.shdepPromoCodeSubmitted = shdepPromoCodeSubmitted
            self.seenShdepSlackbotMessage = seenShdepSlackbotMessage
            self.seenCallsInteractiveCoachmark = seenCallsInteractiveCoachmark
            self.allowCmdTabIss = allowCmdTabIss
            self.joinCallsDeviceSettings = joinCallsDeviceSettings
            self.callsDisconnectOnLock = callsDisconnectOnLock
            self.seenWorkflowBuilderDeluxeToast = seenWorkflowBuilderDeluxeToast
            self.workflowBuilderIntroModalClickedThrough = workflowBuilderIntroModalClickedThrough
            self.workflowBuilderCoachmarks = workflowBuilderCoachmarks
            self.seenGdriveCoachmark = seenGdriveCoachmark
            self.seenFirstInstallCoachmark = seenFirstInstallCoachmark
            self.seenExistingInstallCoachmark = seenExistingInstallCoachmark
            self.seenLinkUnfurlCoachmark = seenLinkUnfurlCoachmark
            self.filePickerVariant = filePickerVariant
            self.openQuipDocInFlexpane = openQuipDocInFlexpane
            self.savedSearches = savedSearches
            self.huddlesVariant = huddlesVariant
            self.huddlesCcByDefault = huddlesCcByDefault
            self.huddlesMuteByDefault = huddlesMuteByDefault
            self.huddlesGlobalMute = huddlesGlobalMute
            self.huddlesMiniPanel = huddlesMiniPanel
            self.huddlesSetStatus = huddlesSetStatus
            self.huddlesShowShoutyRooster = huddlesShowShoutyRooster
            self.huddlesDisconnectOnLock = huddlesDisconnectOnLock
            self.huddlesPlayMusicWhenLast = huddlesPlayMusicWhenLast
            self.huddlesAllowSmartNotif = huddlesAllowSmartNotif
            self.huddlesReactionsPlaySound = huddlesReactionsPlaySound
            self.huddlesReactionsReadOutLoud = huddlesReactionsReadOutLoud
            self.huddlesChimeNewEndpointsCheckCompleted = huddlesChimeNewEndpointsCheckCompleted
            self.xwsSidebarVariant = xwsSidebarVariant
            self.inboxViewsWorkspaceFilter = inboxViewsWorkspaceFilter
            self.overloadedMessageEnabled = overloadedMessageEnabled
            self.seenHighlightsCoachmark = seenHighlightsCoachmark
            self.seenHighlightsArrowsCoachmark = seenHighlightsArrowsCoachmark
            self.seenHighlightsWarmWelcome = seenHighlightsWarmWelcome
            self.seenNewSearchUi = seenNewSearchUi
            self.seenChannelSearch = seenChannelSearch
            self.seenPeopleSearch = seenPeopleSearch
            self.seenPeopleSearchCount = seenPeopleSearchCount
            self.dismissedScrollSearchTooltipCount = dismissedScrollSearchTooltipCount
            self.lastDismissedScrollSearchTooltipTimestamp = lastDismissedScrollSearchTooltipTimestamp
            self.hasUsedQuickswitcherShortcut = hasUsedQuickswitcherShortcut
            self.seenQuickswitcherShortcutTipCount = seenQuickswitcherShortcutTipCount
            self.browsersDismissedChannelsLowResultsEducation = browsersDismissedChannelsLowResultsEducation
            self.browsersSeenInitialChannelsEducation = browsersSeenInitialChannelsEducation
            self.browsersDismissedPeopleLowResultsEducation = browsersDismissedPeopleLowResultsEducation
            self.browsersSeenInitialPeopleEducation = browsersSeenInitialPeopleEducation
            self.browsersDismissedUserGroupsLowResultsEducation = browsersDismissedUserGroupsLowResultsEducation
            self.browsersSeenInitialUserGroupsEducation = browsersSeenInitialUserGroupsEducation
            self.browsersDismissedFilesLowResultsEducation = browsersDismissedFilesLowResultsEducation
            self.browsersSeenInitialFilesEducation = browsersSeenInitialFilesEducation
            self.browsersDismissedInitialDraftsEducation = browsersDismissedInitialDraftsEducation
            self.browsersSeenInitialDraftsEducation = browsersSeenInitialDraftsEducation
            self.browsersDismissedInitialActivityEducation = browsersDismissedInitialActivityEducation
            self.browsersSeenInitialActivityEducation = browsersSeenInitialActivityEducation
            self.browsersDismissedInitialSavedEducation = browsersDismissedInitialSavedEducation
            self.browsersSeenInitialSavedEducation = browsersSeenInitialSavedEducation
            self.seenEditMode = seenEditMode
            self.seenEditModeEdu = seenEditModeEdu
            self.xwsDismissedEducation = xwsDismissedEducation
            self.xwsSeenEducation = xwsSeenEducation
            self.sidebarPrefDismissedTip = sidebarPrefDismissedTip
            self.a11yDyslexic = a11yDyslexic
            self.a11yAnimations = a11yAnimations
            self.seenKeyboardShortcutsCoachmark = seenKeyboardShortcutsCoachmark
            self.needsInitialPasswordSet = needsInitialPasswordSet
            self.lessonsEnabled = lessonsEnabled
            self.tractorEnabled = tractorEnabled
            self.tractorExperimentGroup = tractorExperimentGroup
            self.openedSlackbotDm = openedSlackbotDm
            self.newxpSeenHelpMessage = newxpSeenHelpMessage
            self.newxpSuggestedChannels = newxpSuggestedChannels
            self.onboardingComplete = onboardingComplete
            self.welcomePlaceState = welcomePlaceState
            self.hasReceivedThreadedMessage = hasReceivedThreadedMessage
            self.joinerNotificationsMuted = joinerNotificationsMuted
            self.inviteAcceptedNotificationsMuted = inviteAcceptedNotificationsMuted
            self.joinerMessageSuggestionDismissed = joinerMessageSuggestionDismissed
            self.dismissedFullscreenDownloadSsbPrompt = dismissedFullscreenDownloadSsbPrompt
            self.dismissedBannerDownloadSsbPrompt = dismissedBannerDownloadSsbPrompt
            self.onboardingState = onboardingState
            self.whocanseethisDmMpdmBadge = whocanseethisDmMpdmBadge
            self.highlightWords = highlightWords
            self.threadsEverything = threadsEverything
            self.noTextInNotifications = noTextInNotifications
            self.pushShowPreview = pushShowPreview
            self.growlsEnabled = growlsEnabled
            self.allChannelsLoud = allChannelsLoud
            self.pushDmAlert = pushDmAlert
            self.pushMentionAlert = pushMentionAlert
            self.pushEverything = pushEverything
            self.pushIdleWait = pushIdleWait
            self.pushSound = pushSound
            self.newMsgSnd = newMsgSnd
            self.huddleInviteSound = huddleInviteSound
            self.pushLoudChannels = pushLoudChannels
            self.pushMentionChannels = pushMentionChannels
            self.pushLoudChannelsSet = pushLoudChannelsSet
            self.loudChannels = loudChannels
            self.neverChannels = neverChannels
            self.loudChannelsSet = loudChannelsSet
            self.atChannelSuppressedChannels = atChannelSuppressedChannels
            self.pushAtChannelSuppressedChannels = pushAtChannelSuppressedChannels
            self.mutedChannels = mutedChannels
            self.allNotificationsPrefs = allNotificationsPrefs
            self.growthMsgLimitApproachingCtaCount = growthMsgLimitApproachingCtaCount
            self.growthMsgLimitApproachingCtaTs = growthMsgLimitApproachingCtaTs
            self.growthMsgLimitReachedCtaCount = growthMsgLimitReachedCtaCount
            self.growthMsgLimitReachedCtaLastTs = growthMsgLimitReachedCtaLastTs
            self.growthMsgLimitLongReachedCtaCount = growthMsgLimitLongReachedCtaCount
            self.growthMsgLimitLongReachedCtaLastTs = growthMsgLimitLongReachedCtaLastTs
            self.growthMsgLimitSixtyDayBannerCtaCount = growthMsgLimitSixtyDayBannerCtaCount
            self.growthMsgLimitSixtyDayBannerCtaLastTs = growthMsgLimitSixtyDayBannerCtaLastTs
            self.growthAllBannersPrefs = growthAllBannersPrefs
            self.analyticsUpsellCoachmarkSeen = analyticsUpsellCoachmarkSeen
            self.seenAppSpaceCoachmark = seenAppSpaceCoachmark
            self.seenAppSpaceTutorial = seenAppSpaceTutorial
            self.dismissedAppLauncherWelcome = dismissedAppLauncherWelcome
            self.dismissedAppLauncherLimit = dismissedAppLauncherLimit
            self.dismissedAppLauncherAtlassianPromo = dismissedAppLauncherAtlassianPromo
            self.enableAppConfigRedesign = enableAppConfigRedesign
            self.dismissedAppConfigRedesignCoachmark = dismissedAppConfigRedesignCoachmark
            self.dismissedAppManifestDescription = dismissedAppManifestDescription
            self.dismissedAppManifestCoachmark = dismissedAppManifestCoachmark
            self.seenChannelEmailTooltip = seenChannelEmailTooltip
            self.showEntOnboarding = showEntOnboarding
            self.foldersEnabled = foldersEnabled
            self.folderData = folderData
            self.seenCorporateExportAlert = seenCorporateExportAlert
            self.showAutocompleteHelp = showAutocompleteHelp
            self.deprecationToastLastSeen = deprecationToastLastSeen
            self.deprecationModalLastSeen = deprecationModalLastSeen
            self.deprecationBannerLastSeen = deprecationBannerLastSeen
            self.iap1Lab = iap1Lab
            self.iaTopNavTheme = iaTopNavTheme
            self.iaPlatformActionsLab = iaPlatformActionsLab
            self.activityView = activityView
            self.savedView = savedView
            self.seenFloatingSidebarCoachmark = seenFloatingSidebarCoachmark
            self.desktopClientIds = desktopClientIds
            self.failoverProxyCheckCompleted = failoverProxyCheckCompleted
            self.chimeAccessCheckCompleted = chimeAccessCheckCompleted
            self.mxCalendarType = mxCalendarType
            self.edgeUploadProxyCheckCompleted = edgeUploadProxyCheckCompleted
            self.appSubdomainCheckCompleted = appSubdomainCheckCompleted
            self.addPromptInteracted = addPromptInteracted
            self.addAppsPromptDismissed = addAppsPromptDismissed
            self.addChannelPromptDismissed = addChannelPromptDismissed
            self.channelSidebarHideInvite = channelSidebarHideInvite
            self.channelSidebarHideBrowseDmsLink = channelSidebarHideBrowseDmsLink
            self.inProdSurveysEnabled = inProdSurveysEnabled
            self.connectDmEarlyAccess = connectDmEarlyAccess
            self.dismissedInstalledAppDmSuggestions = dismissedInstalledAppDmSuggestions
            self.seenContextualMessageShortcutsModal = seenContextualMessageShortcutsModal
            self.seenMessageNavigationEducationalToast = seenMessageNavigationEducationalToast
            self.contextualMessageShortcutsModalWasSeen = contextualMessageShortcutsModalWasSeen
            self.messageNavigationToastWasSeen = messageNavigationToastWasSeen
            self.upToBrowseKbShortcut = upToBrowseKbShortcut
            self.setA11yPrefsNewUser = setA11yPrefsNewUser
            self.a11yPlaySoundForIncomingDm = a11yPlaySoundForIncomingDm
            self.a11yPlaySoundForSentDm = a11yPlaySoundForSentDm
            self.a11yReadOutIncomingDm = a11yReadOutIncomingDm
            self.a11yScreenReaderMessageLabelDateTimeFirst = a11yScreenReaderMessageLabelDateTimeFirst
            self.shouldShowContextualHelpForConversationNavigation = shouldShowContextualHelpForConversationNavigation
            self.shouldShowContextualHelpForJumpToConversation = shouldShowContextualHelpForJumpToConversation
            self.shouldShowContextualHelpForSectionNavigation = shouldShowContextualHelpForSectionNavigation
            self.shouldShowContextualHelpForThreadNavigation = shouldShowContextualHelpForThreadNavigation
            self.shouldShowUnsendMessageConfirmation = shouldShowUnsendMessageConfirmation
            self.channelSections = channelSections
            self.showQuickReactions = showQuickReactions
            self.userCustomizedQuickReactionsDisplayFeature = userCustomizedQuickReactionsDisplayFeature
            self.userCustomizedQuickReactionsHasCustomized = userCustomizedQuickReactionsHasCustomized
            self.userCustomizedQuickReactionsUseFrequentlyUsedEmoji = userCustomizedQuickReactionsUseFrequentlyUsedEmoji
            self.reactionNotifications = reactionNotifications
            self.hasReceivedMentionOrReaction = hasReceivedMentionOrReaction
            self.hasStarredItem = hasStarredItem
            self.hasDraftedMessage = hasDraftedMessage
            self.enableMentionsAndReactionsView = enableMentionsAndReactionsView
            self.enableRemindersView = enableRemindersView
            self.enableSavedItemsView = enableSavedItemsView
            self.enableHqView = enableHqView
            self.enableAllDmsView = enableAllDmsView
            self.enableChannelBrowserView = enableChannelBrowserView
            self.enableFileBrowserView = enableFileBrowserView
            self.enablePeopleBrowserView = enablePeopleBrowserView
            self.enableAppBrowserView = enableAppBrowserView
            self.reachedAllDmsDisclosure = reachedAllDmsDisclosure
            self.enableSlackConnectView = enableSlackConnectView
            self.enableSlackConnectView2 = enableSlackConnectView2
            self.hasAcknowledgedShortcutSpeedbump = hasAcknowledgedShortcutSpeedbump
            self.enableMediaCaptions = enableMediaCaptions
            self.mediaPlaybackSpeed = mediaPlaybackSpeed
            self.mediaMuted = mediaMuted
            self.mediaVolume = mediaVolume
            self.dismissedConnectAutoApprovalModal = dismissedConnectAutoApprovalModal
            self.tasksView = tasksView
            self.showSidebarAvatars = showSidebarAvatars
            self.hasDismissedGoogleDirectoryCoachmark = hasDismissedGoogleDirectoryCoachmark
            self.seenScPageBanner = seenScPageBanner
            self.seenScMenuCoachmark = seenScMenuCoachmark
            self.seenScPage = seenScPage
            self.dismissedScdmEducation = dismissedScdmEducation
            self.seenBookmarksIntro = seenBookmarksIntro
            self.scdmTrialOfferBanner = scdmTrialOfferBanner
            self.identityLinksPrefs = identityLinksPrefs
            self.identityLinksGlobalPrefs = identityLinksGlobalPrefs
            self.seenSectionsUnreadsOnlyPromptCount = seenSectionsUnreadsOnlyPromptCount
            self.lastSeenSectionsUnreadsOnlyPromptTimestamp = lastSeenSectionsUnreadsOnlyPromptTimestamp
            self.notificationsView = notificationsView
            self.progressiveDisclosureState = progressiveDisclosureState
            self.suggestionsRequestId = suggestionsRequestId
            self.allowedUnfurlSenders = allowedUnfurlSenders
            self.iaDetailsCoachmarkSeen = iaDetailsCoachmarkSeen
            self.hideExternalMembersSharingSpeedBump = hideExternalMembersSharingSpeedBump
            self.whoCanShareContactCard = whoCanShareContactCard
            self.slackConnectInviteShouldBadgeSidebar = slackConnectInviteShouldBadgeSidebar
            self.phcDismissed = phcDismissed
            self.dismissedGovSlackFirstTimePopup = dismissedGovSlackFirstTimePopup
            self.mobileChannelListSort = mobileChannelListSort
            self.userExpectationsSurveyLastTriggerAttempt = userExpectationsSurveyLastTriggerAttempt
            self.localesEnabled = localesEnabled
            self.phcViewed = phcViewed
            self.seenA11yPrefSetupCoachmark = seenA11yPrefSetupCoachmark
            self.enableFileBrowserViewForDocs = enableFileBrowserViewForDocs
            self.enableShortcutsView = enableShortcutsView
            self.showGovSlackContextBarBanner = showGovSlackContextBarBanner
            self.whoCanSeeAccountBySearchingEmail = whoCanSeeAccountBySearchingEmail
            self.contextualHelpResetCount = contextualHelpResetCount
            self.mobileChannelListShowAllDms = mobileChannelListShowAllDms
            self.enableQuipFileBrowserView = enableQuipFileBrowserView
            self.a11yPlaySoundForIncomingDmChoice = a11yPlaySoundForIncomingDmChoice
            self.a11yPlaySoundForSentDmChoice = a11yPlaySoundForSentDmChoice
            self.onboardingTipOptOut = onboardingTipOptOut
            self.seenOnboardingSynthView = seenOnboardingSynthView
            self.enableDraftsView = enableDraftsView
            self.enableScheduledView = enableScheduledView
            self.seenSentPageInSidebar = seenSentPageInSidebar
            self.firstSeenSentPageInSidebar = firstSeenSentPageInSidebar
            self.seenNewBadgeInMoreMenuSidebar = seenNewBadgeInMoreMenuSidebar
            self.firstSeenNewBadgeInMoreMenuSidebar = firstSeenNewBadgeInMoreMenuSidebar
            self.seenOnboardingSynthViewCount = seenOnboardingSynthViewCount
            self.synthViewPrefs = synthViewPrefs
            self.clipsFeedbackSurveyLastTriggerAttempt = clipsFeedbackSurveyLastTriggerAttempt
            self.enableLaterView = enableLaterView
            self.hasJoinedHuddle = hasJoinedHuddle
            self.hasSentTenMessages = hasSentTenMessages
            self.suppressThreadMentionWarning = suppressThreadMentionWarning
            self.hiddenUsers = hiddenUsers
            self.dismissedSentPageEducation = dismissedSentPageEducation
            self.seenOnboardingSynthViewV2 = seenOnboardingSynthViewV2
            self.clickedCloseOnboardingSynthViewBanner = clickedCloseOnboardingSynthViewBanner
            self.seenOnboardingSynthViewCountV2 = seenOnboardingSynthViewCountV2
            self.appManifestSchemaFormat = appManifestSchemaFormat
            self.channelCanvasVariant = channelCanvasVariant
        }
    }
    /// - Remark: Generated from `#/components/schemas/LocalesEnabled`.
    public struct LocalesEnabled: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/de-DE`.
        public var deDE: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/en-GB`.
        public var enGB: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/en-US`.
        public var enUS: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/es-ES`.
        public var esES: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/es-LA`.
        public var esLA: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/fr-FR`.
        public var frFR: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/it-IT`.
        public var itIT: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/pt-BR`.
        public var ptBR: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/ru-RU`.
        public var ruRU: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/ja-JP`.
        public var jaJP: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/zh-CN`.
        public var zhCN: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/zh-TW`.
        public var zhTW: Swift.String?
        /// - Remark: Generated from `#/components/schemas/LocalesEnabled/ko-KR`.
        public var koKR: Swift.String?
        /// Creates a new `LocalesEnabled`.
        ///
        /// - Parameters:
        ///   - deDE:
        ///   - enGB:
        ///   - enUS:
        ///   - esES:
        ///   - esLA:
        ///   - frFR:
        ///   - itIT:
        ///   - ptBR:
        ///   - ruRU:
        ///   - jaJP:
        ///   - zhCN:
        ///   - zhTW:
        ///   - koKR:
        public init(
            deDE: Swift.String? = nil,
            enGB: Swift.String? = nil,
            enUS: Swift.String? = nil,
            esES: Swift.String? = nil,
            esLA: Swift.String? = nil,
            frFR: Swift.String? = nil,
            itIT: Swift.String? = nil,
            ptBR: Swift.String? = nil,
            ruRU: Swift.String? = nil,
            jaJP: Swift.String? = nil,
            zhCN: Swift.String? = nil,
            zhTW: Swift.String? = nil,
            koKR: Swift.String? = nil
        ) {
            self.deDE = deDE
            self.enGB = enGB
            self.enUS = enUS
            self.esES = esES
            self.esLA = esLA
            self.frFR = frFR
            self.itIT = itIT
            self.ptBR = ptBR
            self.ruRU = ruRU
            self.jaJP = jaJP
            self.zhCN = zhCN
            self.zhTW = zhTW
            self.koKR = koKR
        }
    }
    /// - Remark: Generated from `#/components/schemas/AppID`.
    @frozen public enum AppID: String, Codable, Hashable, Sendable, CaseIterable {
        case a00000000 = "A00000000"
        case _empty_ = ""
    }
    /// - Remark: Generated from `#/components/schemas/ID`.
    @frozen public enum Id: String, Codable, Hashable, Sendable, CaseIterable {
        case b00000000 = "B00000000"
        case _empty_ = ""
    }
    /// - Remark: Generated from `#/components/schemas/Files`.
    public struct Files: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Files/total`.
        public var total: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Files/pagination`.
        public var pagination: Components.Schemas.Pagination?
        /// - Remark: Generated from `#/components/schemas/Files/paging`.
        public var paging: Components.Schemas.Paging?
        /// - Remark: Generated from `#/components/schemas/Files/matches`.
        public var matches: [Components.Schemas.Match]?
        /// Creates a new `Files`.
        ///
        /// - Parameters:
        ///   - total:
        ///   - pagination:
        ///   - paging:
        ///   - matches:
        public init(
            total: Swift.Int? = nil,
            pagination: Components.Schemas.Pagination? = nil,
            paging: Components.Schemas.Paging? = nil,
            matches: [Components.Schemas.Match]? = nil
        ) {
            self.total = total
            self.pagination = pagination
            self.paging = paging
            self.matches = matches
        }
    }
    /// - Remark: Generated from `#/components/schemas/Pagination`.
    public struct Pagination: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Pagination/page`.
        public var page: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Pagination/first`.
        public var first: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Pagination/last`.
        public var last: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Pagination/totalCount`.
        public var totalCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Pagination/perPage`.
        public var perPage: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Pagination/pageCount`.
        public var pageCount: Swift.Int?
        /// Creates a new `Pagination`.
        ///
        /// - Parameters:
        ///   - page:
        ///   - first:
        ///   - last:
        ///   - totalCount:
        ///   - perPage:
        ///   - pageCount:
        public init(
            page: Swift.Int? = nil,
            first: Swift.Int? = nil,
            last: Swift.Int? = nil,
            totalCount: Swift.Int? = nil,
            perPage: Swift.Int? = nil,
            pageCount: Swift.Int? = nil
        ) {
            self.page = page
            self.first = first
            self.last = last
            self.totalCount = totalCount
            self.perPage = perPage
            self.pageCount = pageCount
        }
    }
    /// - Remark: Generated from `#/components/schemas/Messages`.
    public struct Messages: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Messages/total`.
        public var total: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Messages/pagination`.
        public var pagination: Components.Schemas.Pagination?
        /// - Remark: Generated from `#/components/schemas/Messages/paging`.
        public var paging: Components.Schemas.Paging?
        /// - Remark: Generated from `#/components/schemas/Messages/matches`.
        public var matches: [Components.Schemas.Match]?
        /// Creates a new `Messages`.
        ///
        /// - Parameters:
        ///   - total:
        ///   - pagination:
        ///   - paging:
        ///   - matches:
        public init(
            total: Swift.Int? = nil,
            pagination: Components.Schemas.Pagination? = nil,
            paging: Components.Schemas.Paging? = nil,
            matches: [Components.Schemas.Match]? = nil
        ) {
            self.total = total
            self.pagination = pagination
            self.paging = paging
            self.matches = matches
        }
    }
    /// - Remark: Generated from `#/components/schemas/Previous`.
    public struct Previous: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Previous/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Previous/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Previous/username`.
        public var username: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Previous/ts`.
        public var ts: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Previous/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Previous/iid`.
        public var iid: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Previous/permalink`.
        public var permalink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Previous/attachments`.
        public var attachments: [Components.Schemas.Attachment]?
        /// - Remark: Generated from `#/components/schemas/Previous/blocks`.
        public var blocks: [SlackBlockKit.BlockType]?
        /// Creates a new `Previous`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - user:
        ///   - username:
        ///   - ts:
        ///   - text:
        ///   - iid:
        ///   - permalink:
        ///   - attachments:
        ///   - blocks:
        public init(
            type: Swift.String? = nil,
            user: Swift.String? = nil,
            username: Swift.String? = nil,
            ts: Swift.String? = nil,
            text: Swift.String? = nil,
            iid: Swift.String? = nil,
            permalink: Swift.String? = nil,
            attachments: [Components.Schemas.Attachment]? = nil,
            blocks: [SlackBlockKit.BlockType]? = nil
        ) {
            self.type = type
            self.user = user
            self.username = username
            self.ts = ts
            self.text = text
            self.iid = iid
            self.permalink = permalink
            self.attachments = attachments
            self.blocks = blocks
        }
    }
    /// - Remark: Generated from `#/components/schemas/Posts`.
    public struct Posts: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Posts/total`.
        public var total: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Posts/matches`.
        public var matches: [Swift.String]?
        /// Creates a new `Posts`.
        ///
        /// - Parameters:
        ///   - total:
        ///   - matches:
        public init(
            total: Swift.Int? = nil,
            matches: [Swift.String]? = nil
        ) {
            self.total = total
            self.matches = matches
        }
    }
    /// - Remark: Generated from `#/components/schemas/Match`.
    public struct Match: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Match/iid`.
        public var iid: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Match/team`.
        public var team: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Match/channel`.
        public var channel: Components.Schemas.Channel?
        /// - Remark: Generated from `#/components/schemas/Match/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Match/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Match/username`.
        public var username: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Match/ts`.
        public var ts: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Match/text`.
        public var text: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Match/permalink`.
        public var permalink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Match/previous`.
        public var previous: Components.Schemas.Previous?
        /// - Remark: Generated from `#/components/schemas/Match/score`.
        public var score: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Match/blocks`.
        public var blocks: [SlackBlockKit.BlockType]?
        /// - Remark: Generated from `#/components/schemas/Match/attachments`.
        public var attachments: [Components.Schemas.Attachment]?
        /// - Remark: Generated from `#/components/schemas/Match/files`.
        public var files: [Components.Schemas.FileElement]?
        /// - Remark: Generated from `#/components/schemas/Match/noReactions`.
        public var noReactions: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Match/previous2`.
        public var previous2: Components.Schemas.Previous?
        /// - Remark: Generated from `#/components/schemas/Match/isMpim`.
        public var isMpim: Swift.Bool?
        /// Creates a new `Match`.
        ///
        /// - Parameters:
        ///   - iid:
        ///   - team:
        ///   - channel:
        ///   - type:
        ///   - user:
        ///   - username:
        ///   - ts:
        ///   - text:
        ///   - permalink:
        ///   - previous:
        ///   - score:
        ///   - blocks:
        ///   - attachments:
        ///   - files:
        ///   - noReactions:
        ///   - previous2:
        ///   - isMpim:
        public init(
            iid: Swift.String? = nil,
            team: Swift.String? = nil,
            channel: Components.Schemas.Channel? = nil,
            type: Swift.String? = nil,
            user: Swift.String? = nil,
            username: Swift.String? = nil,
            ts: Swift.String? = nil,
            text: Swift.String? = nil,
            permalink: Swift.String? = nil,
            previous: Components.Schemas.Previous? = nil,
            score: Swift.Int? = nil,
            blocks: [SlackBlockKit.BlockType]? = nil,
            attachments: [Components.Schemas.Attachment]? = nil,
            files: [Components.Schemas.FileElement]? = nil,
            noReactions: Swift.Bool? = nil,
            previous2: Components.Schemas.Previous? = nil,
            isMpim: Swift.Bool? = nil
        ) {
            self.iid = iid
            self.team = team
            self.channel = channel
            self.type = type
            self.user = user
            self.username = username
            self.ts = ts
            self.text = text
            self.permalink = permalink
            self.previous = previous
            self.score = score
            self.blocks = blocks
            self.attachments = attachments
            self.files = files
            self.noReactions = noReactions
            self.previous2 = previous2
            self.isMpim = isMpim
        }
    }
    /// - Remark: Generated from `#/components/schemas/ItemFile`.
    public struct ItemFile: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ItemFile/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/created`.
        public var created: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/timestamp`.
        public var timestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/title`.
        public var title: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/subject`.
        public var subject: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/mimetype`.
        public var mimetype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/filetype`.
        public var filetype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/user`.
        public var user: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/mode`.
        public var mode: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/editable`.
        public var editable: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/editor`.
        public var editor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/subtype`.
        public var subtype: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/transcription`.
        public var transcription: Components.Schemas.Transcription?
        /// - Remark: Generated from `#/components/schemas/ItemFile/mp4`.
        public var mp4: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/vtt`.
        public var vtt: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/hls`.
        public var hls: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/username`.
        public var username: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/size`.
        public var size: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/deanimate`.
        public var deanimate: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/pjpeg`.
        public var pjpeg: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/permalink`.
        public var permalink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/preview`.
        public var preview: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/lines`.
        public var lines: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/channels`.
        public var channels: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/ItemFile/groups`.
        public var groups: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/ItemFile/ims`.
        public var ims: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/ItemFile/shares`.
        public var shares: Components.Schemas.Shares?
        /// - Remark: Generated from `#/components/schemas/ItemFile/to`.
        public var to: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/ItemFile/from`.
        public var from: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/ItemFile/cc`.
        public var cc: [Components.Schemas.Cc]?
        /// - Remark: Generated from `#/components/schemas/ItemFile/headers`.
        public var headers: Components.Schemas.Headers?
        /// - Remark: Generated from `#/components/schemas/ItemFile/saved`.
        public var saved: Components.Schemas.Saved?
        /// - Remark: Generated from `#/components/schemas/ItemFile/reactions`.
        public var reactions: [Components.Schemas.Reaction]?
        /// - Remark: Generated from `#/components/schemas/ItemFile/prettyType`.
        public var prettyType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/userTeam`.
        public var userTeam: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/sourceTeam`.
        public var sourceTeam: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/nonOwnerEditable`.
        public var nonOwnerEditable: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/lastEditor`.
        public var lastEditor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/fileAccess`.
        public var fileAccess: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/altTxt`.
        public var altTxt: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/mp4Low`.
        public var mp4Low: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/hlsEmbed`.
        public var hlsEmbed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/durationMs`.
        public var durationMs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumbVideoW`.
        public var thumbVideoW: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumbVideoH`.
        public var thumbVideoH: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/originalAttachmentCount`.
        public var originalAttachmentCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/isExternal`.
        public var isExternal: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/externalType`.
        public var externalType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/externalId`.
        public var externalId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/externalUrl`.
        public var externalUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/urlPrivate`.
        public var urlPrivate: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/urlPrivateDownload`.
        public var urlPrivateDownload: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/appName`.
        public var appName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb64`.
        public var thumb64: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb64Gif`.
        public var thumb64Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb64W`.
        public var thumb64W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb64H`.
        public var thumb64H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb80`.
        public var thumb80: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb80Gif`.
        public var thumb80Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb80W`.
        public var thumb80W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb80H`.
        public var thumb80H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb160`.
        public var thumb160: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb160Gif`.
        public var thumb160Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb160W`.
        public var thumb160W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb160H`.
        public var thumb160H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb360`.
        public var thumb360: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb360Gif`.
        public var thumb360Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb360W`.
        public var thumb360W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb360H`.
        public var thumb360H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb480`.
        public var thumb480: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb480Gif`.
        public var thumb480Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb480W`.
        public var thumb480W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb480H`.
        public var thumb480H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb720`.
        public var thumb720: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb720Gif`.
        public var thumb720Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb720W`.
        public var thumb720W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb720H`.
        public var thumb720H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb800`.
        public var thumb800: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb800Gif`.
        public var thumb800Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb800W`.
        public var thumb800W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb800H`.
        public var thumb800H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb960`.
        public var thumb960: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb960Gif`.
        public var thumb960Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb960W`.
        public var thumb960W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb960H`.
        public var thumb960H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb1024`.
        public var thumb1024: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb1024Gif`.
        public var thumb1024Gif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb1024W`.
        public var thumb1024W: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumb1024H`.
        public var thumb1024H: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumbVideo`.
        public var thumbVideo: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumbGif`.
        public var thumbGif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumbPdf`.
        public var thumbPdf: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumbPdfW`.
        public var thumbPdfW: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumbPdfH`.
        public var thumbPdfH: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/thumbTiny`.
        public var thumbTiny: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/convertedPdf`.
        public var convertedPdf: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/imageExifRotation`.
        public var imageExifRotation: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/originalW`.
        public var originalW: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/originalH`.
        public var originalH: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/deanimateGif`.
        public var deanimateGif: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/permalinkPublic`.
        public var permalinkPublic: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/editLink`.
        public var editLink: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/hasRichPreview`.
        public var hasRichPreview: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/mediaDisplayType`.
        public var mediaDisplayType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/previewIsTruncated`.
        public var previewIsTruncated: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/previewHighlight`.
        public var previewHighlight: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/plainText`.
        public var plainText: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/previewPlainText`.
        public var previewPlainText: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/hasMore`.
        public var hasMore: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/sentToSelf`.
        public var sentToSelf: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/linesMore`.
        public var linesMore: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/isPublic`.
        public var isPublic: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/publicUrlShared`.
        public var publicUrlShared: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/displayAsBot`.
        public var displayAsBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/hasMoreShares`.
        public var hasMoreShares: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/channelActionsTs`.
        public var channelActionsTs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/channelActionsCount`.
        public var channelActionsCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/simplifiedHtml`.
        public var simplifiedHtml: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/mediaProgress`.
        public var mediaProgress: Components.Schemas.MediaProgress?
        /// - Remark: Generated from `#/components/schemas/ItemFile/botId`.
        public var botId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ItemFile/initialComment`.
        public var initialComment: Components.Schemas.Comment?
        /// - Remark: Generated from `#/components/schemas/ItemFile/numStars`.
        public var numStars: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/ItemFile/isStarred`.
        public var isStarred: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ItemFile/pinnedTo`.
        public var pinnedTo: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/ItemFile/commentsCount`.
        public var commentsCount: Swift.Int?
        /// Creates a new `ItemFile`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - created:
        ///   - timestamp:
        ///   - name:
        ///   - title:
        ///   - subject:
        ///   - mimetype:
        ///   - filetype:
        ///   - user:
        ///   - mode:
        ///   - editable:
        ///   - editor:
        ///   - updated:
        ///   - subtype:
        ///   - transcription:
        ///   - mp4:
        ///   - vtt:
        ///   - hls:
        ///   - username:
        ///   - size:
        ///   - deanimate:
        ///   - pjpeg:
        ///   - permalink:
        ///   - preview:
        ///   - lines:
        ///   - channels:
        ///   - groups:
        ///   - ims:
        ///   - shares:
        ///   - to:
        ///   - from:
        ///   - cc:
        ///   - headers:
        ///   - saved:
        ///   - reactions:
        ///   - prettyType:
        ///   - userTeam:
        ///   - sourceTeam:
        ///   - nonOwnerEditable:
        ///   - lastEditor:
        ///   - fileAccess:
        ///   - altTxt:
        ///   - mp4Low:
        ///   - hlsEmbed:
        ///   - durationMs:
        ///   - thumbVideoW:
        ///   - thumbVideoH:
        ///   - originalAttachmentCount:
        ///   - isExternal:
        ///   - externalType:
        ///   - externalId:
        ///   - externalUrl:
        ///   - urlPrivate:
        ///   - urlPrivateDownload:
        ///   - appId:
        ///   - appName:
        ///   - thumb64:
        ///   - thumb64Gif:
        ///   - thumb64W:
        ///   - thumb64H:
        ///   - thumb80:
        ///   - thumb80Gif:
        ///   - thumb80W:
        ///   - thumb80H:
        ///   - thumb160:
        ///   - thumb160Gif:
        ///   - thumb160W:
        ///   - thumb160H:
        ///   - thumb360:
        ///   - thumb360Gif:
        ///   - thumb360W:
        ///   - thumb360H:
        ///   - thumb480:
        ///   - thumb480Gif:
        ///   - thumb480W:
        ///   - thumb480H:
        ///   - thumb720:
        ///   - thumb720Gif:
        ///   - thumb720W:
        ///   - thumb720H:
        ///   - thumb800:
        ///   - thumb800Gif:
        ///   - thumb800W:
        ///   - thumb800H:
        ///   - thumb960:
        ///   - thumb960Gif:
        ///   - thumb960W:
        ///   - thumb960H:
        ///   - thumb1024:
        ///   - thumb1024Gif:
        ///   - thumb1024W:
        ///   - thumb1024H:
        ///   - thumbVideo:
        ///   - thumbGif:
        ///   - thumbPdf:
        ///   - thumbPdfW:
        ///   - thumbPdfH:
        ///   - thumbTiny:
        ///   - convertedPdf:
        ///   - imageExifRotation:
        ///   - originalW:
        ///   - originalH:
        ///   - deanimateGif:
        ///   - permalinkPublic:
        ///   - editLink:
        ///   - hasRichPreview:
        ///   - mediaDisplayType:
        ///   - previewIsTruncated:
        ///   - previewHighlight:
        ///   - plainText:
        ///   - previewPlainText:
        ///   - hasMore:
        ///   - sentToSelf:
        ///   - linesMore:
        ///   - isPublic:
        ///   - publicUrlShared:
        ///   - displayAsBot:
        ///   - hasMoreShares:
        ///   - channelActionsTs:
        ///   - channelActionsCount:
        ///   - simplifiedHtml:
        ///   - mediaProgress:
        ///   - botId:
        ///   - initialComment:
        ///   - numStars:
        ///   - isStarred:
        ///   - pinnedTo:
        ///   - commentsCount:
        public init(
            id: Swift.String? = nil,
            created: Swift.Int? = nil,
            timestamp: Swift.Int? = nil,
            name: Swift.String? = nil,
            title: Swift.String? = nil,
            subject: Swift.String? = nil,
            mimetype: Swift.String? = nil,
            filetype: Swift.String? = nil,
            user: Swift.String? = nil,
            mode: Swift.String? = nil,
            editable: Swift.Bool? = nil,
            editor: Swift.String? = nil,
            updated: Swift.Int? = nil,
            subtype: Swift.String? = nil,
            transcription: Components.Schemas.Transcription? = nil,
            mp4: Swift.String? = nil,
            vtt: Swift.String? = nil,
            hls: Swift.String? = nil,
            username: Swift.String? = nil,
            size: Swift.Int? = nil,
            deanimate: Swift.String? = nil,
            pjpeg: Swift.String? = nil,
            permalink: Swift.String? = nil,
            preview: Swift.String? = nil,
            lines: Swift.Int? = nil,
            channels: [Swift.String]? = nil,
            groups: [Swift.String]? = nil,
            ims: [Swift.String]? = nil,
            shares: Components.Schemas.Shares? = nil,
            to: [Components.Schemas.Cc]? = nil,
            from: [Components.Schemas.Cc]? = nil,
            cc: [Components.Schemas.Cc]? = nil,
            headers: Components.Schemas.Headers? = nil,
            saved: Components.Schemas.Saved? = nil,
            reactions: [Components.Schemas.Reaction]? = nil,
            prettyType: Swift.String? = nil,
            userTeam: Swift.String? = nil,
            sourceTeam: Swift.String? = nil,
            nonOwnerEditable: Swift.Bool? = nil,
            lastEditor: Swift.String? = nil,
            fileAccess: Swift.String? = nil,
            altTxt: Swift.String? = nil,
            mp4Low: Swift.String? = nil,
            hlsEmbed: Swift.String? = nil,
            durationMs: Swift.Int? = nil,
            thumbVideoW: Swift.Int? = nil,
            thumbVideoH: Swift.Int? = nil,
            originalAttachmentCount: Swift.Int? = nil,
            isExternal: Swift.Bool? = nil,
            externalType: Swift.String? = nil,
            externalId: Swift.String? = nil,
            externalUrl: Swift.String? = nil,
            urlPrivate: Swift.String? = nil,
            urlPrivateDownload: Swift.String? = nil,
            appId: Swift.String? = nil,
            appName: Swift.String? = nil,
            thumb64: Swift.String? = nil,
            thumb64Gif: Swift.String? = nil,
            thumb64W: Swift.String? = nil,
            thumb64H: Swift.String? = nil,
            thumb80: Swift.String? = nil,
            thumb80Gif: Swift.String? = nil,
            thumb80W: Swift.String? = nil,
            thumb80H: Swift.String? = nil,
            thumb160: Swift.String? = nil,
            thumb160Gif: Swift.String? = nil,
            thumb160W: Swift.String? = nil,
            thumb160H: Swift.String? = nil,
            thumb360: Swift.String? = nil,
            thumb360Gif: Swift.String? = nil,
            thumb360W: Swift.String? = nil,
            thumb360H: Swift.String? = nil,
            thumb480: Swift.String? = nil,
            thumb480Gif: Swift.String? = nil,
            thumb480W: Swift.String? = nil,
            thumb480H: Swift.String? = nil,
            thumb720: Swift.String? = nil,
            thumb720Gif: Swift.String? = nil,
            thumb720W: Swift.String? = nil,
            thumb720H: Swift.String? = nil,
            thumb800: Swift.String? = nil,
            thumb800Gif: Swift.String? = nil,
            thumb800W: Swift.String? = nil,
            thumb800H: Swift.String? = nil,
            thumb960: Swift.String? = nil,
            thumb960Gif: Swift.String? = nil,
            thumb960W: Swift.String? = nil,
            thumb960H: Swift.String? = nil,
            thumb1024: Swift.String? = nil,
            thumb1024Gif: Swift.String? = nil,
            thumb1024W: Swift.String? = nil,
            thumb1024H: Swift.String? = nil,
            thumbVideo: Swift.String? = nil,
            thumbGif: Swift.String? = nil,
            thumbPdf: Swift.String? = nil,
            thumbPdfW: Swift.String? = nil,
            thumbPdfH: Swift.String? = nil,
            thumbTiny: Swift.String? = nil,
            convertedPdf: Swift.String? = nil,
            imageExifRotation: Swift.Int? = nil,
            originalW: Swift.String? = nil,
            originalH: Swift.String? = nil,
            deanimateGif: Swift.String? = nil,
            permalinkPublic: Swift.String? = nil,
            editLink: Swift.String? = nil,
            hasRichPreview: Swift.Bool? = nil,
            mediaDisplayType: Swift.String? = nil,
            previewIsTruncated: Swift.Bool? = nil,
            previewHighlight: Swift.String? = nil,
            plainText: Swift.String? = nil,
            previewPlainText: Swift.String? = nil,
            hasMore: Swift.Bool? = nil,
            sentToSelf: Swift.Bool? = nil,
            linesMore: Swift.Int? = nil,
            isPublic: Swift.Bool? = nil,
            publicUrlShared: Swift.Bool? = nil,
            displayAsBot: Swift.Bool? = nil,
            hasMoreShares: Swift.Bool? = nil,
            channelActionsTs: Swift.String? = nil,
            channelActionsCount: Swift.Int? = nil,
            simplifiedHtml: Swift.String? = nil,
            mediaProgress: Components.Schemas.MediaProgress? = nil,
            botId: Swift.String? = nil,
            initialComment: Components.Schemas.Comment? = nil,
            numStars: Swift.Int? = nil,
            isStarred: Swift.Bool? = nil,
            pinnedTo: [Swift.String]? = nil,
            commentsCount: Swift.Int? = nil
        ) {
            self.id = id
            self.created = created
            self.timestamp = timestamp
            self.name = name
            self.title = title
            self.subject = subject
            self.mimetype = mimetype
            self.filetype = filetype
            self.user = user
            self.mode = mode
            self.editable = editable
            self.editor = editor
            self.updated = updated
            self.subtype = subtype
            self.transcription = transcription
            self.mp4 = mp4
            self.vtt = vtt
            self.hls = hls
            self.username = username
            self.size = size
            self.deanimate = deanimate
            self.pjpeg = pjpeg
            self.permalink = permalink
            self.preview = preview
            self.lines = lines
            self.channels = channels
            self.groups = groups
            self.ims = ims
            self.shares = shares
            self.to = to
            self.from = from
            self.cc = cc
            self.headers = headers
            self.saved = saved
            self.reactions = reactions
            self.prettyType = prettyType
            self.userTeam = userTeam
            self.sourceTeam = sourceTeam
            self.nonOwnerEditable = nonOwnerEditable
            self.lastEditor = lastEditor
            self.fileAccess = fileAccess
            self.altTxt = altTxt
            self.mp4Low = mp4Low
            self.hlsEmbed = hlsEmbed
            self.durationMs = durationMs
            self.thumbVideoW = thumbVideoW
            self.thumbVideoH = thumbVideoH
            self.originalAttachmentCount = originalAttachmentCount
            self.isExternal = isExternal
            self.externalType = externalType
            self.externalId = externalId
            self.externalUrl = externalUrl
            self.urlPrivate = urlPrivate
            self.urlPrivateDownload = urlPrivateDownload
            self.appId = appId
            self.appName = appName
            self.thumb64 = thumb64
            self.thumb64Gif = thumb64Gif
            self.thumb64W = thumb64W
            self.thumb64H = thumb64H
            self.thumb80 = thumb80
            self.thumb80Gif = thumb80Gif
            self.thumb80W = thumb80W
            self.thumb80H = thumb80H
            self.thumb160 = thumb160
            self.thumb160Gif = thumb160Gif
            self.thumb160W = thumb160W
            self.thumb160H = thumb160H
            self.thumb360 = thumb360
            self.thumb360Gif = thumb360Gif
            self.thumb360W = thumb360W
            self.thumb360H = thumb360H
            self.thumb480 = thumb480
            self.thumb480Gif = thumb480Gif
            self.thumb480W = thumb480W
            self.thumb480H = thumb480H
            self.thumb720 = thumb720
            self.thumb720Gif = thumb720Gif
            self.thumb720W = thumb720W
            self.thumb720H = thumb720H
            self.thumb800 = thumb800
            self.thumb800Gif = thumb800Gif
            self.thumb800W = thumb800W
            self.thumb800H = thumb800H
            self.thumb960 = thumb960
            self.thumb960Gif = thumb960Gif
            self.thumb960W = thumb960W
            self.thumb960H = thumb960H
            self.thumb1024 = thumb1024
            self.thumb1024Gif = thumb1024Gif
            self.thumb1024W = thumb1024W
            self.thumb1024H = thumb1024H
            self.thumbVideo = thumbVideo
            self.thumbGif = thumbGif
            self.thumbPdf = thumbPdf
            self.thumbPdfW = thumbPdfW
            self.thumbPdfH = thumbPdfH
            self.thumbTiny = thumbTiny
            self.convertedPdf = convertedPdf
            self.imageExifRotation = imageExifRotation
            self.originalW = originalW
            self.originalH = originalH
            self.deanimateGif = deanimateGif
            self.permalinkPublic = permalinkPublic
            self.editLink = editLink
            self.hasRichPreview = hasRichPreview
            self.mediaDisplayType = mediaDisplayType
            self.previewIsTruncated = previewIsTruncated
            self.previewHighlight = previewHighlight
            self.plainText = plainText
            self.previewPlainText = previewPlainText
            self.hasMore = hasMore
            self.sentToSelf = sentToSelf
            self.linesMore = linesMore
            self.isPublic = isPublic
            self.publicUrlShared = publicUrlShared
            self.displayAsBot = displayAsBot
            self.hasMoreShares = hasMoreShares
            self.channelActionsTs = channelActionsTs
            self.channelActionsCount = channelActionsCount
            self.simplifiedHtml = simplifiedHtml
            self.mediaProgress = mediaProgress
            self.botId = botId
            self.initialComment = initialComment
            self.numStars = numStars
            self.isStarred = isStarred
            self.pinnedTo = pinnedTo
            self.commentsCount = commentsCount
        }
    }
    /// - Remark: Generated from `#/components/schemas/Login`.
    public struct Login: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Login/username`.
        public var username: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Login/count`.
        public var count: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Login/ip`.
        public var ip: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Login/isp`.
        public var isp: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Login/country`.
        public var country: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Login/region`.
        public var region: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Login/userId`.
        public var userId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Login/dateFirst`.
        public var dateFirst: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Login/dateLast`.
        public var dateLast: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Login/userAgent`.
        public var userAgent: Swift.String?
        /// Creates a new `Login`.
        ///
        /// - Parameters:
        ///   - username:
        ///   - count:
        ///   - ip:
        ///   - isp:
        ///   - country:
        ///   - region:
        ///   - userId:
        ///   - dateFirst:
        ///   - dateLast:
        ///   - userAgent:
        public init(
            username: Swift.String? = nil,
            count: Swift.Int? = nil,
            ip: Swift.String? = nil,
            isp: Swift.String? = nil,
            country: Swift.String? = nil,
            region: Swift.String? = nil,
            userId: Swift.String? = nil,
            dateFirst: Swift.Int? = nil,
            dateLast: Swift.Int? = nil,
            userAgent: Swift.String? = nil
        ) {
            self.username = username
            self.count = count
            self.ip = ip
            self.isp = isp
            self.country = country
            self.region = region
            self.userId = userId
            self.dateFirst = dateFirst
            self.dateLast = dateLast
            self.userAgent = userAgent
        }
    }
    /// - Remark: Generated from `#/components/schemas/Organization`.
    public struct Organization: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Organization/canvas`.
        public var canvas: Components.Schemas.Canvas?
        /// - Remark: Generated from `#/components/schemas/Organization/lists`.
        public var lists: Components.Schemas.Canvas?
        /// - Remark: Generated from `#/components/schemas/Organization/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Organization/teamName`.
        public var teamName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Organization/teamDomain`.
        public var teamDomain: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Organization/publicChannelCount`.
        public var publicChannelCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Organization/privateChannelCount`.
        public var privateChannelCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Organization/imChannelCount`.
        public var imChannelCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Organization/mpimChannelCount`.
        public var mpimChannelCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Organization/connectedWorkspaces`.
        public var connectedWorkspaces: [Components.Schemas.ConnectedWorkspace]?
        /// - Remark: Generated from `#/components/schemas/Organization/slackConnectPrefs`.
        public var slackConnectPrefs: Components.Schemas.SlackConnectPrefs?
        /// - Remark: Generated from `#/components/schemas/Organization/connectionStatus`.
        public var connectionStatus: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Organization/lastActiveTimestamp`.
        public var lastActiveTimestamp: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Organization/isSponsored`.
        public var isSponsored: Swift.Bool?
        /// Creates a new `Organization`.
        ///
        /// - Parameters:
        ///   - canvas:
        ///   - lists:
        ///   - teamId:
        ///   - teamName:
        ///   - teamDomain:
        ///   - publicChannelCount:
        ///   - privateChannelCount:
        ///   - imChannelCount:
        ///   - mpimChannelCount:
        ///   - connectedWorkspaces:
        ///   - slackConnectPrefs:
        ///   - connectionStatus:
        ///   - lastActiveTimestamp:
        ///   - isSponsored:
        public init(
            canvas: Components.Schemas.Canvas? = nil,
            lists: Components.Schemas.Canvas? = nil,
            teamId: Swift.String? = nil,
            teamName: Swift.String? = nil,
            teamDomain: Swift.String? = nil,
            publicChannelCount: Swift.Int? = nil,
            privateChannelCount: Swift.Int? = nil,
            imChannelCount: Swift.Int? = nil,
            mpimChannelCount: Swift.Int? = nil,
            connectedWorkspaces: [Components.Schemas.ConnectedWorkspace]? = nil,
            slackConnectPrefs: Components.Schemas.SlackConnectPrefs? = nil,
            connectionStatus: Swift.String? = nil,
            lastActiveTimestamp: Swift.Int? = nil,
            isSponsored: Swift.Bool? = nil
        ) {
            self.canvas = canvas
            self.lists = lists
            self.teamId = teamId
            self.teamName = teamName
            self.teamDomain = teamDomain
            self.publicChannelCount = publicChannelCount
            self.privateChannelCount = privateChannelCount
            self.imChannelCount = imChannelCount
            self.mpimChannelCount = mpimChannelCount
            self.connectedWorkspaces = connectedWorkspaces
            self.slackConnectPrefs = slackConnectPrefs
            self.connectionStatus = connectionStatus
            self.lastActiveTimestamp = lastActiveTimestamp
            self.isSponsored = isSponsored
        }
    }
    /// - Remark: Generated from `#/components/schemas/ConnectedWorkspace`.
    public struct ConnectedWorkspace: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ConnectedWorkspace/workspaceId`.
        public var workspaceId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ConnectedWorkspace/workspaceName`.
        public var workspaceName: Swift.String?
        /// Creates a new `ConnectedWorkspace`.
        ///
        /// - Parameters:
        ///   - workspaceId:
        ///   - workspaceName:
        public init(
            workspaceId: Swift.String? = nil,
            workspaceName: Swift.String? = nil
        ) {
            self.workspaceId = workspaceId
            self.workspaceName = workspaceName
        }
    }
    /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs`.
    public struct SlackConnectPrefs: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/allowScFileUploads`.
        public var allowScFileUploads: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/approvedOrgInfo`.
        public var approvedOrgInfo: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/profileVisibility`.
        public var profileVisibility: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/allowedWorkspaces`.
        public var allowedWorkspaces: Components.Schemas.AllowedWorkspaces?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/allowedCanvasSharing`.
        public var allowedCanvasSharing: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/allowedListSharing`.
        public var allowedListSharing: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/awayTeamScInvitePermissions`.
        public var awayTeamScInvitePermissions: Components.Schemas.AllowedWorkspaces?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/awayTeamScInviteRequire2fa`.
        public var awayTeamScInviteRequire2fa: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/acceptScInvites`.
        public var acceptScInvites: Components.Schemas.AcceptScInvites?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/scChannelLimitedAccess`.
        public var scChannelLimitedAccess: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/scMpdmToPrivate`.
        public var scMpdmToPrivate: Components.Schemas.ScMpdmToPrivate?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/externalAwarenessContextBar`.
        public var externalAwarenessContextBar: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/requireScChannelForScDm`.
        public var requireScChannelForScDm: Components.Schemas.AllowScFileUploads?
        /// - Remark: Generated from `#/components/schemas/SlackConnectPrefs/sharedChannelInviteRequested`.
        public var sharedChannelInviteRequested: Components.Schemas.SharedChannelInviteRequested?
        /// Creates a new `SlackConnectPrefs`.
        ///
        /// - Parameters:
        ///   - allowScFileUploads:
        ///   - approvedOrgInfo:
        ///   - profileVisibility:
        ///   - allowedWorkspaces:
        ///   - allowedCanvasSharing:
        ///   - allowedListSharing:
        ///   - awayTeamScInvitePermissions:
        ///   - awayTeamScInviteRequire2fa:
        ///   - acceptScInvites:
        ///   - scChannelLimitedAccess:
        ///   - scMpdmToPrivate:
        ///   - externalAwarenessContextBar:
        ///   - requireScChannelForScDm:
        ///   - sharedChannelInviteRequested:
        public init(
            allowScFileUploads: Components.Schemas.AllowScFileUploads? = nil,
            approvedOrgInfo: Components.Schemas.AllowScFileUploads? = nil,
            profileVisibility: Components.Schemas.AllowScFileUploads? = nil,
            allowedWorkspaces: Components.Schemas.AllowedWorkspaces? = nil,
            allowedCanvasSharing: Components.Schemas.AllowScFileUploads? = nil,
            allowedListSharing: Components.Schemas.AllowScFileUploads? = nil,
            awayTeamScInvitePermissions: Components.Schemas.AllowedWorkspaces? = nil,
            awayTeamScInviteRequire2fa: Components.Schemas.AllowScFileUploads? = nil,
            acceptScInvites: Components.Schemas.AcceptScInvites? = nil,
            scChannelLimitedAccess: Components.Schemas.AllowScFileUploads? = nil,
            scMpdmToPrivate: Components.Schemas.ScMpdmToPrivate? = nil,
            externalAwarenessContextBar: Components.Schemas.AllowScFileUploads? = nil,
            requireScChannelForScDm: Components.Schemas.AllowScFileUploads? = nil,
            sharedChannelInviteRequested: Components.Schemas.SharedChannelInviteRequested? = nil
        ) {
            self.allowScFileUploads = allowScFileUploads
            self.approvedOrgInfo = approvedOrgInfo
            self.profileVisibility = profileVisibility
            self.allowedWorkspaces = allowedWorkspaces
            self.allowedCanvasSharing = allowedCanvasSharing
            self.allowedListSharing = allowedListSharing
            self.awayTeamScInvitePermissions = awayTeamScInvitePermissions
            self.awayTeamScInviteRequire2fa = awayTeamScInviteRequire2fa
            self.acceptScInvites = acceptScInvites
            self.scChannelLimitedAccess = scChannelLimitedAccess
            self.scMpdmToPrivate = scMpdmToPrivate
            self.externalAwarenessContextBar = externalAwarenessContextBar
            self.requireScChannelForScDm = requireScChannelForScDm
            self.sharedChannelInviteRequested = sharedChannelInviteRequested
        }
    }
    /// - Remark: Generated from `#/components/schemas/AcceptScInvites`.
    public struct AcceptScInvites: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/AcceptScInvites/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AcceptScInvites/actor`.
        public var actor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AcceptScInvites/source`.
        public var source: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AcceptScInvites/acceptInWorkspaceIds`.
        public var acceptInWorkspaceIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/AcceptScInvites/invalidWorkspaceIds`.
        public var invalidWorkspaceIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/AcceptScInvites/useAllowedWorkspaces`.
        public var useAllowedWorkspaces: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/AcceptScInvites/acceptPrivate`.
        public var acceptPrivate: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/AcceptScInvites/dateUpdate`.
        public var dateUpdate: Swift.Int?
        /// Creates a new `AcceptScInvites`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - actor:
        ///   - source:
        ///   - acceptInWorkspaceIds:
        ///   - invalidWorkspaceIds:
        ///   - useAllowedWorkspaces:
        ///   - acceptPrivate:
        ///   - dateUpdate:
        public init(
            type: Swift.String? = nil,
            actor: Swift.String? = nil,
            source: Swift.String? = nil,
            acceptInWorkspaceIds: [Swift.String]? = nil,
            invalidWorkspaceIds: [Swift.String]? = nil,
            useAllowedWorkspaces: Swift.Bool? = nil,
            acceptPrivate: Swift.Bool? = nil,
            dateUpdate: Swift.Int? = nil
        ) {
            self.type = type
            self.actor = actor
            self.source = source
            self.acceptInWorkspaceIds = acceptInWorkspaceIds
            self.invalidWorkspaceIds = invalidWorkspaceIds
            self.useAllowedWorkspaces = useAllowedWorkspaces
            self.acceptPrivate = acceptPrivate
            self.dateUpdate = dateUpdate
        }
    }
    /// - Remark: Generated from `#/components/schemas/AllowScFileUploads`.
    public struct AllowScFileUploads: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/AllowScFileUploads/value`.
        public var value: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/AllowScFileUploads/actor`.
        public var actor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AllowScFileUploads/source`.
        public var source: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AllowScFileUploads/type`.
        public var type: Components.Schemas._Type?
        /// - Remark: Generated from `#/components/schemas/AllowScFileUploads/dateUpdate`.
        public var dateUpdate: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/AllowScFileUploads/approvalType`.
        public var approvalType: Swift.String?
        /// Creates a new `AllowScFileUploads`.
        ///
        /// - Parameters:
        ///   - value:
        ///   - actor:
        ///   - source:
        ///   - type:
        ///   - dateUpdate:
        ///   - approvalType:
        public init(
            value: Swift.Bool? = nil,
            actor: Swift.String? = nil,
            source: Swift.String? = nil,
            type: Components.Schemas._Type? = nil,
            dateUpdate: Swift.Int? = nil,
            approvalType: Swift.String? = nil
        ) {
            self.value = value
            self.actor = actor
            self.source = source
            self.type = type
            self.dateUpdate = dateUpdate
            self.approvalType = approvalType
        }
    }
    /// - Remark: Generated from `#/components/schemas/AllowedWorkspaces`.
    public struct AllowedWorkspaces: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/AllowedWorkspaces/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AllowedWorkspaces/actor`.
        public var actor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AllowedWorkspaces/source`.
        public var source: Swift.String?
        /// - Remark: Generated from `#/components/schemas/AllowedWorkspaces/teamIds`.
        public var teamIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/AllowedWorkspaces/dateUpdate`.
        public var dateUpdate: Swift.Int?
        /// Creates a new `AllowedWorkspaces`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - actor:
        ///   - source:
        ///   - teamIds:
        ///   - dateUpdate:
        public init(
            type: Swift.String? = nil,
            actor: Swift.String? = nil,
            source: Swift.String? = nil,
            teamIds: [Swift.String]? = nil,
            dateUpdate: Swift.Int? = nil
        ) {
            self.type = type
            self.actor = actor
            self.source = source
            self.teamIds = teamIds
            self.dateUpdate = dateUpdate
        }
    }
    /// - Remark: Generated from `#/components/schemas/ScMpdmToPrivate`.
    public struct ScMpdmToPrivate: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ScMpdmToPrivate/type`.
        public var type: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ScMpdmToPrivate/actor`.
        public var actor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ScMpdmToPrivate/source`.
        public var source: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ScMpdmToPrivate/acceptInWorkspaceId`.
        public var acceptInWorkspaceId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ScMpdmToPrivate/invalidWorkspaceIds`.
        public var invalidWorkspaceIds: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/ScMpdmToPrivate/dateUpdate`.
        public var dateUpdate: Swift.Int?
        /// Creates a new `ScMpdmToPrivate`.
        ///
        /// - Parameters:
        ///   - type:
        ///   - actor:
        ///   - source:
        ///   - acceptInWorkspaceId:
        ///   - invalidWorkspaceIds:
        ///   - dateUpdate:
        public init(
            type: Swift.String? = nil,
            actor: Swift.String? = nil,
            source: Swift.String? = nil,
            acceptInWorkspaceId: Swift.String? = nil,
            invalidWorkspaceIds: [Swift.String]? = nil,
            dateUpdate: Swift.Int? = nil
        ) {
            self.type = type
            self.actor = actor
            self.source = source
            self.acceptInWorkspaceId = acceptInWorkspaceId
            self.invalidWorkspaceIds = invalidWorkspaceIds
            self.dateUpdate = dateUpdate
        }
    }
    /// - Remark: Generated from `#/components/schemas/SharedChannelInviteRequested`.
    public struct SharedChannelInviteRequested: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/SharedChannelInviteRequested/enabled`.
        public var enabled: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/SharedChannelInviteRequested/actor`.
        public var actor: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SharedChannelInviteRequested/source`.
        public var source: Swift.String?
        /// - Remark: Generated from `#/components/schemas/SharedChannelInviteRequested/usergroupInclude`.
        public var usergroupInclude: Components.Schemas.UsergroupClude?
        /// - Remark: Generated from `#/components/schemas/SharedChannelInviteRequested/usergroupExclude`.
        public var usergroupExclude: Components.Schemas.UsergroupClude?
        /// - Remark: Generated from `#/components/schemas/SharedChannelInviteRequested/approvalDestination`.
        public var approvalDestination: Components.Schemas.ApprovalDestination?
        /// - Remark: Generated from `#/components/schemas/SharedChannelInviteRequested/dateUpdate`.
        public var dateUpdate: Swift.Int?
        /// Creates a new `SharedChannelInviteRequested`.
        ///
        /// - Parameters:
        ///   - enabled:
        ///   - actor:
        ///   - source:
        ///   - usergroupInclude:
        ///   - usergroupExclude:
        ///   - approvalDestination:
        ///   - dateUpdate:
        public init(
            enabled: Swift.Bool? = nil,
            actor: Swift.String? = nil,
            source: Swift.String? = nil,
            usergroupInclude: Components.Schemas.UsergroupClude? = nil,
            usergroupExclude: Components.Schemas.UsergroupClude? = nil,
            approvalDestination: Components.Schemas.ApprovalDestination? = nil,
            dateUpdate: Swift.Int? = nil
        ) {
            self.enabled = enabled
            self.actor = actor
            self.source = source
            self.usergroupInclude = usergroupInclude
            self.usergroupExclude = usergroupExclude
            self.approvalDestination = approvalDestination
            self.dateUpdate = dateUpdate
        }
    }
    /// - Remark: Generated from `#/components/schemas/ApprovalDestination`.
    public struct ApprovalDestination: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ApprovalDestination/allWhoCanManageSharedChannels`.
        public var allWhoCanManageSharedChannels: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/ApprovalDestination/channelId`.
        public var channelId: Swift.String?
        /// Creates a new `ApprovalDestination`.
        ///
        /// - Parameters:
        ///   - allWhoCanManageSharedChannels:
        ///   - channelId:
        public init(
            allWhoCanManageSharedChannels: Swift.Bool? = nil,
            channelId: Swift.String? = nil
        ) {
            self.allWhoCanManageSharedChannels = allWhoCanManageSharedChannels
            self.channelId = channelId
        }
    }
    /// - Remark: Generated from `#/components/schemas/UsergroupClude`.
    public struct UsergroupClude: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsergroupClude/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsergroupClude/teamId`.
        public var teamId: Swift.String?
        /// Creates a new `UsergroupClude`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - teamId:
        public init(
            id: Swift.String? = nil,
            teamId: Swift.String? = nil
        ) {
            self.id = id
            self.teamId = teamId
        }
    }
    /// - Remark: Generated from `#/components/schemas/Type`.
    public struct _Type: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Type/value1`.
        public var value1: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Type/value2`.
        public var value2: Swift.String?
        /// Creates a new `_Type`.
        ///
        /// - Parameters:
        ///   - value1:
        ///   - value2:
        public init(
            value1: Swift.Bool? = nil,
            value2: Swift.String? = nil
        ) {
            self.value1 = value1
            self.value2 = value2
        }
        public init(from decoder: any Decoder) throws {
            var errors: [any Error] = []
            do {
                self.value1 = try decoder.decodeFromSingleValueContainer()
            } catch {
                errors.append(error)
            }
            do {
                self.value2 = try decoder.decodeFromSingleValueContainer()
            } catch {
                errors.append(error)
            }
            try Swift.DecodingError.verifyAtLeastOneSchemaIsNotNil(
                [
                    self.value1,
                    self.value2
                ],
                type: Self.self,
                codingPath: decoder.codingPath,
                errors: errors
            )
        }
        public func encode(to encoder: any Encoder) throws {
            try encoder.encodeFirstNonNilValueToSingleValueContainer([
                self.value1,
                self.value2
            ])
        }
    }
    /// - Remark: Generated from `#/components/schemas/Log`.
    public struct Log: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Log/date`.
        public var date: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/scope`.
        public var scope: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/channel`.
        public var channel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/reason`.
        public var reason: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/resolution`.
        public var resolution: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/userId`.
        public var userId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/userName`.
        public var userName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/changeType`.
        public var changeType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/appType`.
        public var appType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/appId`.
        public var appId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/rssFeed`.
        public var rssFeed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Log/rssFeedChangeType`.
        public var rssFeedChangeType: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/rssFeedTitle`.
        public var rssFeedTitle: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/rssFeedUrl`.
        public var rssFeedUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Log/serviceId`.
        public var serviceId: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Log/serviceType`.
        public var serviceType: Swift.String?
        /// Creates a new `Log`.
        ///
        /// - Parameters:
        ///   - date:
        ///   - scope:
        ///   - channel:
        ///   - reason:
        ///   - resolution:
        ///   - userId:
        ///   - userName:
        ///   - changeType:
        ///   - appType:
        ///   - appId:
        ///   - rssFeed:
        ///   - rssFeedChangeType:
        ///   - rssFeedTitle:
        ///   - rssFeedUrl:
        ///   - serviceId:
        ///   - serviceType:
        public init(
            date: Swift.String? = nil,
            scope: Swift.String? = nil,
            channel: Swift.String? = nil,
            reason: Swift.String? = nil,
            resolution: Swift.String? = nil,
            userId: Swift.String? = nil,
            userName: Swift.String? = nil,
            changeType: Swift.String? = nil,
            appType: Swift.String? = nil,
            appId: Swift.String? = nil,
            rssFeed: Swift.Bool? = nil,
            rssFeedChangeType: Swift.String? = nil,
            rssFeedTitle: Swift.String? = nil,
            rssFeedUrl: Swift.String? = nil,
            serviceId: Swift.Int? = nil,
            serviceType: Swift.String? = nil
        ) {
            self.date = date
            self.scope = scope
            self.channel = channel
            self.reason = reason
            self.resolution = resolution
            self.userId = userId
            self.userName = userName
            self.changeType = changeType
            self.appType = appType
            self.appId = appId
            self.rssFeed = rssFeed
            self.rssFeedChangeType = rssFeedChangeType
            self.rssFeedTitle = rssFeedTitle
            self.rssFeedUrl = rssFeedUrl
            self.serviceId = serviceId
            self.serviceType = serviceType
        }
    }
    /// - Remark: Generated from `#/components/schemas/EnterpriseUser`.
    public struct EnterpriseUser: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/EnterpriseUser/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/EnterpriseUser/teams`.
        public var teams: [Swift.String]?
        /// - Remark: Generated from `#/components/schemas/EnterpriseUser/enterpriseId`.
        public var enterpriseId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/EnterpriseUser/enterpriseName`.
        public var enterpriseName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/EnterpriseUser/isAdmin`.
        public var isAdmin: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/EnterpriseUser/isOwner`.
        public var isOwner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/EnterpriseUser/isPrimaryOwner`.
        public var isPrimaryOwner: Swift.Bool?
        /// Creates a new `EnterpriseUser`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - teams:
        ///   - enterpriseId:
        ///   - enterpriseName:
        ///   - isAdmin:
        ///   - isOwner:
        ///   - isPrimaryOwner:
        public init(
            id: Swift.String? = nil,
            teams: [Swift.String]? = nil,
            enterpriseId: Swift.String? = nil,
            enterpriseName: Swift.String? = nil,
            isAdmin: Swift.Bool? = nil,
            isOwner: Swift.Bool? = nil,
            isPrimaryOwner: Swift.Bool? = nil
        ) {
            self.id = id
            self.teams = teams
            self.enterpriseId = enterpriseId
            self.enterpriseName = enterpriseName
            self.isAdmin = isAdmin
            self.isOwner = isOwner
            self.isPrimaryOwner = isPrimaryOwner
        }
    }
    /// - Remark: Generated from `#/components/schemas/Member`.
    public struct Member: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/Member/id`.
        public var id: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/name`.
        public var name: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/deleted`.
        public var deleted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/color`.
        public var color: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/tz`.
        public var tz: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/profile`.
        public var profile: Components.Schemas.Profile?
        /// - Remark: Generated from `#/components/schemas/Member/updated`.
        public var updated: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Member/locale`.
        public var locale: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/teamId`.
        public var teamId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/realName`.
        public var realName: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/tzLabel`.
        public var tzLabel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/tzOffset`.
        public var tzOffset: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/Member/isAdmin`.
        public var isAdmin: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/isOwner`.
        public var isOwner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/isPrimaryOwner`.
        public var isPrimaryOwner: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/isRestricted`.
        public var isRestricted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/isUltraRestricted`.
        public var isUltraRestricted: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/isBot`.
        public var isBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/isAppUser`.
        public var isAppUser: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/isEmailConfirmed`.
        public var isEmailConfirmed: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/whoCanShareContactCard`.
        public var whoCanShareContactCard: Swift.String?
        /// - Remark: Generated from `#/components/schemas/Member/isWorkflowBot`.
        public var isWorkflowBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/has2fa`.
        public var has2fa: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/enterpriseUser`.
        public var enterpriseUser: Components.Schemas.EnterpriseUser?
        /// - Remark: Generated from `#/components/schemas/Member/isInvitedUser`.
        public var isInvitedUser: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/isConnectorBot`.
        public var isConnectorBot: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/Member/twoFactorType`.
        public var twoFactorType: Swift.String?
        /// Creates a new `Member`.
        ///
        /// - Parameters:
        ///   - id:
        ///   - name:
        ///   - deleted:
        ///   - color:
        ///   - tz:
        ///   - profile:
        ///   - updated:
        ///   - locale:
        ///   - teamId:
        ///   - realName:
        ///   - tzLabel:
        ///   - tzOffset:
        ///   - isAdmin:
        ///   - isOwner:
        ///   - isPrimaryOwner:
        ///   - isRestricted:
        ///   - isUltraRestricted:
        ///   - isBot:
        ///   - isAppUser:
        ///   - isEmailConfirmed:
        ///   - whoCanShareContactCard:
        ///   - isWorkflowBot:
        ///   - has2fa:
        ///   - enterpriseUser:
        ///   - isInvitedUser:
        ///   - isConnectorBot:
        ///   - twoFactorType:
        public init(
            id: Swift.String? = nil,
            name: Swift.String? = nil,
            deleted: Swift.Bool? = nil,
            color: Swift.String? = nil,
            tz: Swift.String? = nil,
            profile: Components.Schemas.Profile? = nil,
            updated: Swift.Int? = nil,
            locale: Swift.String? = nil,
            teamId: Swift.String? = nil,
            realName: Swift.String? = nil,
            tzLabel: Swift.String? = nil,
            tzOffset: Swift.Int? = nil,
            isAdmin: Swift.Bool? = nil,
            isOwner: Swift.Bool? = nil,
            isPrimaryOwner: Swift.Bool? = nil,
            isRestricted: Swift.Bool? = nil,
            isUltraRestricted: Swift.Bool? = nil,
            isBot: Swift.Bool? = nil,
            isAppUser: Swift.Bool? = nil,
            isEmailConfirmed: Swift.Bool? = nil,
            whoCanShareContactCard: Swift.String? = nil,
            isWorkflowBot: Swift.Bool? = nil,
            has2fa: Swift.Bool? = nil,
            enterpriseUser: Components.Schemas.EnterpriseUser? = nil,
            isInvitedUser: Swift.Bool? = nil,
            isConnectorBot: Swift.Bool? = nil,
            twoFactorType: Swift.String? = nil
        ) {
            self.id = id
            self.name = name
            self.deleted = deleted
            self.color = color
            self.tz = tz
            self.profile = profile
            self.updated = updated
            self.locale = locale
            self.teamId = teamId
            self.realName = realName
            self.tzLabel = tzLabel
            self.tzOffset = tzOffset
            self.isAdmin = isAdmin
            self.isOwner = isOwner
            self.isPrimaryOwner = isPrimaryOwner
            self.isRestricted = isRestricted
            self.isUltraRestricted = isUltraRestricted
            self.isBot = isBot
            self.isAppUser = isAppUser
            self.isEmailConfirmed = isEmailConfirmed
            self.whoCanShareContactCard = whoCanShareContactCard
            self.isWorkflowBot = isWorkflowBot
            self.has2fa = has2fa
            self.enterpriseUser = enterpriseUser
            self.isInvitedUser = isInvitedUser
            self.isConnectorBot = isConnectorBot
            self.twoFactorType = twoFactorType
        }
    }
}
