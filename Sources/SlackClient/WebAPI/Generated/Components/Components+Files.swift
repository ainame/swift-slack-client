// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_Files
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/FilesCommentsAddResponse`.
    public struct FilesCommentsAddResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesCommentsAddResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesCommentsAddResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCommentsAddResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCommentsAddResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCommentsAddResponse/reqMethod`.
        public var reqMethod: Swift.String?
        /// Creates a new `FilesCommentsAddResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - error:
        ///   - needed:
        ///   - provided:
        ///   - reqMethod:
        public init(
            ok: Swift.Bool,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil,
            reqMethod: Swift.String? = nil
        ) {
            self.ok = ok
            self.error = error
            self.needed = needed
            self.provided = provided
            self.reqMethod = reqMethod
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case error
            case needed
            case provided
            case reqMethod
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesCommentsDeleteResponse`.
    public struct FilesCommentsDeleteResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesCommentsDeleteResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesCommentsDeleteResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCommentsDeleteResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCommentsDeleteResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesCommentsDeleteResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesCommentsEditResponse`.
    public struct FilesCommentsEditResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesCommentsEditResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesCommentsEditResponse/comment`.
        public var comment: Components.Schemas.Comment?
        /// - Remark: Generated from `#/components/schemas/FilesCommentsEditResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCommentsEditResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCommentsEditResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesCommentsEditResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - comment:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            comment: Components.Schemas.Comment? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.comment = comment
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case comment
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse`.
    public struct FilesCompleteUploadExternalResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/files`.
        public var files: [Components.Schemas.File]?
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/responseMetadata`.
        public var responseMetadata: Components.Schemas.ResponseMetadata?
        /// Creates a new `FilesCompleteUploadExternalResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - files:
        ///   - error:
        ///   - needed:
        ///   - provided:
        ///   - responseMetadata:
        public init(
            ok: Swift.Bool,
            files: [Components.Schemas.File]? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil,
            responseMetadata: Components.Schemas.ResponseMetadata? = nil
        ) {
            self.ok = ok
            self.files = files
            self.error = error
            self.needed = needed
            self.provided = provided
            self.responseMetadata = responseMetadata
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case files
            case error
            case needed
            case provided
            case responseMetadata
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse`.
    public struct FilesDeleteResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesDeleteResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse`.
    public struct FilesGetUploadURLExternalResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/uploadUrl`.
        public var uploadUrl: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/fileId`.
        public var fileId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/responseMetadata`.
        public var responseMetadata: Components.Schemas.ResponseMetadata?
        /// Creates a new `FilesGetUploadURLExternalResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - error:
        ///   - needed:
        ///   - provided:
        ///   - uploadUrl:
        ///   - fileId:
        ///   - responseMetadata:
        public init(
            ok: Swift.Bool,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil,
            uploadUrl: Swift.String? = nil,
            fileId: Swift.String? = nil,
            responseMetadata: Components.Schemas.ResponseMetadata? = nil
        ) {
            self.ok = ok
            self.error = error
            self.needed = needed
            self.provided = provided
            self.uploadUrl = uploadUrl
            self.fileId = fileId
            self.responseMetadata = responseMetadata
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case error
            case needed
            case provided
            case uploadUrl
            case fileId
            case responseMetadata
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesInfoResponse`.
    public struct FilesInfoResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/file`.
        public var file: Components.Schemas.File?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/content`.
        public var content: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/comments`.
        public var comments: [Components.Schemas.Comment]?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/paging`.
        public var paging: Components.Schemas.Paging?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/isTruncated`.
        public var isTruncated: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/contentHighlightHtml`.
        public var contentHighlightHtml: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/contentHighlightCss`.
        public var contentHighlightCss: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/contentHighlightHtmlTruncated`.
        public var contentHighlightHtmlTruncated: Swift.Bool?
        /// Creates a new `FilesInfoResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - file:
        ///   - content:
        ///   - comments:
        ///   - paging:
        ///   - error:
        ///   - needed:
        ///   - provided:
        ///   - isTruncated:
        ///   - contentHighlightHtml:
        ///   - contentHighlightCss:
        ///   - contentHighlightHtmlTruncated:
        public init(
            ok: Swift.Bool,
            file: Components.Schemas.File? = nil,
            content: Swift.String? = nil,
            comments: [Components.Schemas.Comment]? = nil,
            paging: Components.Schemas.Paging? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil,
            isTruncated: Swift.Bool? = nil,
            contentHighlightHtml: Swift.String? = nil,
            contentHighlightCss: Swift.String? = nil,
            contentHighlightHtmlTruncated: Swift.Bool? = nil
        ) {
            self.ok = ok
            self.file = file
            self.content = content
            self.comments = comments
            self.paging = paging
            self.error = error
            self.needed = needed
            self.provided = provided
            self.isTruncated = isTruncated
            self.contentHighlightHtml = contentHighlightHtml
            self.contentHighlightCss = contentHighlightCss
            self.contentHighlightHtmlTruncated = contentHighlightHtmlTruncated
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case file
            case content
            case comments
            case paging
            case error
            case needed
            case provided
            case isTruncated
            case contentHighlightHtml
            case contentHighlightCss
            case contentHighlightHtmlTruncated
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesListResponse`.
    public struct FilesListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/files`.
        public var files: [Components.Schemas.File]?
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/paging`.
        public var paging: Components.Schemas.Paging?
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesListResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - files:
        ///   - paging:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            files: [Components.Schemas.File]? = nil,
            paging: Components.Schemas.Paging? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.files = files
            self.paging = paging
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case files
            case paging
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse`.
    public struct FilesRemoteAddResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/file`.
        public var file: Components.Schemas.File?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteAddResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - file:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            file: Components.Schemas.File? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.file = file
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case file
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse`.
    public struct FilesRemoteInfoResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/file`.
        public var file: Components.Schemas.File?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteInfoResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - file:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            file: Components.Schemas.File? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.file = file
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case file
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse`.
    public struct FilesRemoteListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/files`.
        public var files: [Components.Schemas.File]?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/responseMetadata`.
        public var responseMetadata: Components.Schemas.ResponseMetadata?
        /// Creates a new `FilesRemoteListResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - files:
        ///   - error:
        ///   - needed:
        ///   - provided:
        ///   - responseMetadata:
        public init(
            ok: Swift.Bool,
            files: [Components.Schemas.File]? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil,
            responseMetadata: Components.Schemas.ResponseMetadata? = nil
        ) {
            self.ok = ok
            self.files = files
            self.error = error
            self.needed = needed
            self.provided = provided
            self.responseMetadata = responseMetadata
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case files
            case error
            case needed
            case provided
            case responseMetadata
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse`.
    public struct FilesRemoteRemoveResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteRemoveResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse`.
    public struct FilesRemoteShareResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/file`.
        public var file: Components.Schemas.File?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteShareResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - file:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            file: Components.Schemas.File? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.file = file
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case file
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse`.
    public struct FilesRemoteUpdateResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/file`.
        public var file: Components.Schemas.File?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteUpdateResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - file:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            file: Components.Schemas.File? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.file = file
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case file
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse`.
    public struct FilesRevokePublicURLResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/file`.
        public var file: Components.Schemas.File?
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRevokePublicURLResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - file:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            file: Components.Schemas.File? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.file = file
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case file
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse`.
    public struct FilesSharedPublicURLResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/file`.
        public var file: Components.Schemas.File?
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesSharedPublicURLResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - file:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            file: Components.Schemas.File? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.file = file
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case file
            case error
            case needed
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/FilesUploadResponse`.
    public struct FilesUploadResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/file`.
        public var file: Components.Schemas.File?
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesUploadResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - file:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            file: Components.Schemas.File? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.file = file
            self.error = error
            self.needed = needed
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case ok
            case file
            case error
            case needed
            case provided
        }
    }
}
#endif
