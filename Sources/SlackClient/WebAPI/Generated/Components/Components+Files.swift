// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
@preconcurrency import struct Foundation.URL
#else
import struct Foundation.Data
import struct Foundation.Date
import struct Foundation.URL
#endif

#if canImport(SlackModels)
import SlackModels
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_Files
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse`.
    public struct FilesCompleteUploadExternalResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/files`.
        public var files: [SlackModels.File]?
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesCompleteUploadExternalResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// Creates a new `FilesCompleteUploadExternalResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - files:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - responseMetadata:
        public init(
            error: Swift.String? = nil,
            files: [SlackModels.File]? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil
        ) {
            self.error = error
            self.files = files
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.responseMetadata = responseMetadata
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case files
            case needed
            case ok
            case provided
            case responseMetadata = "response_metadata"
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse`.
    public struct FilesDeleteResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesDeleteResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesDeleteResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse`.
    public struct FilesGetUploadURLExternalResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/file_id`.
        public var fileId: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// - Remark: Generated from `#/components/schemas/FilesGetUploadURLExternalResponse/upload_url`.
        public var uploadUrl: Swift.String?
        /// Creates a new `FilesGetUploadURLExternalResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - fileId:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - responseMetadata:
        ///   - uploadUrl:
        public init(
            error: Swift.String? = nil,
            fileId: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil,
            uploadUrl: Swift.String? = nil
        ) {
            self.error = error
            self.fileId = fileId
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.responseMetadata = responseMetadata
            self.uploadUrl = uploadUrl
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case fileId = "file_id"
            case needed
            case ok
            case provided
            case responseMetadata = "response_metadata"
            case uploadUrl = "upload_url"
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesInfoResponse`.
    public struct FilesInfoResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/comments`.
        public var comments: [SlackModels.Comment]?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/content`.
        public var content: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/content_highlight_css`.
        public var contentHighlightCss: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/content_highlight_html`.
        public var contentHighlightHtml: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/content_highlight_html_truncated`.
        public var contentHighlightHtmlTruncated: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/file`.
        public var file: SlackModels.File?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/is_truncated`.
        public var isTruncated: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/paging`.
        public var paging: SlackModels.Paging?
        /// - Remark: Generated from `#/components/schemas/FilesInfoResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesInfoResponse`.
        ///
        /// - Parameters:
        ///   - comments:
        ///   - content:
        ///   - contentHighlightCss:
        ///   - contentHighlightHtml:
        ///   - contentHighlightHtmlTruncated:
        ///   - error:
        ///   - file:
        ///   - isTruncated:
        ///   - needed:
        ///   - ok:
        ///   - paging:
        ///   - provided:
        public init(
            comments: [SlackModels.Comment]? = nil,
            content: Swift.String? = nil,
            contentHighlightCss: Swift.String? = nil,
            contentHighlightHtml: Swift.String? = nil,
            contentHighlightHtmlTruncated: Swift.Bool? = nil,
            error: Swift.String? = nil,
            file: SlackModels.File? = nil,
            isTruncated: Swift.Bool? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            paging: SlackModels.Paging? = nil,
            provided: Swift.String? = nil
        ) {
            self.comments = comments
            self.content = content
            self.contentHighlightCss = contentHighlightCss
            self.contentHighlightHtml = contentHighlightHtml
            self.contentHighlightHtmlTruncated = contentHighlightHtmlTruncated
            self.error = error
            self.file = file
            self.isTruncated = isTruncated
            self.needed = needed
            self.ok = ok
            self.paging = paging
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case comments
            case content
            case contentHighlightCss = "content_highlight_css"
            case contentHighlightHtml = "content_highlight_html"
            case contentHighlightHtmlTruncated = "content_highlight_html_truncated"
            case error
            case file
            case isTruncated = "is_truncated"
            case needed
            case ok
            case paging
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesListResponse`.
    public struct FilesListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/files`.
        public var files: [SlackModels.File]?
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/paging`.
        public var paging: SlackModels.Paging?
        /// - Remark: Generated from `#/components/schemas/FilesListResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesListResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - files:
        ///   - needed:
        ///   - ok:
        ///   - paging:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            files: [SlackModels.File]? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            paging: SlackModels.Paging? = nil,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.files = files
            self.needed = needed
            self.ok = ok
            self.paging = paging
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case files
            case needed
            case ok
            case paging
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse`.
    public struct FilesRemoteAddResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/file`.
        public var file: SlackModels.File?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteAddResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteAddResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - file:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            file: SlackModels.File? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.file = file
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case file
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse`.
    public struct FilesRemoteInfoResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/file`.
        public var file: SlackModels.File?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteInfoResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteInfoResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - file:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            file: SlackModels.File? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.file = file
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case file
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse`.
    public struct FilesRemoteListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/files`.
        public var files: [SlackModels.File]?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteListResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// Creates a new `FilesRemoteListResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - files:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - responseMetadata:
        public init(
            error: Swift.String? = nil,
            files: [SlackModels.File]? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil
        ) {
            self.error = error
            self.files = files
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.responseMetadata = responseMetadata
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case files
            case needed
            case ok
            case provided
            case responseMetadata = "response_metadata"
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse`.
    public struct FilesRemoteRemoveResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteRemoveResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteRemoveResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse`.
    public struct FilesRemoteShareResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/file`.
        public var file: SlackModels.File?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteShareResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteShareResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - file:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            file: SlackModels.File? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.file = file
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case file
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse`.
    public struct FilesRemoteUpdateResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/file`.
        public var file: SlackModels.File?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRemoteUpdateResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRemoteUpdateResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - file:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            file: SlackModels.File? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.file = file
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case file
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse`.
    public struct FilesRevokePublicURLResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/file`.
        public var file: SlackModels.File?
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesRevokePublicURLResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesRevokePublicURLResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - file:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            file: SlackModels.File? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.file = file
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case file
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse`.
    public struct FilesSharedPublicURLResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/file`.
        public var file: SlackModels.File?
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesSharedPublicURLResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesSharedPublicURLResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - file:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            file: SlackModels.File? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.file = file
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case file
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/FilesUploadResponse`.
    public struct FilesUploadResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/file`.
        public var file: SlackModels.File?
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/FilesUploadResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `FilesUploadResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - file:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            file: SlackModels.File? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.file = file
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case file
            case needed
            case ok
            case provided
        }
    }
}
#endif
