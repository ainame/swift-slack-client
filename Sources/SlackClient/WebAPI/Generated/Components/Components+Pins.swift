// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
@preconcurrency import struct Foundation.URL
#else
import struct Foundation.Data
import struct Foundation.Date
import struct Foundation.URL
#endif

#if canImport(SlackModels)
import SlackModels
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_Pins
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/PinsAddResponse`.
    public struct PinsAddResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/PinsAddResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/PinsAddResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/PinsAddResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/PinsAddResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `PinsAddResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/PinsListResponse`.
    public struct PinsListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/PinsListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/PinsListResponse/items`.
        public var items: [SlackModels.Item]?
        /// - Remark: Generated from `#/components/schemas/PinsListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/PinsListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/PinsListResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `PinsListResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - items:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            items: [SlackModels.Item]? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
        ) {
            self.error = error
            self.items = items
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case items
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/PinsRemoveResponse`.
    public struct PinsRemoveResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/PinsRemoveResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/PinsRemoveResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/PinsRemoveResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/PinsRemoveResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `PinsRemoveResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }
}
#endif
