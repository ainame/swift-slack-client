// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
@preconcurrency import struct Foundation.URL
#else
import struct Foundation.Data
import struct Foundation.Date
import struct Foundation.URL
#endif

#if canImport(SlackModels)
import SlackModels
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_Emoji
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/EmojiListResponse`.
    public struct EmojiListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/EmojiListResponse/cache_ts`.
        public var cacheTs: Swift.String?
        /// - Remark: Generated from `#/components/schemas/EmojiListResponse/categories`.
        public var categories: [SlackModels.Category]?
        /// - Remark: Generated from `#/components/schemas/EmojiListResponse/categories_version`.
        public var categoriesVersion: Swift.String?
        /// - Remark: Generated from `#/components/schemas/EmojiListResponse/emoji`.
        public var emoji: OpenAPIRuntime.OpenAPIObjectContainer?
        /// - Remark: Generated from `#/components/schemas/EmojiListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/EmojiListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/EmojiListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/EmojiListResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `EmojiListResponse`.
        ///
        /// - Parameters:
        ///   - cacheTs:
        ///   - categories:
        ///   - categoriesVersion:
        ///   - emoji:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            cacheTs: Swift.String? = nil,
            categories: [SlackModels.Category]? = nil,
            categoriesVersion: Swift.String? = nil,
            emoji: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
        ) {
            self.cacheTs = cacheTs
            self.categories = categories
            self.categoriesVersion = categoriesVersion
            self.emoji = emoji
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case cacheTs = "cache_ts"
            case categories
            case categoriesVersion = "categories_version"
            case emoji
            case error
            case needed
            case ok
            case provided
        }
    }
}
#endif
