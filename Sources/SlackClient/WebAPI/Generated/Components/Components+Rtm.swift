// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_RTM
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/RtmConnectResponse`.
    public struct RtmConnectResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RtmConnectResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/RtmConnectResponse/url`.
        public var url: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RtmConnectResponse/team`.
        public var team: Components.Schemas.Team?
        /// - Remark: Generated from `#/components/schemas/RtmConnectResponse/self`.
        public var _self: Components.Schemas._Self?
        /// - Remark: Generated from `#/components/schemas/RtmConnectResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RtmConnectResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RtmConnectResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `RtmConnectResponse`.
        ///
        /// - Parameters:
        ///   - ok:
        ///   - url:
        ///   - team:
        ///   - _self:
        ///   - error:
        ///   - needed:
        ///   - provided:
        public init(
            ok: Swift.Bool,
            url: Swift.String? = nil,
            team: Components.Schemas.Team? = nil,
            _self: Components.Schemas._Self? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            provided: Swift.String? = nil
        ) {
            self.ok = ok
            self.url = url
            self.team = team
            self._self = _self
            self.error = error
            self.needed = needed
            self.provided = provided
        }
    }
}
#endif
