// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif

#if canImport(SlackModels)
import SlackModels
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_Reactions
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/ReactionsAddResponse`.
    public struct ReactionsAddResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ReactionsAddResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsAddResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsAddResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/ReactionsAddResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `ReactionsAddResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/ReactionsGetResponse`.
    public struct ReactionsGetResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ReactionsGetResponse/channel`.
        public var channel: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsGetResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsGetResponse/message`.
        public var message: SlackModels.Message?
        /// - Remark: Generated from `#/components/schemas/ReactionsGetResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsGetResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/ReactionsGetResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsGetResponse/type`.
        public var _type: Swift.String
        /// Creates a new `ReactionsGetResponse`.
        ///
        /// - Parameters:
        ///   - channel:
        ///   - error:
        ///   - message:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - _type:
        public init(
            channel: Swift.String? = nil,
            error: Swift.String? = nil,
            message: SlackModels.Message? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            _type: Swift.String
        ) {
            self.channel = channel
            self.error = error
            self.message = message
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self._type = _type
        }
        public enum CodingKeys: String, CodingKey {
            case channel
            case error
            case message
            case needed
            case ok
            case provided
            case _type = "type"
        }
    }
    /// - Remark: Generated from `#/components/schemas/ReactionsListResponse`.
    public struct ReactionsListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ReactionsListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsListResponse/items`.
        public var items: [SlackModels.Item]?
        /// - Remark: Generated from `#/components/schemas/ReactionsListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/ReactionsListResponse/paging`.
        public var paging: SlackModels.Paging?
        /// - Remark: Generated from `#/components/schemas/ReactionsListResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsListResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// Creates a new `ReactionsListResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - items:
        ///   - needed:
        ///   - ok:
        ///   - paging:
        ///   - provided:
        ///   - responseMetadata:
        public init(
            error: Swift.String? = nil,
            items: [SlackModels.Item]? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            paging: SlackModels.Paging? = nil,
            provided: Swift.String? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil
        ) {
            self.error = error
            self.items = items
            self.needed = needed
            self.ok = ok
            self.paging = paging
            self.provided = provided
            self.responseMetadata = responseMetadata
        }
        public enum CodingKeys: String, CodingKey {
            case error
            case items
            case needed
            case ok
            case paging
            case provided
            case responseMetadata = "response_metadata"
        }
    }
    /// - Remark: Generated from `#/components/schemas/ReactionsRemoveResponse`.
    public struct ReactionsRemoveResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/ReactionsRemoveResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsRemoveResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/ReactionsRemoveResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/ReactionsRemoveResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `ReactionsRemoveResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }
}
#endif
