// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
@preconcurrency import struct Foundation.URL
#else
import struct Foundation.Data
import struct Foundation.Date
import struct Foundation.URL
#endif

#if canImport(SlackModels)
import SlackModels
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_Users
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/UsersConversationsResponse`.
    public struct UsersConversationsResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersConversationsResponse/channels`.
        public var channels: [SlackModels.Channel]?
        /// - Remark: Generated from `#/components/schemas/UsersConversationsResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersConversationsResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersConversationsResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersConversationsResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersConversationsResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// Creates a new `UsersConversationsResponse`.
        ///
        /// - Parameters:
        ///   - channels:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - responseMetadata:
        public init(
            channels: [SlackModels.Channel]? = nil,
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil
        ) {
            self.channels = channels
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.responseMetadata = responseMetadata
        }

        public enum CodingKeys: String, CodingKey {
            case channels
            case error
            case needed
            case ok
            case provided
            case responseMetadata = "response_metadata"
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersDeletePhotoResponse`.
    public struct UsersDeletePhotoResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersDeletePhotoResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersDeletePhotoResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersDeletePhotoResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersDeletePhotoResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `UsersDeletePhotoResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersDiscoverableContactsLookupResponse`.
    public struct UsersDiscoverableContactsLookupResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersDiscoverableContactsLookupResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersDiscoverableContactsLookupResponse/is_discoverable`.
        public var isDiscoverable: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/UsersDiscoverableContactsLookupResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersDiscoverableContactsLookupResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersDiscoverableContactsLookupResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersDiscoverableContactsLookupResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// Creates a new `UsersDiscoverableContactsLookupResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - isDiscoverable:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - responseMetadata:
        public init(
            error: Swift.String? = nil,
            isDiscoverable: Swift.Bool? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil
        ) {
            self.error = error
            self.isDiscoverable = isDiscoverable
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.responseMetadata = responseMetadata
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case isDiscoverable = "is_discoverable"
            case needed
            case ok
            case provided
            case responseMetadata = "response_metadata"
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse`.
    public struct UsersGetPresenceResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/auto_away`.
        public var autoAway: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/connection_count`.
        public var connectionCount: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/last_activity`.
        public var lastActivity: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/manual_away`.
        public var manualAway: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/online`.
        public var online: Swift.Bool?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/presence`.
        public var presence: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersGetPresenceResponse/warning`.
        public var warning: Swift.String?
        /// Creates a new `UsersGetPresenceResponse`.
        ///
        /// - Parameters:
        ///   - autoAway:
        ///   - connectionCount:
        ///   - error:
        ///   - lastActivity:
        ///   - manualAway:
        ///   - needed:
        ///   - ok:
        ///   - online:
        ///   - presence:
        ///   - provided:
        ///   - warning:
        public init(
            autoAway: Swift.Bool? = nil,
            connectionCount: Swift.Int? = nil,
            error: Swift.String? = nil,
            lastActivity: Swift.Int? = nil,
            manualAway: Swift.Bool? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            online: Swift.Bool? = nil,
            presence: Swift.String? = nil,
            provided: Swift.String? = nil,
            warning: Swift.String? = nil
        ) {
            self.autoAway = autoAway
            self.connectionCount = connectionCount
            self.error = error
            self.lastActivity = lastActivity
            self.manualAway = manualAway
            self.needed = needed
            self.ok = ok
            self.online = online
            self.presence = presence
            self.provided = provided
            self.warning = warning
        }

        public enum CodingKeys: String, CodingKey {
            case autoAway = "auto_away"
            case connectionCount = "connection_count"
            case error
            case lastActivity = "last_activity"
            case manualAway = "manual_away"
            case needed
            case ok
            case online
            case presence
            case provided
            case warning
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersIdentityResponse`.
    public struct UsersIdentityResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersIdentityResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersIdentityResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersIdentityResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersIdentityResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersIdentityResponse/team`.
        public var team: SlackModels.Team?
        /// - Remark: Generated from `#/components/schemas/UsersIdentityResponse/user`.
        public var user: SlackModels.User?
        /// - Remark: Generated from `#/components/schemas/UsersIdentityResponse/warning`.
        public var warning: Swift.String?
        /// Creates a new `UsersIdentityResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - team:
        ///   - user:
        ///   - warning:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            team: SlackModels.Team? = nil,
            user: SlackModels.User? = nil,
            warning: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.team = team
            self.user = user
            self.warning = warning
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
            case team
            case user
            case warning
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersInfoResponse`.
    public struct UsersInfoResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersInfoResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersInfoResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersInfoResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersInfoResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersInfoResponse/user`.
        public var user: SlackModels.User?
        /// Creates a new `UsersInfoResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - user:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            user: SlackModels.User? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.user = user
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
            case user
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersListResponse`.
    public struct UsersListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/arg`.
        public var arg: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/cache_ts`.
        public var cacheTs: Swift.Int?
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/members`.
        public var members: [SlackModels.Member]?
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/offset`.
        public var offset: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersListResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// Creates a new `UsersListResponse`.
        ///
        /// - Parameters:
        ///   - arg:
        ///   - cacheTs:
        ///   - error:
        ///   - members:
        ///   - needed:
        ///   - offset:
        ///   - ok:
        ///   - provided:
        ///   - responseMetadata:
        public init(
            arg: Swift.String? = nil,
            cacheTs: Swift.Int? = nil,
            error: Swift.String? = nil,
            members: [SlackModels.Member]? = nil,
            needed: Swift.String? = nil,
            offset: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil
        ) {
            self.arg = arg
            self.cacheTs = cacheTs
            self.error = error
            self.members = members
            self.needed = needed
            self.offset = offset
            self.ok = ok
            self.provided = provided
            self.responseMetadata = responseMetadata
        }

        public enum CodingKeys: String, CodingKey {
            case arg
            case cacheTs = "cache_ts"
            case error
            case members
            case needed
            case offset
            case ok
            case provided
            case responseMetadata = "response_metadata"
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersLookupByEmailResponse`.
    public struct UsersLookupByEmailResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersLookupByEmailResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersLookupByEmailResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersLookupByEmailResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersLookupByEmailResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersLookupByEmailResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// - Remark: Generated from `#/components/schemas/UsersLookupByEmailResponse/user`.
        public var user: SlackModels.User?
        /// Creates a new `UsersLookupByEmailResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - responseMetadata:
        ///   - user:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil,
            user: SlackModels.User? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.responseMetadata = responseMetadata
            self.user = user
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
            case responseMetadata = "response_metadata"
            case user
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersProfileGetResponse`.
    public struct UsersProfileGetResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersProfileGetResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersProfileGetResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersProfileGetResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersProfileGetResponse/profile`.
        public var profile: SlackModels.Profile?
        /// - Remark: Generated from `#/components/schemas/UsersProfileGetResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `UsersProfileGetResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - profile:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            profile: SlackModels.Profile? = nil,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.profile = profile
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case profile
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersProfileSetResponse`.
    public struct UsersProfileSetResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersProfileSetResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersProfileSetResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersProfileSetResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersProfileSetResponse/profile`.
        public var profile: SlackModels.Profile?
        /// - Remark: Generated from `#/components/schemas/UsersProfileSetResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersProfileSetResponse/username`.
        public var username: Swift.String?
        /// Creates a new `UsersProfileSetResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - profile:
        ///   - provided:
        ///   - username:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            profile: SlackModels.Profile? = nil,
            provided: Swift.String? = nil,
            username: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.profile = profile
            self.provided = provided
            self.username = username
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case profile
            case provided
            case username
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersSetActiveResponse`.
    public struct UsersSetActiveResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersSetActiveResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersSetActiveResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersSetActiveResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersSetActiveResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `UsersSetActiveResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersSetPhotoResponse`.
    public struct UsersSetPhotoResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersSetPhotoResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersSetPhotoResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersSetPhotoResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersSetPhotoResponse/profile`.
        public var profile: SlackModels.Profile?
        /// - Remark: Generated from `#/components/schemas/UsersSetPhotoResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `UsersSetPhotoResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - profile:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            profile: SlackModels.Profile? = nil,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.profile = profile
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case profile
            case provided
        }
    }

    /// - Remark: Generated from `#/components/schemas/UsersSetPresenceResponse`.
    public struct UsersSetPresenceResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/UsersSetPresenceResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersSetPresenceResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/UsersSetPresenceResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/UsersSetPresenceResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `UsersSetPresenceResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }

        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }
}
#endif
