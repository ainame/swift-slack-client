// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif

#if canImport(SlackModels)
import SlackModels
#endif
/// Types generated from the components section of the OpenAPI document.

#if WebAPI_Reminders
extension Components.Schemas {
    /// - Remark: Generated from `#/components/schemas/RemindersAddResponse`.
    public struct RemindersAddResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RemindersAddResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersAddResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersAddResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/RemindersAddResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersAddResponse/reminder`.
        public var reminder: SlackModels.Reminder?
        /// - Remark: Generated from `#/components/schemas/RemindersAddResponse/response_metadata`.
        public var responseMetadata: SlackModels.ResponseMetadata?
        /// Creates a new `RemindersAddResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - reminder:
        ///   - responseMetadata:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            reminder: SlackModels.Reminder? = nil,
            responseMetadata: SlackModels.ResponseMetadata? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.reminder = reminder
            self.responseMetadata = responseMetadata
        }
        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
            case reminder
            case responseMetadata = "response_metadata"
        }
    }
    /// - Remark: Generated from `#/components/schemas/RemindersCompleteResponse`.
    public struct RemindersCompleteResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RemindersCompleteResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersCompleteResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersCompleteResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/RemindersCompleteResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `RemindersCompleteResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/RemindersDeleteResponse`.
    public struct RemindersDeleteResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RemindersDeleteResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersDeleteResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersDeleteResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/RemindersDeleteResponse/provided`.
        public var provided: Swift.String?
        /// Creates a new `RemindersDeleteResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
        }
        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
        }
    }
    /// - Remark: Generated from `#/components/schemas/RemindersInfoResponse`.
    public struct RemindersInfoResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RemindersInfoResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersInfoResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersInfoResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/RemindersInfoResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersInfoResponse/reminder`.
        public var reminder: SlackModels.Reminder?
        /// Creates a new `RemindersInfoResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - reminder:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            reminder: SlackModels.Reminder? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.reminder = reminder
        }
        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
            case reminder
        }
    }
    /// - Remark: Generated from `#/components/schemas/RemindersListResponse`.
    public struct RemindersListResponse: Codable, Hashable, Sendable {
        /// - Remark: Generated from `#/components/schemas/RemindersListResponse/error`.
        public var error: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersListResponse/needed`.
        public var needed: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersListResponse/ok`.
        public var ok: Swift.Bool
        /// - Remark: Generated from `#/components/schemas/RemindersListResponse/provided`.
        public var provided: Swift.String?
        /// - Remark: Generated from `#/components/schemas/RemindersListResponse/reminders`.
        public var reminders: [SlackModels.Reminder]?
        /// Creates a new `RemindersListResponse`.
        ///
        /// - Parameters:
        ///   - error:
        ///   - needed:
        ///   - ok:
        ///   - provided:
        ///   - reminders:
        public init(
            error: Swift.String? = nil,
            needed: Swift.String? = nil,
            ok: Swift.Bool,
            provided: Swift.String? = nil,
            reminders: [SlackModels.Reminder]? = nil
        ) {
            self.error = error
            self.needed = needed
            self.ok = ok
            self.provided = provided
            self.reminders = reminders
        }
        public enum CodingKeys: String, CodingKey {
            case error
            case needed
            case ok
            case provided
            case reminders
        }
    }
}
#endif
