// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
@preconcurrency import struct Foundation.URL
#else
import struct Foundation.Data
import struct Foundation.Date
import struct Foundation.URL
#endif
/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.

#if WebAPI_Apps
extension Operations {
    public enum AppsConnectionsOpen {
        public static let id: Swift.String = "appsConnectionsOpen"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps.connections.open/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsConnectionsOpen.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsConnectionsOpen.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }

            public var headers: Operations.AppsConnectionsOpen.Input.Headers
            /// - Remark: Generated from `#/paths/apps.connections.open/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.connections.open/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// Creates a new `JsonPayload`.
                    public init() {}
                    public init(from decoder: any Decoder) throws {
                        try decoder.ensureNoAdditionalProperties(knownKeys: [])
                    }
                }

                /// - Remark: Generated from `#/paths/apps.connections.open/POST/requestBody/content/application\/json`.
                case json(Operations.AppsConnectionsOpen.Input.Body.JsonPayload)
            }

            public var body: Operations.AppsConnectionsOpen.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AppsConnectionsOpen.Input.Headers = .init(),
                body: Operations.AppsConnectionsOpen.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }

        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.connections.open/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps.connections.open/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsConnectionsOpenResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AppsConnectionsOpenResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                body
                            }
                        }
                    }
                }

                /// Received HTTP response body
                public var body: Operations.AppsConnectionsOpen.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppsConnectionsOpen.Output.Ok.Body) {
                    self.body = body
                }
            }

            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps.connections.open/post(appsConnectionsOpen)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppsConnectionsOpen.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppsConnectionsOpen.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self,
                        )
                    }
                }
            }

            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }

        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }

            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    string
                case .json:
                    "application/json"
                }
            }

            public static var allCases: [Self] {
                [
                    .json,
                ]
            }
        }
    }

    public enum AppsEventAuthorizationsList {
        public static let id: Swift.String = "appsEventAuthorizationsList"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsEventAuthorizationsList.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsEventAuthorizationsList.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }

            public var headers: Operations.AppsEventAuthorizationsList.Input.Headers
            /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// .
                    ///
                    /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/requestBody/json/event_context`.
                    public var eventContext: Swift.String
                    /// .
                    ///
                    /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/requestBody/json/cursor`.
                    public var cursor: Swift.String?
                    /// .
                    ///
                    /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/requestBody/json/limit`.
                    public var limit: Swift.Int?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - eventContext: .
                    ///   - cursor: .
                    ///   - limit: .
                    public init(
                        eventContext: Swift.String,
                        cursor: Swift.String? = nil,
                        limit: Swift.Int? = nil
                    ) {
                        self.eventContext = eventContext
                        self.cursor = cursor
                        self.limit = limit
                    }

                    public enum CodingKeys: String, CodingKey {
                        case eventContext = "event_context"
                        case cursor
                        case limit
                    }
                }

                /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/requestBody/content/application\/json`.
                case json(Operations.AppsEventAuthorizationsList.Input.Body.JsonPayload)
            }

            public var body: Operations.AppsEventAuthorizationsList.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AppsEventAuthorizationsList.Input.Headers = .init(),
                body: Operations.AppsEventAuthorizationsList.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }

        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps.event.authorizations.list/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsEventAuthorizationsListResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AppsEventAuthorizationsListResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                body
                            }
                        }
                    }
                }

                /// Received HTTP response body
                public var body: Operations.AppsEventAuthorizationsList.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppsEventAuthorizationsList.Output.Ok.Body) {
                    self.body = body
                }
            }

            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps.event.authorizations.list/post(appsEventAuthorizationsList)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppsEventAuthorizationsList.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppsEventAuthorizationsList.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self,
                        )
                    }
                }
            }

            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }

        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }

            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    string
                case .json:
                    "application/json"
                }
            }

            public static var allCases: [Self] {
                [
                    .json,
                ]
            }
        }
    }

    public enum AppsManifestCreate {
        public static let id: Swift.String = "appsManifestCreate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps.manifest.create/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestCreate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestCreate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }

            public var headers: Operations.AppsManifestCreate.Input.Headers
            /// - Remark: Generated from `#/paths/apps.manifest.create/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.create/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// A JSON app manifest encoded as a string. This manifest must use a valid app manifest schema - read our guide to creating one.
                    ///
                    /// - Remark: Generated from `#/paths/apps.manifest.create/POST/requestBody/json/manifest`.
                    public var manifest: OpenAPIRuntime.OpenAPIObjectContainer
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - manifest: A JSON app manifest encoded as a string. This manifest must use a valid app manifest schema - read our guide to creating one.
                    public init(manifest: OpenAPIRuntime.OpenAPIObjectContainer) {
                        self.manifest = manifest
                    }

                    public enum CodingKeys: String, CodingKey {
                        case manifest
                    }
                }

                /// - Remark: Generated from `#/paths/apps.manifest.create/POST/requestBody/content/application\/json`.
                case json(Operations.AppsManifestCreate.Input.Body.JsonPayload)
            }

            public var body: Operations.AppsManifestCreate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AppsManifestCreate.Input.Headers = .init(),
                body: Operations.AppsManifestCreate.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }

        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.create/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps.manifest.create/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsManifestCreateResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AppsManifestCreateResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                body
                            }
                        }
                    }
                }

                /// Received HTTP response body
                public var body: Operations.AppsManifestCreate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppsManifestCreate.Output.Ok.Body) {
                    self.body = body
                }
            }

            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps.manifest.create/post(appsManifestCreate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppsManifestCreate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppsManifestCreate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self,
                        )
                    }
                }
            }

            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }

        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }

            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    string
                case .json:
                    "application/json"
                }
            }

            public static var allCases: [Self] {
                [
                    .json,
                ]
            }
        }
    }

    public enum AppsManifestDelete {
        public static let id: Swift.String = "appsManifestDelete"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps.manifest.delete/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestDelete.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestDelete.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }

            public var headers: Operations.AppsManifestDelete.Input.Headers
            /// - Remark: Generated from `#/paths/apps.manifest.delete/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.delete/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// The ID of the app you want to delete.
                    ///
                    /// - Remark: Generated from `#/paths/apps.manifest.delete/POST/requestBody/json/app_id`.
                    public var appId: Swift.String
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - appId: The ID of the app you want to delete.
                    public init(appId: Swift.String) {
                        self.appId = appId
                    }

                    public enum CodingKeys: String, CodingKey {
                        case appId = "app_id"
                    }
                }

                /// - Remark: Generated from `#/paths/apps.manifest.delete/POST/requestBody/content/application\/json`.
                case json(Operations.AppsManifestDelete.Input.Body.JsonPayload)
            }

            public var body: Operations.AppsManifestDelete.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AppsManifestDelete.Input.Headers = .init(),
                body: Operations.AppsManifestDelete.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }

        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.delete/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps.manifest.delete/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsManifestDeleteResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AppsManifestDeleteResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                body
                            }
                        }
                    }
                }

                /// Received HTTP response body
                public var body: Operations.AppsManifestDelete.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppsManifestDelete.Output.Ok.Body) {
                    self.body = body
                }
            }

            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps.manifest.delete/post(appsManifestDelete)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppsManifestDelete.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppsManifestDelete.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self,
                        )
                    }
                }
            }

            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }

        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }

            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    string
                case .json:
                    "application/json"
                }
            }

            public static var allCases: [Self] {
                [
                    .json,
                ]
            }
        }
    }

    public enum AppsManifestExport {
        public static let id: Swift.String = "appsManifestExport"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps.manifest.export/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestExport.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestExport.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }

            public var headers: Operations.AppsManifestExport.Input.Headers
            /// - Remark: Generated from `#/paths/apps.manifest.export/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.export/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// The ID of the app whose configuration you want to export as a manifest.
                    ///
                    /// - Remark: Generated from `#/paths/apps.manifest.export/POST/requestBody/json/app_id`.
                    public var appId: Swift.String
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - appId: The ID of the app whose configuration you want to export as a manifest.
                    public init(appId: Swift.String) {
                        self.appId = appId
                    }

                    public enum CodingKeys: String, CodingKey {
                        case appId = "app_id"
                    }
                }

                /// - Remark: Generated from `#/paths/apps.manifest.export/POST/requestBody/content/application\/json`.
                case json(Operations.AppsManifestExport.Input.Body.JsonPayload)
            }

            public var body: Operations.AppsManifestExport.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AppsManifestExport.Input.Headers = .init(),
                body: Operations.AppsManifestExport.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }

        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.export/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps.manifest.export/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsManifestExportResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AppsManifestExportResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                body
                            }
                        }
                    }
                }

                /// Received HTTP response body
                public var body: Operations.AppsManifestExport.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppsManifestExport.Output.Ok.Body) {
                    self.body = body
                }
            }

            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps.manifest.export/post(appsManifestExport)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppsManifestExport.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppsManifestExport.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self,
                        )
                    }
                }
            }

            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }

        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }

            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    string
                case .json:
                    "application/json"
                }
            }

            public static var allCases: [Self] {
                [
                    .json,
                ]
            }
        }
    }

    public enum AppsManifestUpdate {
        public static let id: Swift.String = "appsManifestUpdate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps.manifest.update/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestUpdate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestUpdate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }

            public var headers: Operations.AppsManifestUpdate.Input.Headers
            /// - Remark: Generated from `#/paths/apps.manifest.update/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.update/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// The ID of the app whose configuration you want to update.
                    ///
                    /// - Remark: Generated from `#/paths/apps.manifest.update/POST/requestBody/json/app_id`.
                    public var appId: Swift.String
                    /// A JSON app manifest encoded as a string. This manifest must use a valid app manifest schema - read our guide to creating one. As this method entirely replaces any previous
                    /// configuration, manifest must contain both unmodified and modified fields.
                    ///
                    /// - Remark: Generated from `#/paths/apps.manifest.update/POST/requestBody/json/manifest`.
                    public var manifest: OpenAPIRuntime.OpenAPIObjectContainer
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - appId: The ID of the app whose configuration you want to update.
                    ///   - manifest: A JSON app manifest encoded as a string. This manifest must use a valid app manifest schema - read our guide to creating one. As this method entirely replaces any
                    /// previous configuration, manifest must contain both unmodified and modified fields.
                    public init(
                        appId: Swift.String,
                        manifest: OpenAPIRuntime.OpenAPIObjectContainer
                    ) {
                        self.appId = appId
                        self.manifest = manifest
                    }

                    public enum CodingKeys: String, CodingKey {
                        case appId = "app_id"
                        case manifest
                    }
                }

                /// - Remark: Generated from `#/paths/apps.manifest.update/POST/requestBody/content/application\/json`.
                case json(Operations.AppsManifestUpdate.Input.Body.JsonPayload)
            }

            public var body: Operations.AppsManifestUpdate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AppsManifestUpdate.Input.Headers = .init(),
                body: Operations.AppsManifestUpdate.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }

        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.update/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps.manifest.update/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsManifestUpdateResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AppsManifestUpdateResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                body
                            }
                        }
                    }
                }

                /// Received HTTP response body
                public var body: Operations.AppsManifestUpdate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppsManifestUpdate.Output.Ok.Body) {
                    self.body = body
                }
            }

            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps.manifest.update/post(appsManifestUpdate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppsManifestUpdate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppsManifestUpdate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self,
                        )
                    }
                }
            }

            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }

        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }

            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    string
                case .json:
                    "application/json"
                }
            }

            public static var allCases: [Self] {
                [
                    .json,
                ]
            }
        }
    }

    public enum AppsManifestValidate {
        public static let id: Swift.String = "appsManifestValidate"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps.manifest.validate/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestValidate.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsManifestValidate.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }

            public var headers: Operations.AppsManifestValidate.Input.Headers
            /// - Remark: Generated from `#/paths/apps.manifest.validate/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.validate/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// The manifest to be validated. Will be validated against the app manifest schema - read our guide.
                    ///
                    /// - Remark: Generated from `#/paths/apps.manifest.validate/POST/requestBody/json/manifest`.
                    public var manifest: Swift.String
                    /// The ID of the app whose configuration you want to validate.
                    ///
                    /// - Remark: Generated from `#/paths/apps.manifest.validate/POST/requestBody/json/app_id`.
                    public var appId: Swift.String?
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - manifest: The manifest to be validated. Will be validated against the app manifest schema - read our guide.
                    ///   - appId: The ID of the app whose configuration you want to validate.
                    public init(
                        manifest: Swift.String,
                        appId: Swift.String? = nil
                    ) {
                        self.manifest = manifest
                        self.appId = appId
                    }

                    public enum CodingKeys: String, CodingKey {
                        case manifest
                        case appId = "app_id"
                    }
                }

                /// - Remark: Generated from `#/paths/apps.manifest.validate/POST/requestBody/content/application\/json`.
                case json(Operations.AppsManifestValidate.Input.Body.JsonPayload)
            }

            public var body: Operations.AppsManifestValidate.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AppsManifestValidate.Input.Headers = .init(),
                body: Operations.AppsManifestValidate.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }

        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.manifest.validate/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps.manifest.validate/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsManifestValidateResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AppsManifestValidateResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                body
                            }
                        }
                    }
                }

                /// Received HTTP response body
                public var body: Operations.AppsManifestValidate.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppsManifestValidate.Output.Ok.Body) {
                    self.body = body
                }
            }

            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps.manifest.validate/post(appsManifestValidate)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppsManifestValidate.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppsManifestValidate.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self,
                        )
                    }
                }
            }

            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }

        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }

            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    string
                case .json:
                    "application/json"
                }
            }

            public static var allCases: [Self] {
                [
                    .json,
                ]
            }
        }
    }

    public enum AppsUninstall {
        public static let id: Swift.String = "appsUninstall"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/apps.uninstall/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsUninstall.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppsUninstall.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }

            public var headers: Operations.AppsUninstall.Input.Headers
            /// - Remark: Generated from `#/paths/apps.uninstall/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.uninstall/POST/requestBody/json`.
                public struct JsonPayload: Codable, Hashable, Sendable {
                    /// Issued when you created your application.
                    ///
                    /// - Remark: Generated from `#/paths/apps.uninstall/POST/requestBody/json/client_id`.
                    public var clientId: Swift.String
                    /// Issued when you created your application.
                    ///
                    /// - Remark: Generated from `#/paths/apps.uninstall/POST/requestBody/json/client_secret`.
                    public var clientSecret: Swift.String
                    /// Creates a new `JsonPayload`.
                    ///
                    /// - Parameters:
                    ///   - clientId: Issued when you created your application.
                    ///   - clientSecret: Issued when you created your application.
                    public init(
                        clientId: Swift.String,
                        clientSecret: Swift.String
                    ) {
                        self.clientId = clientId
                        self.clientSecret = clientSecret
                    }

                    public enum CodingKeys: String, CodingKey {
                        case clientId = "client_id"
                        case clientSecret = "client_secret"
                    }
                }

                /// - Remark: Generated from `#/paths/apps.uninstall/POST/requestBody/content/application\/json`.
                case json(Operations.AppsUninstall.Input.Body.JsonPayload)
            }

            public var body: Operations.AppsUninstall.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AppsUninstall.Input.Headers = .init(),
                body: Operations.AppsUninstall.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }

        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/apps.uninstall/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/apps.uninstall/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AppsUninstallResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AppsUninstallResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                body
                            }
                        }
                    }
                }

                /// Received HTTP response body
                public var body: Operations.AppsUninstall.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppsUninstall.Output.Ok.Body) {
                    self.body = body
                }
            }

            /// OK
            ///
            /// - Remark: Generated from `#/paths//apps.uninstall/post(appsUninstall)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppsUninstall.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppsUninstall.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self,
                        )
                    }
                }
            }

            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }

        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }

            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    string
                case .json:
                    "application/json"
                }
            }

            public static var allCases: [Self] {
                [
                    .json,
                ]
            }
        }
    }
}
#endif
