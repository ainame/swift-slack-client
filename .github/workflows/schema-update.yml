name: Schema Update

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  schema-update:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Swiftly
        uses: vapor/swiftly-action@v0.2

      - name: Cache SwiftFormat
        id: cache-swiftformat
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/swiftformat
          key: ${{ runner.os }}-swiftformat-0.56.2

      - name: Install SwiftFormat
        if: steps.cache-swiftformat.outputs.cache-hit != 'true'
        run: |
          git clone --depth 1 --branch 0.56.2 https://github.com/nicklockwood/SwiftFormat.git
          cd SwiftFormat
          swift build -c release
          sudo cp .build/release/swiftformat /usr/local/bin/
          cd ..
          rm -rf SwiftFormat

      - name: Cache Swift build
        uses: actions/cache@v4
        with:
          path: .build
          key: ${{ runner.os }}-swift-build-${{ hashFiles('Package.swift', 'Package.resolved') }}

      - name: Install quicktype
        run: |
          # Node.js is pre-installed on Ubuntu runners
          sudo npm install -g quicktype

      - name: Update schemas
        id: update
        run: |
          # Update submodules to latest
          make update

          # Generate code
          make generate

          # Check if there are any changes in generated source code (not just submodules)
          if [[ -n $(git status --porcelain Sources/) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Generated code changes detected"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No generated code changes - only submodule updates"
          fi

      - name: Run tests
        if: steps.update.outputs.changes == 'true'
        run: swift test

      - name: Create Pull Request
        if: steps.update.outputs.changes == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          add-paths: |
            Sources/
            .dependencies/
          commit-message: |
            Update Slack API schemas

            This is an automated update of the Slack API schemas from upstream sources.
          branch: automated/schema-update-${{ github.run_number }}
          delete-branch: true
          title: 'Update Slack API schemas'
          body-path: .github/pull_request_templates/schema-update.md
          labels: |
            schema-update
          reviewers: ainame

      - name: Mark commit with test status
        if: steps.update.outputs.changes == 'true' && steps.create-pr.outputs.pull-request-number
        run: |
          # Get the commit SHA from the created PR
          COMMIT_SHA="${{ steps.create-pr.outputs.pull-request-head-sha }}"

          # Create a successful status check
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/statuses/$COMMIT_SHA \
            -d '{
              "state": "success",
              "target_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
              "description": "Tests passed for schema update",
              "context": "test"
            }'
